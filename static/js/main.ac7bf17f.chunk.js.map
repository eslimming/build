{"version":3,"sources":["types/types.js","store/store.js","reducers/AuthReducer.js","actions/authLogin.js","pages/Layout/Layout.js","services/auth.services.js","pages/Login/Login.js","actions/msgError.js","components/common/DatTab/DatTabDataAPI.js","services/auth-header.js","services/base.services.js","components/formDS/miRadioGroup.js","components/formDS/miTextArea.js","components/formDS/miInputNumber.js","components/formDS/miInputText.js","components/formDS/miInputTextPassword.js","components/formDS/miInputTag.js","components/formDS/miInputTextDataRange.js","components/formDS/miInputTagMF.js","components/formDS/miSelector.js","components/formDS/miSelector_run_serve_criteria.js","components/formDS/miGauge.js","components/formDS/miDatePicker.js","components/fileupload/miFileUpload.js","components/formDS/Grupos.js","components/formDS/Formulario.js","components/common/DatTab/DatTabDS.js","pages/DataSources/DataSources.js","components/form/miRadioGroup.js","components/form/miCheckBox.js","components/form/miTextArea.js","components/form/miInputNumber.js","components/form/miInputText.js","components/form/miInputTextMCS.js","components/form/miInputTextDataRange.js","components/form/miInputTag.js","components/form/miInputTagMF.js","components/form/miSelector.js","components/form/miSelector_run_serve_criteria.js","components/form/miGauge.js","components/form/miDatePicker.js","components/form/Grupos.js","components/form/Formulario.js","components/common/DatTab/DatTabModels.js","pages/Models/Models.js","pages/SubirCSV/csv.js","pages/Plots/BoxPlot.js","pages/Plots/ParallelPlot.js","components/charts/HighCharts/HChartDataAPI.js","components/charts/HighCharts/HChart.js","pages/Process/Process.js","RouteConfig.js","index.js","../node_modules/typescript/lib sync"],"names":["types","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","login","state","action","type","data","token","store","createStore","applyMiddleware","thunk","payload","Layout","props","dispatch","useDispatch","stateRedux","useSelector","useState","user","JSON","parse","localStorage","getItem","sidebarCollapsed","logoCompany","isDark","setState","setItem","useEffect","Object","keys","length","toggleTheme","ThemeType","Dark","iconText","text","icon","style","textAlign","marginBottom","className","menu","logo","logoUrl","isForge","title","onMenuToggle","noIcons","collapsed","Sidebar","to","Item","onClick","titulo","content","root","name","Content","width","component","href","API_URL","exportedObject","register","username","email","password","axios","post","Usuario","Password","then","response","stringify","catch","error","console","log","logout","removeItem","getCurrentUser","changePassword","idUser","oldPass","newPass","ReactToastify","require","Login","setUser","pass","setPass","load","setLoad","history","useHistory","getData","e","a","preventDefault","servicesAuth","msg","push","display","flexDirection","placeholder","label","value","onChange","fluid","size","marginTop","disabled","actionType","loading","copyrightText","src","alt","marginRight","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","position","toastClassName","DataTabDataAPI","fields","index","field","datos","authHeader","Authorization","body","url","get","headers","timeout","delData","delete","postData","postFileUpload","getCSVTags","RadioGroup","handleOnChange","dato","val","onDato","textInput","focus","setTextInputRef","element","focusTextInput","b","nvalue","this","items","map","item","idGrupo","Fragment","ref","color","empty","checked","handleChecked","key","id","React","Component","TextoArea","fileError","acceptedFiles","rejectedFiles","InputNumber","isNaN","onRemoveDato","min","rows","handleOnChangeTag","vTag","tag","desc","vDesc","ds","vDS","handleOnChangeDesc","handleOnChangeDS","baseServices","datasources","options","Gauge","showTooltips","Pane","y","useDial","dial","backgroundColor","CenterBlock","fontSize","YAxis","variant","PlotBand","from","max","DTPicker","document","activeElement","blur","languageCode","helperText","closeOnDocumentClick","reserveSpace","displayFormat","readOnly","showYearSelector","DTformatOptions","FileUpload","resetButtonText","setResponseAPI","formatDT","setFormatDT","loader","setLoader","setBodyDS","minHeight","buttonText","acceptedTypes","maxSize","onAccepted","files","test","onRejected","onReset","file","formData","FormData","append","filename","idPregunta","Respuesta","bodypost","responseDS","location","reload","ex","Dibuja","dibujar","Row","Cell","General","handleDato","onhandleGeneralDato","handleRemoveDato","onhandleGeneralRemoveDato","activeName","tagItem","newTags","Pagina","Header","HeaderCell","Body","Footer","align","config","ToastNotification","closeToast","Texto","Detalle","severity","onCloseClick","hasIcon","detailsText","replaceAll","onDetailsClick","App","respuestas","handleGeneralRemoveDato","nitems","filter","c","nitems2","nitem","concat","split","keyPageFile","ndatos","parseInt","ndatos2","ndato","ndatos3","Preguntas_Respondidas","ndatos4","handleGeneralDato","indexOf","handleNewTag","hojas","slice","newTagsArray","hojaTags","isLoading","hidden","activePage","apiBody","modal","modalFin","Preguntas_Todas","Preguntas_Faltantes","Situacion_Final","Color_Situacion_Final","MensajeAPI","click_Next","bind","click_Prev","click_Send","click_ModalSi","click_ModalNo","Pregunta","includes","mensaje","page","Number","pageSize","toast","replace","scrollTo","renderModal","renderModalFin","colspan","click_ModalFin","iconPosition","autoClose","height","top","left","marginLeft","closeIcon","onClose","open","closeOnDimmerClick","DatTab","setModal","add","setAdd","addCsv","setAddCsv","setId","selectedRow","setSelectedRow","setIsLoading","bodydel","handleAdd","Tipo","Severity","DataTable","HeaderBar","conn_id","search","scrollable","scrollHeight","reorderableColumns","resizableColumns","i","Column","header","sortable","editable","editFieldType","Pagination","selection","onSelectionChange","selectionMode","onCellClick","rowIndex","innerWidth","DataSources","xsWidth","sWidth","mWidth","lWidth","xlWidth","DatTabDS","toggle","on","target","lastchr","valor","unidad","handleOnChangeOF","regexINT","datoVal","numVal","charAt","vOF","of","csv","tagsINPUT","resp","forEach","tagsCSV","att","dato2","dato3","dato4","ntag","nds","datosAPI","modelo","DatTabModel","distModels","setDistModels","isEntrenando","setIsEntrenando","avance","setAvance","result","Map","has","model","set","postEntrena","getScriptInit","progress","setTimeout","Model","percent","circular","Models","DatTabModels","BPlot","showplot","models","setModels","getModels","texto","API","x1","x2","low","close","high","datos_features","Set","total_clusters","Array","dimensions","bodyplot","getDatos","paddingTop","x","Math","decreasing","line","increasing","fill","percentage","layout","plot_bgcolor","paper_bgcolor","font","xref","dragmode","showlegend","linewidth","xaxis","autorange","gridcolor","showdividers","dividercolor","dividerwidth","tickson","ticklen","tickcolor","tickfont","rangeslider","visible","yaxis","PPlot","setSeleccionado","labelfont","rangefont","array_to_json","bodypplot","HChartDataAPI","DatosJson","datosLine","datosBand","uniqueSeries","PrimerItem","f","j","Banda_Actual","Banda_Siguiente","datosSerie","datosBanda","Banda_From","parseFloat","cluster","DT","date","Lineas","Bandas","Highcharts","HChart","heigth","subtitle","chart","zoomType","boost","useGPUTranslations","seriesThreshold","lang","decimalPount","tooltip","credits","enabled","exporting","legend","yAxis","gridLineWidth","xAxis","plotBands","colors","series","highcharts","constructorType","class","Procesos","bodymop","body0","padding","RouteConfig","PrivateRoute","children","rest","render","path","exact","route","Process","BoxPlot","ParallelPlot","ReactDOM","getElementById","webpackEmptyContext","req","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.ac7bf17f.chunk.js","sourcesContent":["export const types = {\n    \n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    msgSetError: '[Msg] Set Errot',\n    msgRemoveError: '[Msg] Set Error',\n\n    dataLineChart: '[DataLineChart]',  \n    \n    dataDonutChart: '[DataDonutChart]'\n}","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\nimport { authReducer } from '../reducers/AuthReducer'\n// import { msgReducer } from '../reducers/MsgReducer'\n// import { lineChartReducer } from '../reducers/LineChartReducer'\n// import { donutChartReducer } from '../reducers/DonutChartReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    login: authReducer,\n    //msgError: msgReducer,\n    //lineChartReducer: lineChartReducer,\n    //donutChartReducer: donutChartReducer\n})\n\nexport const store = createStore(\n    reducers,\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() \n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","import { types } from '../types/types';\n\nexport const authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.login:\n            return {\n                data: 'action.payload.data.data',\n                token: 'action.payload.data.token'\n            }\n        case types.logout:\n            return {}\n\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nexport const login = (data,token) => ({\n    type: types.login,\n    payload:{\n        data,\n        token\n    }\n}) ","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SidebarLayout, Footer, Header, Icon, toggleTheme, ThemeType } from '@scuf/common'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../../actions/authLogin'\r\n\r\n\r\nimport './Layout.css'\r\n//import '@scuf/common/honeywell-compact-dark/theme.css'\r\n//import \"@scuf/common/honeywell-dark/theme.css\";\r\n//import KPI from '../KPI/KPI'\r\n//import \"@scuf/datatable/honeywell-combined/theme.css\";\r\n\r\nconst Layout = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const stateRedux = useSelector(state => state)\r\n    const [state, setState] = useState({\r\n        user: JSON.parse(localStorage.getItem('user')),\r\n        sidebarCollapsed: true,\r\n        logoCompany: '../../assets/Codelco_logo.png',\r\n        isDark: true\r\n    })\r\n\r\n    localStorage.setItem('tituloHeader', \"SMART MODELER\");\r\n\r\n\r\n    // // inicial state redux\r\n    useEffect(() => {\r\n        if (Object.keys(stateRedux.login).length === 0) {\r\n            dispatch(login(JSON.parse(localStorage.getItem('user'))))\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, stateRedux.login])\r\n\r\n    useEffect(() => {\r\n        toggleTheme(ThemeType.Dark);\r\n        // toggleTheme(ThemeType.Light);\r\n    }, []\r\n    )\r\n\r\n    // const onCollapsedClick = () => {\r\n    //     setState({ ...state, sidebarCollapsed: !state.sidebarCollapsed })\r\n    // }\r\n\r\n    // const onSettingsCollapsedClick = () => {\r\n    //     setState({ ...state, settingsCollapsed: !state.settingsCollapsed })\r\n    // }\r\n\r\n\r\n    // const changeLogo = (dark) => {\r\n    //     if(dark){\r\n    //       toggleTheme(ThemeType.Dark);\r\n    //       setState({\r\n    //         ...state,\r\n    //         logoCompany: '../../assets/hydro-white.jpg',\r\n    //         isDark: dark\r\n    //       })\r\n    //     }else{\r\n    //       if(dark){\r\n    //         toggleTheme(ThemeType.Light);\r\n    //         setState({\r\n    //             ...state,\r\n    //             logoCompany: '../../assets/hydro-black.jpg',\r\n    //             isDark: dark\r\n    //         })\r\n    //       }\r\n    //     }\r\n    // }\r\n\r\n    // const tituloHeader = (titulo) => {\r\n    //     localStorage.setItem('tituloHeader', titulo);\r\n    //     return titulo\r\n    // }\r\n\r\n    // const changeLogoDark = () => {\r\n\r\n    //     if (state.isDark) {\r\n    //         toggleTheme(ThemeType.Dark);\r\n    //         setState({\r\n    //             ...state,\r\n    //             logoCompany: '../../assets/Codelco_logo.png',\r\n    //             isDark: false\r\n    //         })\r\n    //     } else {\r\n    //         toggleTheme(ThemeType.Light);\r\n    //         setState({\r\n    //             ...state,\r\n    //             logoCompany: '../../assets/Codelco_logo.png',\r\n    //             isDark: true\r\n    //         })\r\n    //     }\r\n\r\n    //     localStorage.setItem('isDark', state.isDark)\r\n    // }\r\n\r\n    // const validate = () => {\r\n    //     // const emailValidationRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    //     return {\r\n    //       // email: emailValidationRegex.test(this.state.email.trim()) ? null : 'Invalid Email',\r\n    //       name: this.state.name.trim() ? null : 'Required',\r\n    //       message: this.state.message.trim() ? null : 'Required'\r\n    //     }\r\n    // }\r\n\r\n    // const listTop = () => {\r\n    //     var list = [];\r\n    //     return list;\r\n    // }\r\n\r\n    // const ItemMenuHorizontalAPC = (title) => {\r\n    //     return <div className='item-menu'>\r\n    //         <span style={{ marginLeft: '-6px', fontWeight: '700' }}>APC</span>\r\n    //         <div style={{ textAlign: 'center' }}>{title}</div>\r\n    //     </div>\r\n    // }\r\n\r\n    // const ItemMenuHorizontal = (title, icon) => {\r\n    //     return <div className='item-menu'>\r\n    //         <Icon root='common' name={icon} exactSize={22}></Icon>\r\n    //         <div style={{ textAlign: 'center' }}>{title}</div>\r\n    //     </div>\r\n    // }\r\n\r\n    const iconText = ({ text, icon }) => {\r\n        return <div style={{ textAlign: 'center', marginBottom: '10px' }}>\r\n            {icon}\r\n            <div className='label-menu'>{text}</div>\r\n        </div>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header menu={false} logo={true} logoUrl='./honeywell-logo.svg' isForge={false} title={localStorage.getItem('tituloHeader')} onMenuToggle={() => setState({ ...state, sidebarCollapsed: !state.sidebarCollapsed })} >\r\n            </Header>\r\n\r\n\r\n            <SidebarLayout noIcons={true} collapsed={false} className=\"example-sidebar\">\r\n                <SidebarLayout.Sidebar>\r\n\r\n                    <Link to=\"/DataSources\">\r\n                        <SidebarLayout.Sidebar.Item onClick={() => setState({ ...state, titulo: \"DataSources\" })}\r\n                            content=\"DataSources\"\r\n                            icon={\r\n                                iconText({\r\n                                    //text: 'Models',\r\n                                    icon: <Icon root='common' name='CMX'></Icon>\r\n                                })}\r\n                        />\r\n                    </Link>\r\n\r\n                    <Link to=\"/Models\">\r\n                        <SidebarLayout.Sidebar.Item onClick={() => setState({ ...state, titulo: \"Models\" })}\r\n                            content=\"Models\"\r\n                            icon={\r\n                                iconText({\r\n                                    //text: 'DataSources',\r\n                                    icon: <Icon root='common' name='CMX'></Icon>\r\n                                })}\r\n                        />\r\n                    </Link>\r\n\r\n\r\n                    <Link to=\"/BPlot\">\r\n                        <SidebarLayout.Sidebar.Item onClick={() => setState({ ...state, titulo: \"Box Plot\" })}\r\n                            content=\"Box Plot\"\r\n                            icon={\r\n                                iconText({\r\n                                    //text: 'DataSources',\r\n                                    icon: <Icon root='common' name='increasing'></Icon>\r\n                                })}\r\n                        />\r\n                    </Link>\r\n\r\n                    <Link to=\"/PPlot\">\r\n                        <SidebarLayout.Sidebar.Item onClick={() => setState({ ...state, titulo: \"Parallel Plot\" })}\r\n                            content=\"Parallel Plot\"\r\n                            icon={\r\n                                iconText({\r\n                                    //text: 'DataSources',\r\n                                    icon: <Icon root='common' name='increasing'></Icon>\r\n                                })}\r\n                        />\r\n                    </Link>\r\n\r\n                    <Link to=\"/Modos de Operacion\">\r\n                        <SidebarLayout.Sidebar.Item onClick={() => setState({ ...state, titulo: \"Modos de Operacion\" })}\r\n                            content=\"Modos de Operacion\"\r\n                            icon={\r\n                                iconText({\r\n                                    //text: 'DataSources',\r\n                                    icon: <Icon root='common' name='increasing'></Icon>\r\n                                })}\r\n                        />\r\n                    </Link>\r\n\r\n                    <br /><br /><br /><br /><br />\r\n                    <br /><br /><br /><br /><br />\r\n                    <br /><br /><br /><br /><br />\r\n\r\n\r\n                </SidebarLayout.Sidebar>\r\n                <SidebarLayout.Content>\r\n                    <div style={{ width: '100%', marginBottom: '0px' }} className='m-0 p-0'>\r\n                        {props.component}\r\n                    </div>\r\n                </SidebarLayout.Content>\r\n            </SidebarLayout>\r\n\r\n            <Footer className='footer'>\r\n                <Footer.Item href=\"#\">Terms & Conditions</Footer.Item>\r\n                <Footer.Item href=\"#\">Privacy Policy</Footer.Item>\r\n            </Footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout","import axios from \"axios\";\n//const API_URL = 'https://apialunorte.kairosmining.com/auth/'\nconst API_URL = 'https://apikairos.kairosmining.com/auth/'\n// const API_URL = 'http://localhost:5000/auth/';\n\nconst register = (username, email, password) => {\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password,\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"login\", { Usuario: username, Password: password })\n    .then((response) => {\n      if (response.data) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      return response;\n    }).catch((error) => {\n      console.log(error.response.data);\n      return error.response.data;\n    });\n};\n\nconst changePassword = (idUser, oldPass, newPass) => {\n  return axios\n    .post(API_URL + \"changePassword\", {\n      idUser: idUser,\n      oldPass: oldPass,\n      newPass: newPass,\n    })\n    .then((response) => {\n      // console.log(response);\n      if (response.data) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      return response;\n    }).catch((error) => {\n      // console.log(error.response.data);\n      return error.response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst exportedObject = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  changePassword\n}\n\nexport default exportedObject","import React, { useState } from 'react'\nimport { Card, Button, Input, Header, Footer, toggleTheme, ThemeType } from '@scuf/common' //, ToastNotification\nimport { useHistory } from \"react-router-dom\"\nimport { useDispatch } from 'react-redux'\n\nimport { login } from '../../actions/authLogin'\nimport { msgError, removeError } from '../../actions/msgError'\nimport servicesAuth from '../../services/auth.services'\n\n//import '@scuf/common/honeywell-compact-combined/theme.css'\n//import '@scuf/common/honeywell-compact-dark/theme.css'\n//import \"@scuf/common/honeywell-dark/theme.css\";\n//import \"@scuf/common/honeywell-dark/theme.css\";\n\n\nimport './Login.css'\n\nconst ReactToastify = require('react-toastify')\n\nconst Login = () => {\n\n    const dispatch = useDispatch();\n\n    var logo = 'https://www.honeywell.com/content/dam/honeywell/en-us/images/HON%20logo_200x37.png';\n    localStorage.setItem('tituloHeader', \"SMART MODELER\");\n\n    const [user, setUser] = useState('')\n    const [pass, setPass] = useState('')\n    const [load, setLoad] = useState(false);\n\n    let history = useHistory();\n    toggleTheme(ThemeType.Dark);\n\n    //history.push('/DataSources');\n\n    const getData = async (e) => {\n\n        e.preventDefault()\n        setLoad(true);\n        await servicesAuth.login(user, pass).then(\n            (response) => {\n                setLoad(false);\n                if (response.error) {\n                    dispatch(msgError(response.error))\n                    // messageToast(response.error);\n                    return;\n                }\n                dispatch(login(response.data))\n                setLoad(false)\n                dispatch(removeError())\n                history.push('/Analitica')\n            },\n            (error) => {\n                console.log(error);\n                setLoad(false);\n            });\n    };\n\n    // const messageToast = (title) => {\n    //     ReactToastify.toast(<ToastNotification  closeToast={false} title={title}/>)\n    // }\n\n\n    return (\n        <>\n            <div className=\"login-page\" />\n            <div className='mx-auto'>\n                <Card>\n                    <Header isForge={true} title=\"WALL DISPLAY\" menu={false} >\n                    </Header>\n                    <Card.Content>\n                        <h3 className='mb-3 text-center'>Log In</h3 >\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <Input\n                                className=\"input-custom\"\n                                placeholder=\"Enter in this field\"\n                                label=\"Username\"\n                                value={user}\n                                onChange={e => setUser(e)}\n                                type=\"text\"\n                                fluid={true}\n                            />\n                            <Input\n                                className=\"input-custom\"\n                                placeholder=\"Enter in this field\"\n                                label=\"Password\"\n                                value={pass}\n                                onChange={e => setPass(e)}\n                                type=\"password\"\n                                fluid={true}\n                            />\n                            <br></br>\n                            <Button type=\"primary\"\n                                size=\"small\"\n                                style={{ marginTop: '10px' }}\n                                disabled={load}\n                                onClick={getData}\n                                content=\"Log In\"\n                                actionType=\"submit\"\n                                loading={load}\n                            />\n                        </div>\n                    </Card.Content>\n                    <Footer copyrightText=\"Powered by Kairos Mining\" style={{ display: 'none' }}>\n                        <Footer.Item href=\"#\" >\n                            <img\n                                src={logo}\n                                alt=\"Logo\"\n                                style={{ width: '80px', marginRight: '120px' }}\n                            />\n                        </Footer.Item>\n                    </Footer>\n                </Card>\n            </div>\n\n            <ReactToastify.ToastContainer\n                hideProgressBar={true}\n                closeOnClick={false}\n                closeButton={false}\n                newestOnTop={true}\n                position=\"bottom-right\"\n                toastClassName=\"toast-notification-wrap\"\n            />\n\n        </>\n    )\n}\n\nexport default Login\n","import { types } from \"../types/types\";\n\nexport const msgError = (msg) => ({\n    type: types.msgSetError,\n    payload:{\n        msg\n    }\n}) \n\nexport const removeError = () => ({\n    type: types.msgRemoveError\n}) ","\nconst DataTabDataAPI = (response) => {\n\n    var keys = Object.keys(response.data[0]);\n    var fields = [];\n\n\n    for (let index = 0; index < keys.length; index++) {\n        fields.push(\n            { field: keys[index] }\n        )\n    }\n\n\n    return { datos: response.data, fields: fields }\n\n\n\n}\n\nexport default DataTabDataAPI\n\n\n\n\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.token) {\n    return { Authorization: 'Bearer ' + user.token };\n  } else {\n    return { Authorization: 'Bearer QWERTY' };\n    //return {};\n  }\n}","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\n//require('dotenv').config();\r\n\r\n\r\nconst HOST_IP = '10.63.2.160';\r\n//const HOST_IP = window.Configs.PA_DOCKER_HOST;\r\n//const HOST_IP = process.env.REACT_APP_DOCKER_HOST;\r\n\r\n//const API_URL = 'http://10.63.2.128:8003/api/';\r\nconst API_URL = 'http://' + HOST_IP + ':8003/api/';\r\n//const API_URL = 'http://' + HOST_IP + ':8002/api/';\r\n\r\n//console.log(process.env);\r\n\r\nconst getData = (body, url) => {\r\n  console.log(API_URL + url + body)\r\n  return axios.get(API_URL + url + body, { headers: authHeader(), timeout: 45000 });\r\n\r\n};\r\n\r\nconst delData = (body, url) => {\r\n  console.log(API_URL + url + body)\r\n  return axios.delete(API_URL + url + body, { headers: authHeader(), timeout: 45000 });\r\n};\r\n\r\nconst postData = (body, url) => {\r\n  console.log(API_URL + url + body)\r\n\r\n  return axios.post(API_URL + url, body, { headers: authHeader(), timeout: 45000 });\r\n};\r\n\r\n\r\n\r\nconst postFileUpload = (body, url) => {\r\n  //console.log(API_URL + url + body)\r\n  return axios.post(url, body, { headers: authHeader(), timeout: 300000 });\r\n};\r\n\r\nconst getCSVTags = (body, url) => {\r\n  //console.log(API_URL + url + body)\r\n  return axios.get(url + body, { headers: authHeader(), timeout: 45000 });\r\n};\r\n\r\n\r\nconst exportedObject = {\r\n  getData,\r\n  delData,\r\n  postData,\r\n  postFileUpload,\r\n  getCSVTags\r\n}\r\n\r\nexport default exportedObject","import React from \"react\";\r\nimport { Radio, Badge } from '@scuf/common';\r\n\r\nexport default class RadioGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n\r\n        this.textInput = null;\r\n        this.setTextInputRef = element => {\r\n            this.textInput = element;\r\n        };\r\n        this.focusTextInput = () => {\r\n            if (this.textInput) this.textInput.focus();\r\n        };\r\n\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n        this.textInput.focus();\r\n        /*window.scrollTo(1, 100);*/\r\n    }\r\n\r\n    handleChecked(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value ? item.label : nvalue\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n            <React.Fragment>\r\n                <button className=\"oculto\" ref={this.setTextInputRef} />\r\n                <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        <Radio key={item.id}\r\n                            label={item.label}\r\n                            disabled={false}\r\n                            name=\"RadioGroup\"\r\n                            checked={this.handleChecked(this.state.value, item.label)}\r\n                            onChange={() => this.handleOnChange({ key: idGrupo, id: item.id, val: item.label })}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { TextArea, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n                        {item.label}\r\n                        <TextArea\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Badge } from '@scuf/common';\r\n\r\nexport default class InputNumber extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: 0,\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        if (!isNaN(dato.val)) {\r\n            this.setState({ value: dato.val });\r\n            this.props.onDato(dato);\r\n        }\r\n        else {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Input\r\n                            //placeholder={\"Valor Numérico\"}\r\n                            type={\"number\"}\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            min={0}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            this.props.onDato(dato);\r\n        }\r\n    }\r\n\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Input\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            this.props.onDato(dato);\r\n        }\r\n    }\r\n\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Input\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            type={\"password\"}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, Badge } from '@scuf/common';\r\nimport baseServices from '../../services/base.services';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: { tag: \"\", desc: \"\", ds: \"\" },\r\n            vTag: \"\",\r\n            vDesc: \"\",\r\n            vDS: \"\",\r\n            datasources: \"\"\r\n        };\r\n    }\r\n\r\n    handleOnChangeTag = (dato) => {\r\n        this.setState({ vTag: dato.val });\r\n        this.setState({ value: { tag: dato.val, desc: this.state.vDesc, ds: this.state.vDS } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (dato.val && !dato.val == \"\" && this.state.vDesc && !this.state.vDesc == \"\" && this.state.vDS && !this.state.vDS == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: dato.val, desc: this.state.vDesc, ds: this.state.vDS } });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeDesc = (dato) => {\r\n        //this.setState({ value: dato.val });\r\n        this.setState({ vDesc: dato.val });\r\n        this.setState({ value: { tag: this.state.vTag, desc: dato.val, ds: this.state.vDS } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vTag && !this.state.vTag == \"\" && dato.val && !dato.val == \"\" && this.state.vDS && !this.state.vDS == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: this.state.vTag, desc: dato.val, ds: this.state.vDS } });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeDS = (dato) => {\r\n        //this.setState({ value: dato.val });\r\n        this.setState({ vDS: dato.val });\r\n        this.setState({ value: { tag: this.state.vTag, desc: this.state.vDesc, ds: dato.val } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vTag && !this.state.vTag == \"\" && this.state.vDesc && !this.state.vDesc == \"\" && dato.val && !dato.val == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: this.state.vTag, desc: this.state.vDesc, ds: dato.val } });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        this.getData();\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n        this.setState({ vTag: nvalue.tag });\r\n        this.setState({ vDesc: nvalue.desc });\r\n        this.setState({ vDS: nvalue.ds });\r\n        //console.log(this.props.items)\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    getData = async () => {\r\n        try {\r\n            const url = 'datasources'\r\n            const body = '?id=0'\r\n            var response = await baseServices.getData(body, url);\r\n            this.setState({ datasources: response })\r\n        } catch (err) { }\r\n        //console.log(this.state.datasources.data);\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {/* {JSON.stringify(this.state.value)}<br /> */}\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        {/* <Badge color={(this.state.value === \"\" || this.state.value.tag === \"\" || this.state.value.desc === \"\" || this.state.value.ds === \"\" || !this.state.value.tag || !this.state.value.desc || !this.state.value.ds) ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge> */}\r\n                        {item.label}\r\n                        <Input\r\n                            key={item.id + 10}\r\n                            placeholder={\"Ingrese el Nombre del Tag\"}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value.tag}\r\n                            onChange={(value) => this.handleOnChangeTag({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n                        <Select\r\n                            key={item.id + 20}\r\n                            placeholder={\"Seleccione la Descripcion del Tag\"}\r\n                            fluid={true}\r\n                            options={[{ value: 'model_feature', text: 'model_feature' }, { value: 'model_validation', text: 'model_validation' }]}\r\n                            value={this.state.value.desc}\r\n                            onChange={(value) => this.handleOnChangeDesc({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n                        <Select\r\n                            key={item.id + 30}\r\n                            placeholder={\"Seleccione el Data Source\"}\r\n                            fluid={true}\r\n                            //options={[{ value: 'mongo_results_dmh', text: 'mongo_results_dmh' }, { value: 'mongo_data_coord', text: 'mongo_data_coord' }, { value: 'mongo_data_pervsent', text: 'mongo_data_pervsent' }, { value: 'SGO3', text: 'SGO3' }]}\r\n                            options={this.state.datasources.data ? this.state.datasources.data : [{}]}\r\n                            value={this.state.value.ds}\r\n                            onChange={(value) => this.handleOnChangeDS({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        const lastchr = dato.val.slice(-1);\r\n        var valor = \"\";\r\n        if (lastchr == '' || lastchr == '0' || lastchr == '1' || lastchr == '2' || lastchr == '3' || lastchr == '4' || lastchr == '5' || lastchr == '5' || lastchr == '6' || lastchr == '7' || lastchr == '8' || lastchr == '9' || lastchr == 'h' || lastchr == 'd' || lastchr == 'w' || lastchr == 'm' || lastchr == 'y') {\r\n            if (dato.val == 'h' || dato.val == 'd' || dato.val == 'w' || dato.val == 'm' || dato.val == 'y') {\r\n                this.setState({ value: \"\" });\r\n                this.props.onRemoveDato({ key: dato.key, id: dato.id, val: \"\" });\r\n            }\r\n            else if (lastchr == 'h' || lastchr == 'd' || lastchr == 'w' || lastchr == 'm' || lastchr == 'y') {\r\n                valor = dato.val.replaceAll('h', '').replaceAll('d', '').replaceAll('w', '').replaceAll('m', '').replaceAll('y', '') + lastchr;\r\n                this.setState({ value: valor });\r\n                if (dato.val === \"\") {\r\n                    this.props.onRemoveDato({ key: dato.key, id: dato.id, val: \"\" });\r\n                }\r\n                else {\r\n                    this.props.onDato({ key: dato.key, id: dato.id, val: valor });\r\n                }\r\n            }\r\n            else if (lastchr == '0' || lastchr == '1' || lastchr == '2' || lastchr == '3' || lastchr == '4' || lastchr == '5' || lastchr == '5' || lastchr == '6' || lastchr == '7' || lastchr == '8' || lastchr == '9') {\r\n                var unidad = 'd'\r\n                if (dato.val.includes('h')) { unidad = 'h' }\r\n                else if (dato.val.includes('d')) { unidad = 'd' }\r\n                else if (dato.val.includes('w')) { unidad = 'w' }\r\n                else if (dato.val.includes('m')) { unidad = 'm' }\r\n                else if (dato.val.includes('y')) { unidad = 'y' }\r\n                valor = dato.val.replaceAll('h', '').replaceAll('d', '').replaceAll('w', '').replaceAll('m', '').replaceAll('y', '') + unidad;\r\n                this.setState({ value: valor });\r\n                if (dato.val === \"\") {\r\n                    this.props.onRemoveDato({ key: dato.key, id: dato.id, val: \"\" });\r\n                }\r\n                else {\r\n                    this.props.onDato({ key: dato.key, id: dato.id, val: valor });\r\n                }\r\n            }\r\n            else {\r\n                this.setState({ value: dato.val });\r\n                if (dato.val === \"\") {\r\n                    this.props.onRemoveDato({ key: dato.key, id: dato.id, val: this.state.value });\r\n                }\r\n                else {\r\n                    this.props.onDato({ key: dato.key, id: dato.id, val: this.state.value });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Input\r\n                            placeholder={\"N° seguido del periodo (h,d,w,m,y). Ejemplo: 5d\"}\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, Badge } from '@scuf/common';\r\nimport baseServices from '../../services/base.services';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: { tag: \"\", desc: \"\", ds: \"\" },\r\n            vTag: \"\",\r\n            vDesc: \"\",\r\n            vDS: \"\",\r\n            datasources: \"\"\r\n        };\r\n    }\r\n\r\n    handleOnChangeTag = (dato) => {\r\n        this.setState({ vTag: dato.val });\r\n        this.setState({ value: { tag: dato.val, desc: 'model_feature', ds: this.state.vDS } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vDS && !this.state.vDS == \"\" && dato.val && !dato.val == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: dato.val, desc: 'model_feature', ds: this.state.vDS } });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeDS = (dato) => {\r\n        //this.setState({ value: dato.val });\r\n        this.setState({ vDS: dato.val });\r\n        this.setState({ value: { tag: this.state.vTag, desc: 'model_feature', ds: dato.val } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vTag && !this.state.vTag == \"\" && dato.val && !dato.val == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: this.state.vTag, desc: 'model_feature', ds: dato.val } });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        this.getData();\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n        this.setState({ vTag: nvalue.tag });\r\n        this.setState({ vDesc: 'model_feature' });\r\n        this.setState({ vDS: nvalue.ds });\r\n        //console.log(this.props.items)\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    getData = async () => {\r\n        try {\r\n            const url = 'datasources'\r\n            const body = '?id=0'\r\n            var response = await baseServices.getData(body, url);\r\n            this.setState({ datasources: response })\r\n        } catch (err) { }\r\n        //console.log(this.state.datasources.data);\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {/* {JSON.stringify(this.state.value)}<br /> */}\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={(this.state.value === \"\" || this.state.value.tag === \"\" || this.state.value.desc === \"\" || this.state.value.ds === \"\" || !this.state.value.tag || !this.state.value.desc || !this.state.value.ds) ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Input\r\n                            key={item.id + 10}\r\n                            placeholder={\"Ingrese el Nombre del Tag\"}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value.tag}\r\n                            onChange={(value) => this.handleOnChangeTag({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n                        <Select\r\n                            key={item.id + 30}\r\n                            placeholder={\"Seleccione el Data Source\"}\r\n                            fluid={true}\r\n                            //options={[{ value: 'mongo_results_dmh', text: 'mongo_results_dmh' }, { value: 'mongo_data_coord', text: 'mongo_data_coord' }, { value: 'mongo_data_pervsent', text: 'mongo_data_pervsent' }, { value: 'SGO3', text: 'SGO3' }]}\r\n                            options={this.state.datasources.data ? this.state.datasources.data : [{}]}\r\n                            value={this.state.value.ds}\r\n                            onChange={(value) => this.handleOnChangeDS({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Select, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Select\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            options={[{ value: 'mongodb', text: 'mongodb' }, { value: 'mssql', text: 'mssql' }]}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Select, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Select\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            options={[{ value: 'last', text: 'last' }]}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Chart } from '@scuf/charts';\r\nimport { Slider } from '@scuf/common';\r\nimport \"@scuf/common/honeywell-dark/theme.css\";\r\nimport '@scuf/charts/honeywell-dark/theme.css'\r\n\r\nexport default class Gauge extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        if (!isNaN(dato.val)) {\r\n            this.setState({ value: dato.val });\r\n            this.props.onDato(dato);\r\n        }\r\n        else {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue == '' ? 0 : nvalue });\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n            <div>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        <Chart showTooltips={false}>\r\n                            <Chart.Pane />\r\n                            <Chart.Gauge data={[{ y: value }]} useDial={true} dial={[{ backgroundColor: \"red\" }]}>\r\n                                <Chart.CenterBlock>\r\n                                    <span style={{ fontSize: '2rem' }}>{value < 40 ? \"Recarga\" : value > 60 ? \"Sobrecarga\" : \"Normal\"}</span>\r\n                                </Chart.CenterBlock>\r\n                            </Chart.Gauge>\r\n                            <Chart.YAxis variant=\"gauge\">\r\n                                <Chart.PlotBand from={0} to={39} variant=\"gauge\" color=\"red\" />\r\n                                <Chart.PlotBand from={40} to={60} variant=\"gauge\" color=\"green\" />\r\n                                <Chart.PlotBand from={61} to={100} variant=\"gauge\" color=\"red\" />\r\n                            </Chart.YAxis>\r\n                        </Chart>\r\n                        <Slider label=\"&nbsp;&nbsp;0\"\r\n                            min={0}\r\n                            max={100}\r\n                            value={this.state.value}\r\n                            onChange={value => {\r\n                                this.setState({ value });\r\n                            }}\r\n\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            fluid\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { DatePicker } from '@scuf/common';\r\nimport { LocalizationConfig } from '@scuf/localization';\r\n\r\n\r\nexport default class DTPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.activeElement.blur();\r\n    }\r\n\r\n\r\n    render() {\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <div id=\"blur\">\r\n                <LocalizationConfig languageCode={'es-CL'}>\r\n                    {this.props.items.map((item) => (\r\n                        <DatePicker\r\n                            className=\"abajo\"\r\n                            key={item.id}\r\n                            type=\"date\"\r\n                            helperText={item.label}\r\n                            closeOnDocumentClick={true}\r\n                            fluid={true}\r\n                            reserveSpace={true}\r\n                            displayFormat={\"DD-MM-YYYY\"}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            readOnly={false}\r\n                            disabled={false}\r\n                            showYearSelector={true}\r\n                        />\r\n\r\n                    ))}\r\n                </LocalizationConfig>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FileDrop, Loader, Select } from '@scuf/common';\r\nimport baseServices from '../../services/base.services';\r\n\r\n\r\n//const config = require(\"../config.json\");\r\n\r\nconst url = 'http://10.63.2.160:3000/upload'\r\n// const apiKey = 'config.authorization';\r\n// const headers = { 'authorization': apiKey }\r\n\r\nconst DTformatOptions = [\r\n    { value: 'dd-mm-yy', text: 'dd-mm-yy' },\r\n    { value: 'dd/mm/yy', text: 'dd/mm/yy' },\r\n    { value: 'dd-mm-yyyy', text: 'dd-mm-yyyy' },\r\n    { value: 'dd/mm/yyyy', text: 'dd/mm/yyyy' },\r\n\r\n    { value: 'mm-dd-yy', text: 'mm-dd-yy' },\r\n    { value: 'mm/dd/yy', text: 'mm/dd/yy' },\r\n    { value: 'mm-dd-yyyy', text: 'mm-dd-yyyy' },\r\n    { value: 'mm/dd/yyyy', text: 'mm/dd/yyyy' },\r\n\r\n    { value: 'yyyy-mm-dd', text: 'yyyy-mm-dd' }\r\n\r\n]\r\n\r\n\r\n\r\nconst FileUpload = () => {\r\n    const [state, setState] = useState({ fileError: \"\", value: \"\", response: \"\", acceptedFiles: [], rejectedFiles: [], resetButtonText: \"\" })\r\n    const [responseAPI, setResponseAPI] = useState([])\r\n    const [formatDT, setFormatDT] = useState('dd-mm-yy')\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const [bodyDS, setBodyDS] = useState([])\r\n\r\n\r\n\r\n    function postFileUpload(body) {\r\n        const FileUpload = async () => {\r\n            try {\r\n                if (body) {\r\n                    var response = await baseServices.postFileUpload(body, url);\r\n                    if (response) {\r\n                        const filename = response.data.data.name\r\n                        /*********************************/\r\n                        setBodyDS([{ idPregunta: \"1\", Respuesta: filename }, { idPregunta: \"2\", Respuesta: filename }, { idPregunta: \"5\", Respuesta: \"csv\" }, { idPregunta: \"6\", Respuesta: filename }, { idPregunta: \"10\", Respuesta: filename }])\r\n                        const bodypost = [{ idPregunta: \"1\", Respuesta: filename }, { idPregunta: \"2\", Respuesta: filename }, { idPregunta: \"5\", Respuesta: \"csv\" }, { idPregunta: \"6\", Respuesta: filename }, { idPregunta: \"10\", Respuesta: filename }, { idPregunta: \"11\", Respuesta: formatDT }];\r\n                        const url = 'datasources';\r\n                        var responseDS = await baseServices.postData(bodypost, url);\r\n                        setResponseAPI([responseDS])\r\n                        window.location.reload();\r\n                        /*********************************/\r\n\r\n                    }\r\n                } else {\r\n                }\r\n\r\n            } catch (err) {\r\n                setResponseAPI([err])\r\n            }\r\n\r\n        }\r\n        return FileUpload();\r\n    }\r\n\r\n\r\n    const { acceptedFiles, rejectedFiles } = state;\r\n\r\n    return (\r\n        loader ?\r\n            <Loader text=\"Subiendo Archivo...\" minHeight={400}>\r\n                <div className=\"placeholder\" />\r\n            </Loader>\r\n            :\r\n            <React.Fragment>\r\n                <h6>Seleccione el formato de fecha:</h6>\r\n                <div style={{ width: '25%' }}>\r\n                    <Select\r\n                        fluid={true}\r\n                        options={DTformatOptions}\r\n                        value={formatDT}\r\n                        onChange={(value) => setFormatDT(value)}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <React.Fragment>\r\n\r\n                    <FileDrop\r\n                        key={1}\r\n                        label={\r\n                            <React.Fragment>\r\n                                {/* <h5>\r\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} />\r\n                                    {'Seleccine Archivo'}\r\n                                </h5> */}\r\n\r\n                            </React.Fragment>\r\n                        }\r\n                        buttonText=\"Subir archivo CSV\"\r\n                        resetButtonText={state.resetButtonText}\r\n                        acceptedTypes={['.csv']}\r\n                        placeholder=\"Arrastrar Archivo (máximo: 350MB)\"\r\n                        maxSize=\"350000000\"\r\n                        error={state.fileError}\r\n                        onAccepted={(files) => {\r\n                            const Regex = /^[a-zA-Z0-9_.]+$/;\r\n                            if (Regex.test(files[0].name))\r\n                                setState({ resetButtonText: \"¿Desea crear el datasource?\", acceptedFiles: [...acceptedFiles, ...files] })\r\n                            else\r\n                                setState({\r\n                                    resetButtonText: \"Error en el nombre del archivo '\" + files[0].name + \"'\", acceptedFiles: [], fileError: \"El nombre del archivo solo puede tener caracteres alfanumericos y guion bajo\"\r\n                                })\r\n                        }\r\n                        }\r\n\r\n                        onRejected={(files) => {\r\n                            setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"Uno o mas archivos fueron rechazados\" })\r\n                        }\r\n                        }\r\n                        onReset={() => {\r\n                            setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })\r\n                            state.acceptedFiles.map((file, index) => {\r\n                                const formData = new FormData();\r\n                                formData.append(\"file\", file);\r\n                                try {\r\n                                    setLoader(true)\r\n                                    postFileUpload(formData)\r\n                                    return null\r\n                                } catch (ex) {\r\n                                    console.log(ex);\r\n                                    return null\r\n                                }\r\n                            }\r\n                            )\r\n\r\n                        }\r\n\r\n                        }\r\n\r\n                    />\r\n                    {/*<h6>Archivos Aceptados:</h6>\r\n                    {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}\r\n                    <br /><br /><br />\r\n                    <h6>Archivos Rechazados:</h6>\r\n                    {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)} */}\r\n                    {/* {\r\n                    responseAPI.length > 0 ? JSON.stringify(responseAPI[0].data) : null\r\n                }\r\n                <br /><br />\r\n                {\r\n                    bodyDS.length > 0 ? JSON.stringify(bodyDS) : null\r\n                } */}\r\n\r\n\r\n                </React.Fragment>\r\n\r\n\r\n\r\n\r\n            </React.Fragment>\r\n    );\r\n\r\n\r\n}\r\nexport default FileUpload;","import React from \"react\";\r\nimport { Table, Button } from '@scuf/common';\r\nimport RadioGroup from \"./miRadioGroup\";\r\nimport TextoArea from \"./miTextArea\"\r\nimport InputNumber from \"./miInputNumber\"\r\nimport InputText from \"./miInputText\"\r\nimport InputTextPassword from \"./miInputTextPassword\"\r\nimport InputTextDataRange from \"./miInputTextDataRange\"\r\nimport InputTag from \"./miInputTag\"\r\nimport InputTagMF from \"./miInputTagMF\"\r\nimport Selector from \"./miSelector\"\r\nimport SelectorRSC from \"./miSelector_run_serve_criteria\"\r\nimport Gauge from \"./miGauge\"\r\nimport DTPicker from \"./miDatePicker\"\r\n//import SubirArchivo from \"./miFileUpload\"\r\nimport SubirArchivo from '../../components/fileupload/miFileUpload'\r\n\r\n\r\n\r\nfunction Dibuja(props) {\r\n\r\n    const dibujar = props.items;\r\n    if (dibujar.type === 'checkboxes') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell>{dibujar.label}</Table.Cell>\r\n                <Table.Cell textAlign=\"right\"><RadioGroup key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'textareas') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <TextoArea key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'numberareas') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <InputNumber key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputtext') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <InputText key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputtextPassword') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <InputTextPassword key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputTag') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/* <Table.Cell>{dibujar.label}</Table.Cell> */}\r\n                <Table.Cell> <InputTag key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputTagMF') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/* <Table.Cell>{dibujar.label}</Table.Cell> */}\r\n                <Table.Cell> <InputTagMF key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'select') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <Selector key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'selectRSC') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <SelectorRSC key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'gauges') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <Gauge key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'datepickers') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell>{dibujar.label}</Table.Cell>\r\n                <Table.Cell textAlign=\"right\"> <DTPicker key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    } else if (dibujar.type === 'fileuploads') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/*<Table.Cell>{dibujar.label}</Table.Cell>*/}\r\n                <Table.Cell textAlign=\"left\"> <SubirArchivo key={props.idGrupo} token={props.token} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else return <React.Fragment />\r\n\r\n\r\n}\r\n\r\n\r\nexport default class General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeName: \"\",\r\n            tagItem: { id: 1000, label: 'Tag1', type: 'inputTag', items: [{ id: 1, label: 'Tag', value: '' }] },\r\n            newTags: []\r\n\r\n\r\n        };\r\n    }\r\n\r\n\r\n\r\n    handleDato = (dato) => {\r\n        this.props.onhandleGeneralDato(dato);\r\n    };\r\n\r\n    handleRemoveDato = (dato) => {\r\n        this.props.onhandleGeneralRemoveDato(dato);\r\n    };\r\n\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const Pagina = this.props.id\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Table key={Pagina}>\r\n                    <Table.Header>\r\n                        <Table.HeaderCell content={this.props.titulo} textAlign=\"left\" />\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {\r\n\r\n                            this.props.items.map((item) => (\r\n                                <React.Fragment>\r\n                                    <Dibuja key={item.id} token={this.props.token} idGrupo={Pagina + \"-\" + item.id} items={item} onDato={this.handleDato} onRemoveDato={this.handleRemoveDato} />\r\n                                </React.Fragment>\r\n                            ))\r\n                        }\r\n                        {\r\n\r\n                            this.state.newTags.map((item) => (\r\n                                <React.Fragment>\r\n                                    <Dibuja key={item.id} token={0} idGrupo={Pagina + \"-\" + item.id} items={item} onDato={this.handleDato} onRemoveDato={this.handleRemoveDato} />\r\n                                </React.Fragment>\r\n                            ))\r\n                        }\r\n\r\n                    </Table.Body>\r\n                    <Table.Footer>\r\n                        <Table.Row align=\"left\">\r\n                            <Table.HeaderCell >\r\n\r\n                            </Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Footer>\r\n                </Table>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Header, Button, Notification, Card, Loader, Modal, Badge, Icon } from \"@scuf/common\";\r\nimport Grupos from \"./Grupos\";\r\nimport baseServices from '../../services/base.services';\r\n\r\nconst ReactToastify = require('react-toastify');\r\n\r\nconst config = require(\"../../configDS.json\");\r\n\r\n\r\n\r\nconst ToastNotification = ({ closeToast, Texto, Detalle }) => (\r\n    <Notification\r\n        className=\"toast-notification\"\r\n        severity=\"critical\"\r\n        onCloseClick={closeToast}\r\n        hasIcon={true}\r\n        title={Texto}\r\n        //detailsText=\"Todos los datos son obligatorios\"\r\n        detailsText={Detalle.replaceAll(',', \",\\n\")}\r\n        onDetailsClick={() => { }} //{() => alert('Debie ingresar todos los datos para continuar')}\r\n    />\r\n)\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            hidden: \"hidden\",\r\n            activePage: 0,\r\n            datos: [], //require(\"./Components/datos.json\"),\r\n            items: [],\r\n            respuestas: [],\r\n            apiBody: \"\",\r\n            modal: false,\r\n            modalFin: false,\r\n            Preguntas_Todas: [],\r\n            Preguntas_Respondidas: [],\r\n            Preguntas_Faltantes: [],\r\n            Situacion_Final: \"\",\r\n            Color_Situacion_Final: \"\",\r\n            MensajeAPI: \"\"\r\n        };\r\n        this.click_Next = this.click_Next.bind(this);\r\n        this.click_Prev = this.click_Prev.bind(this);\r\n        this.click_Send = this.click_Send.bind(this);\r\n        this.click_ModalSi = this.click_ModalSi.bind(this);\r\n        this.click_ModalNo = this.click_ModalNo.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.location.reload();\r\n    }\r\n\r\n    componentWillMount() {\r\n        // try {\r\n\r\n        //     axios.post(`${APIFormulario}`,\r\n        //         {\r\n        //             \"idTipo\": this.props.idTipo\r\n        //         },\r\n        //         { headers: headers })\r\n        //         .then((res) => {\r\n        //             const items = JSON.parse(res.data[0].JsonString)\r\n        //             this.setState({\r\n        //                 datos: items,\r\n        //                 isLoading: false\r\n        //             });\r\n        //         });\r\n\r\n        // } catch (e) {\r\n        //     console.log(e);\r\n        // }\r\n\r\n        const items = config\r\n        this.setState({\r\n            datos: items,\r\n            isLoading: false\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    click_Next() {\r\n\r\n        var Preguntas_Todas = []\r\n        this.state.datos[this.state.activePage].datos.map((item) => Preguntas_Todas.push(item.label))\r\n\r\n        let Preguntas_Faltantes = Preguntas_Todas.filter(Pregunta => !this.state.Preguntas_Respondidas.includes(Pregunta))\r\n\r\n        this.setState({\r\n            Preguntas_Todas: Preguntas_Todas,\r\n            Preguntas_Faltantes: Preguntas_Faltantes\r\n\r\n        });\r\n\r\n        const page = Number(this.state.datos[this.state.activePage].id)\r\n        const pageSize = this.state.datos[this.state.activePage].datos.length\r\n        var ndatos = 0\r\n        this.state.items.map((item) => parseInt(item.key.split(\"-\")[0]) === page ? ndatos = ndatos + 1 : null)\r\n\r\n\r\n        if (ndatos < pageSize) {\r\n            var mensaje\r\n            (pageSize - ndatos) === 1 ? mensaje = \"Falta un dato\" : mensaje = (\"Faltan \" + (pageSize - ndatos) + \" datos\")\r\n            ReactToastify.toast(<ToastNotification Detalle={JSON.stringify(Preguntas_Faltantes).replace('[', '').replace(']', '')} Texto={mensaje} closeToast={true} />)\r\n        }\r\n        else {\r\n\r\n            // if (this.state.activePage >= this.state.datos.length - 2) {\r\n            //     this.setState({ hidden: \"\" });\r\n            // } else { this.setState({ hidden: \"hidden\" }); }\r\n\r\n            if (this.state.activePage < this.state.datos.length - 1) {\r\n                this.setState({ activePage: this.state.activePage + 1 });\r\n                window.scrollTo(1, 1);\r\n            }\r\n            //else {\r\n            //    this.setState({ activePage: 0, hidden: \"\" });\r\n            //}\r\n        }\r\n\r\n        //this.state.datos[this.state.activePage + 1].titulo === 'TAGS' && this.setState({ hidden: \"\" });\r\n    }\r\n\r\n    click_Prev() {\r\n        const page = Number(this.state.datos[this.state.activePage].id)\r\n        //const pageSize = this.state.datos[this.state.activePage].datos.length\r\n        var ndatos = 0\r\n        this.state.items.map((item) => parseInt(item.key.split(\"-\")[0]) === page ? ndatos = ndatos + 1 : null)\r\n\r\n        //if (ndatos < pageSize) {\r\n        //    var mensaje\r\n        //    (pageSize - ndatos) === 1 ? mensaje = \"Falta un dato\" : mensaje = (\"Faltan \" + (pageSize - ndatos) + \" datos\")\r\n        //    ReactToastify.toast(<ToastNotification Texto={mensaje} closeToast={true} />)\r\n        //}\r\n        //else {\r\n        //    if (this.state.activePage > 0) {\r\n        //        this.setState({ activePage: this.state.activePage - 1 });\r\n        //    } else {\r\n        //        this.setState({ activePage: this.state.datos.length - 1 });\r\n        //    }\r\n        //    window.scrollTo(1, 1);\r\n        //}\r\n\r\n        if (this.state.activePage > 0) {\r\n            this.setState({ activePage: this.state.activePage - 1 });\r\n            window.scrollTo(1, 1);\r\n        }\r\n\r\n        this.setState({ hidden: \"hidden\" });\r\n\r\n\r\n    }\r\n\r\n\r\n    click_Send() {\r\n        this.setState({ modal: true })\r\n    }\r\n\r\n\r\n    postData = async () => {\r\n        try {\r\n            const bodypost = this.state.respuestas;\r\n            const url = 'datasources';\r\n            var response = await baseServices.postData(bodypost, url);\r\n            //console.log(bodypost)\r\n            window.location.reload();\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n    click_ModalSi() {\r\n        try {\r\n            this.setState({ isLoading: true, modal: false });\r\n            this.postData();\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({\r\n                isLoading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    click_ModalNo() {\r\n        this.setState({ modal: false });\r\n    }\r\n\r\n\r\n    click_ModalFin() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    handleGeneralRemoveDato = (item) => {\r\n        //nitems: De los items filtro el key modificado (se elimina) y NO se concatena el nuevo item\r\n        const nitems = this.state.items.filter((c) => c.key !== item.key)\r\n\r\n\r\n        //nitems2: Mismo nitems, pero sin la columna key (para el envío a la BD)\r\n        var nitems2 = [];\r\n        nitems.map((nitem) => nitems2 = nitems2.concat([{ idPregunta: nitem.key.split(\"-\")[1], Respuesta: nitem.val }]))\r\n\r\n        //KeyPageFile: Para obtener el id de la página (0) y el id de la fila (1)\r\n        const keyPageFile = item.key.split(\"-\")\r\n\r\n        //ndatos: De todos los datos originales que vienen de la BD, filtro solo la hoja asociada al item modificado\r\n        var ndatos = this.state.datos.filter((c) => c.id === parseInt(keyPageFile[0]))\r\n\r\n        //ndatos2: De la hoja (ndatos) saco solamente el arreglo de datos (las filas)\r\n        var ndatos2 = []\r\n        ndatos.map((ndato) =>\r\n            ndatos2 = ndatos2.concat(ndato.datos)\r\n        )\r\n\r\n        //ndatos3: De todas las filas (ndatos2), saco solo la correspondiente al item modificado\r\n        var ndatos3 = ndatos2.filter((c) => c.id === parseInt(keyPageFile[1]))\r\n\r\n\r\n        //Con el filtro quita esta pregunt del array de preguntas espondidas\r\n        let Preguntas_Respondidas = this.state.Preguntas_Respondidas.filter(item => item !== ndatos3[0].label)\r\n        this.setState({\r\n            Preguntas_Respondidas: Preguntas_Respondidas\r\n        });\r\n\r\n\r\n\r\n        //ndatos4: De la fila (ndatos3) saco sus elementos. Si es un checkbox, recorro el radiogroup y le asigno el checked=1 al elemento correspondiente\r\n        var ndatos4 = []\r\n        ndatos3.map((ndato) => {\r\n            if (ndato.type === 'checkboxes') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.label === item.val ? ndato.value = 1 : ndato.value = 0)\r\n                //ndatos3.checkboxes = ndatos4\r\n\r\n            } else if (ndato.type === 'textareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'numberareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtext') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtextPassword') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTag') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTagMF') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'select') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'selectRSC') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'gauges') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'datepickers') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'fileuploads') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            }\r\n            return null\r\n        })\r\n\r\n\r\n        this.setState({\r\n            items: nitems,\r\n            respuestas: nitems2\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    handleGeneralDato = (item) => {\r\n\r\n        //nitems: De los items filtro el key modificado (se elimina) y se concatena el nuevo item\r\n        const nitems = (this.state.items.filter((c) => c.key !== item.key)).concat(item)\r\n\r\n        //nitems2: Mismo nitems, pero sin la columna key (para el envío a la BD)\r\n        var nitems2 = [];\r\n        nitems.map((nitem) => nitems2 = nitems2.concat([{ idPregunta: nitem.key.split(\"-\")[1], Respuesta: nitem.val }]))\r\n\r\n        //KeyPageFile: Para obtener el id de la página (0) y el id de la fila (1)\r\n        const keyPageFile = item.key.split(\"-\")\r\n\r\n        //ndatos: De todos los datos originales que vienen de la BD, filtro solo la hoja asociada al item modificado\r\n        var ndatos = this.state.datos.filter((c) => c.id === parseInt(keyPageFile[0]))\r\n\r\n        //ndatos2: De la hoja (ndatos) saco solamente el arreglo de datos (las filas)\r\n        var ndatos2 = []\r\n        ndatos.map((ndato) =>\r\n            ndatos2 = ndatos2.concat(ndato.datos)\r\n        )\r\n\r\n        //ndatos3: De todas las filas (ndatos2), saco solo la correspondiente al item modificado\r\n        var ndatos3 = ndatos2.filter((c) => c.id === parseInt(keyPageFile[1]))\r\n        var Preguntas_Respondidas = this.state.Preguntas_Respondidas\r\n\r\n\r\n        //ndatos3[0].id > 99 && console.log(item.val);\r\n        //lleno el array con las preguntas respondidas para luego mostrar las faltantes\r\n        if (Preguntas_Respondidas.indexOf(ndatos3[0].label) === -1) {\r\n            Preguntas_Respondidas.push(ndatos3[0].label)\r\n            this.setState({ Preguntas_Respondidas: Preguntas_Respondidas });\r\n        }\r\n\r\n\r\n\r\n\r\n        //ndatos4: De la fila (ndatos3) saco sus elementos. Si es un checkbox, recorro el radiogroup y le asigno el checked=1 al elemento correspondiente\r\n        var ndatos4 = []\r\n        ndatos3.map((ndato) => {\r\n            if (ndato.type === 'checkboxes') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.label === item.val ? ndato.value = 1 : ndato.value = 0)\r\n                //ndatos3.checkboxes = ndatos4\r\n\r\n            } else if (ndato.type === 'textareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'numberareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtext') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtextPassword') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTag') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTagMF') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'select') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'selectRSC') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'gauges') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'datepickers') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'fileuploads') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            }\r\n            return null\r\n        })\r\n\r\n\r\n\r\n        this.setState({\r\n            items: nitems,\r\n            respuestas: nitems2\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleNewTag = () => {\r\n        var hojas = this.state.datos;\r\n        hojas.slice(-1);\r\n        var newTagsArray = this.state.datos[3].datos;\r\n        var tagsSize = newTagsArray.length;\r\n        var tagItem = {\r\n            \"id\": 10000 + tagsSize,\r\n            \"label\": \"Tag\",\r\n            \"type\": \"inputTag\",\r\n            \"items\": [\r\n                {\r\n                    \"id\": 1,\r\n                    \"label\": \"Tag\",\r\n                    \"value\": \"\"\r\n                }\r\n            ]\r\n        }\r\n\r\n        newTagsArray.push(tagItem)\r\n\r\n        var hojaTags = {\r\n            \"id\": 4,\r\n            \"titulo\": \"TAGS\",\r\n            \"datos\": newTagsArray\r\n        }\r\n\r\n        hojas.push(hojaTags)\r\n        this.setState({ datos: hojas })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header menu={false} logo={false} title={'Espere...'}>\r\n                    </Header>\r\n                    <Card>\r\n                        <Card.Header />\r\n                        <Card.Content>\r\n                            <Loader minHeight={400}>\r\n                                <div className=\"placeholder\" />\r\n                            </Loader>\r\n                        </Card.Content>\r\n                    </Card>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        else\r\n            return (\r\n\r\n\r\n                <React.Fragment>\r\n\r\n\r\n                    {/* {JSON.stringify(this.state.respuestas)}<br /> */}\r\n                    {/*{JSON.stringify(this.state.Preguntas_Respondidas)}<br />*/}\r\n                    {/*{JSON.stringify(this.state.Preguntas_Faltantes)}*/}\r\n\r\n\r\n                    {this.renderModal()}\r\n                    {this.renderModalFin()}\r\n                    <table style={{ width: '50%' }}>\r\n                        <tr>\r\n                            <td colspan=\"3\">\r\n                                <Header menu={false} logo={false} title={'Crear Data Source'}>\r\n                                    <Header.Item>\r\n                                        <Icon name=\"close\" size=\"small\" root=\"common\" onClick={() => { this.setState({ isLoading: true, modal: false }); this.click_ModalFin(); }} />\r\n                                    </Header.Item>\r\n                                </Header>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\">\r\n\r\n                                <Grupos\r\n                                    key={1}\r\n                                    token={this.props.token}\r\n                                    id={this.state.datos[this.state.activePage].id}\r\n                                    titulo={this.state.datos[this.state.activePage].titulo}\r\n                                    items={this.state.datos[this.state.activePage].datos}\r\n                                    onhandleGeneralDato={this.handleGeneralDato}\r\n                                    onhandleGeneralRemoveDato={this.handleGeneralRemoveDato}\r\n                                />\r\n\r\n                            </td>\r\n                        </tr>\r\n                        <tr >\r\n                            <td>\r\n                                <Button type=\"primary\"\r\n                                    icon=\"caret-left\"\r\n                                    size=\"small\"\r\n                                    content=\"\"\r\n                                    iconPosition=\"left\" onClick={this.click_Prev} disabled={this.state.isLoading}>\r\n                                </Button>\r\n                            </td>\r\n                            <td style={{ textAlign: 'center' }}>\r\n                                {\r\n\r\n                                    this.state.datos[this.state.activePage].titulo === 'Tabla' ?\r\n                                        <Button\r\n                                            //className={this.state.hidden}\r\n                                            type=\"primary\"\r\n                                            loading={this.state.isLoading}\r\n                                            size=\"small\"\r\n                                            content=\"Terminar\"\r\n                                            iconPosition=\"right\" onClick={this.click_Send} disabled={this.state.isLoading}>\r\n                                        </Button>\r\n                                        :\r\n                                        <React.Fragment />\r\n                                }\r\n                            </td>\r\n\r\n                            <td style={{ textAlign: 'right' }}>\r\n                                <Button type=\"primary\"\r\n                                    icon=\"caret-right\"\r\n                                    size=\"small\"\r\n                                    content=\"\"\r\n                                    iconPosition=\"right\" onClick={this.click_Next} disabled={this.state.isLoading}>\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\"><span>&nbsp;&nbsp;</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\"><span>&nbsp;&nbsp;</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\"><span>&nbsp;&nbsp;</span></td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <div>\r\n                        <ReactToastify.ToastContainer\r\n                            hideProgressBar={false}\r\n                            closeOnClick={false}\r\n                            closeButton={false}\r\n                            newestOnTop={true}\r\n                            //position=\"bottom-right\"\r\n                            position=\"top-center\"\r\n                            autoClose={2500}\r\n                            toastClassName=\"toast-notification-wrap\"\r\n                        />\r\n                    </div>\r\n\r\n\r\n\r\n                </React.Fragment>\r\n\r\n            );\r\n\r\n    }\r\n\r\n\r\n    renderModal() {\r\n        return (\r\n            <Modal style={{ height: '150px', width: '300px', position: 'absolute', top: '20%', left: '50%', marginLeft: '-150px' }} closeIcon={true} size=\"mini\" onClose={() => this.setState({ modal: false })} open={this.state.modal} closeOnDimmerClick={false}>\r\n                <Modal.Header>\r\n                    ¿Está Seguro?\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                    <Button type=\"secondary\" size=\"small\" content=\"No\" onClick={this.click_ModalNo} disabled={this.state.isLoading} />\r\n                    <Button type=\"primary\" size=\"small\" content=\"Si\" onClick={this.click_ModalSi} disabled={this.state.isLoading} />\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n\r\n    }\r\n\r\n    renderModalFin() {\r\n        return (\r\n            <Modal className=\"popup-theme-wrap\" size=\"mini\" onClose={() => this.setState({ modalFin: false })} open={this.state.modalFin} closeOnDimmerClick={false}>\r\n                <Modal.Header>\r\n                    Formulario Enviado\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    Situacion Final:<br />{<Badge color={this.state.Color_Situacion_Final.split('\\n')[0]}>{this.state.Situacion_Final.split('\\n')[0]} </Badge>}<br />\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                    <Button type=\"secondary\" size=\"small\" content=\"Cerrar\" onClick={this.click_ModalFin} />\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    notify() {\r\n        ReactToastify.toast(<ToastNotification closeToast={true} />)\r\n    }\r\n\r\n}\r\n","import { useState, useEffect } from 'react'\n\nimport { Modal, InputLabel, Notification } from '@scuf/common'\nimport { DataTable } from '@scuf/datatable';\nimport { Icon, Button, Loader, Card, Header } from '@scuf/common';\n\nimport { useDispatch } from 'react-redux'\nimport DataTabDataAPI from './DatTabDataAPI'\nimport baseServices from '../../../services/base.services';\nimport '@scuf/datatable/honeywell-compact-dark/theme.css'\nimport { Fragment } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../../../src/toast-notification-wrap.css'\n\nimport Formulario from '../../../components/formDS/Formulario'\nimport SubirArchivo from '../../../components/fileupload/miFileUpload'\nconst ReactToastify = require('react-toastify');\n\nconst DatTab = ({ url, body, title }) => {\n\n    const dispatch = useDispatch();\n    const [state, setState] = useState([])\n    const [modal, setModal] = useState(false);\n    const [add, setAdd] = useState(false);\n    const [addCsv, setAddCsv] = useState(false);\n    const [id, setId] = useState(0);\n    const [selectedRow, setSelectedRow] = useState([])\n    const [deleteRows, setDeleteRows] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        const getData = async () => {\n            try {\n                if (body) {\n                    var response = await baseServices.getData(body, url);\n                    if (response.data && response.data.length > 0) {\n                        setState(DataTabDataAPI(response))\n                    }\n                } else { }\n\n            } catch (err) { }\n\n        }\n\n        getData();\n\n    }, []);\n\n\n\n\n    const delData = async () => {\n        setIsLoading(true);\n        try {\n            if (body) {\n                let bodydel = '?id=' + selectedRow[0].id;\n                var responseDel = await baseServices.delData(bodydel, url);\n                window.location.reload();\n            } else { }\n\n        } catch (err) { }\n\n    }\n\n\n    let handleDelete = () => {\n        var res;\n        //console.log(selectedRow[0].id)\n        selectedRow.length < 1\n            ?\n            res = ReactToastify.toast(<ToastNotification Tipo=\"Delete\" Texto={\"Seleccione un DataSource\"} closeToast={true} Severity=\"critical\" />)\n            :\n            res = ReactToastify.toast(<ToastNotification Tipo=\"Delete\" Texto={selectedRow.length == 1 ? \"¿Eliminar \" + selectedRow[0].conn_id + \"?\" : \"¿Eliminar estos \" + selectedRow[0].conn_id + \" DataSources?\"} closeToast={true} Severity=\"information\" />)\n\n        return res\n    }\n\n    let handleAdd = () => {\n        var res;\n        setAdd(true);\n        return res\n    }\n\n    let handleAddCsv = () => {\n        var res;\n        setAddCsv(true);\n        return res\n    }\n\n\n\n    const ToastNotification = ({ Tipo, closeToast, Texto, Severity }) => (\n        Tipo == \"Delete\"\n            ?\n            Severity == \"critical\"\n                ?\n                <Notification\n                    className=\"toast-notification\"\n                    severity={Severity}\n                    onCloseClick={closeToast}\n                    hasIcon={false}\n                    title={Texto}\n                    detailsText={<Button key={1} size=\"small\" content=\"OK\" onClick={closeToast} />}\n                    onDetailsClick={closeToast}\n                />\n                :\n                <Notification\n                    className=\"toast-notification\"\n                    severity={Severity}\n                    onCloseClick={closeToast}\n                    hasIcon={false}\n                    title={Texto}\n                    detailsText={<Button key={1} size=\"small\" content=\"Si\" onClick={closeToast} />}\n                    //detailsText=\"Eliminar\"\n                    onDetailsClick={() => { delData() }}\n                />\n            :\n            <Fragment />\n\n    )\n\n\n\n\n    const Item = DataTable.HeaderBar.Item;\n    return (\n        <Fragment>\n            {\n                isLoading ?\n                    <Fragment>\n                        <Header menu={false} logo={false} title={'Eliminando Data Source...'}>\n                        </Header>\n                        <Card>\n                            <Card.Header />\n                            <Card.Content>\n                                <Loader minHeight={400}>\n                                    <div className=\"placeholder\" />\n                                </Loader>\n                            </Card.Content>\n                        </Card>\n                    </Fragment>\n                    :\n                    add ?\n                        <Formulario />\n                        :\n                        addCsv ? <SubirArchivo />\n                            :\n                            state.datos ?\n                                modal ?\n                                    <Modal closeIcon={true} onClose={() => setModal(false)} open={modal} closeOnDimmerClick={false} closeOnDocumentClick={false} >\n                                        <Modal.Header>\n                                            {state.datos[id].conn_id}\n                                        </Modal.Header>\n                                        <Modal.Content>\n                                            <Fragment>\n                                                <DataTable data={[state.datos[id]]} rows={10} search={true}\n                                                    scrollable={true} scrollHeight=\"600%\" reorderableColumns={true} resizableColumns={true}\n                                                >\n                                                    {\n                                                        state.fields && state.fields.map((y, i) => (\n                                                            <DataTable.Column key={i} field={y.field} header={y.field} sortable={true} editable={true} editFieldType=\"text\" />\n                                                        ))\n                                                    }\n                                                    <DataTable.Pagination />\n\n                                                </DataTable>\n                                            </Fragment>\n                                        </Modal.Content>\n                                        <Modal.Footer>\n\n                                        </Modal.Footer>\n                                    </Modal>\n                                    :\n                                    <Fragment>\n                                        <InputLabel label={title} />\n                                        <DataTable data={state.datos} rows={10} search={true} selection={selectedRow} onSelectionChange={e => setSelectedRow(e)} selectionMode=\"single\"\n                                            scrollable={true} scrollHeight=\"600%\" reorderableColumns={true} resizableColumns={true}\n                                            onCellClick={(data) => { setModal(true); setId(data.rowIndex) }}\n                                        >\n                                            <DataTable.HeaderBar>\n                                                <Item\n                                                    content=\"SQL\"\n                                                    icon={<Icon name=\"slidercontrols-plus\" size=\"small\" root=\"common\" />}\n                                                    onClick={() => handleAdd()}\n                                                />\n\n                                                <Item\n                                                    content=\"CSV\"\n                                                    icon={<Icon name=\"slidercontrols-plus\" size=\"small\" root=\"common\" />}\n                                                    onClick={() => handleAddCsv()}\n                                                />\n\n                                                <Item\n                                                    content=\"Eliminar\"\n                                                    icon={<Icon name=\"delete\" size=\"small\" root=\"common\" />}\n                                                    onClick={() => handleDelete()}\n                                                />\n                                            </DataTable.HeaderBar>\n\n                                            <DataTable.Column key={1} field=\"conn_id\" header=\"Conexión\" sortable={true} />\n                                            <DataTable.Column key={2} field=\"description\" header=\"Descripción\" sortable={true} />\n                                            <DataTable.Column key={3} field=\"db_type\" header=\"Base de Datos\" sortable={true} />\n                                            <DataTable.Column key={3} field=\"table_type\" header=\"Tipo\" sortable={true} />\n\n                                            <DataTable.Pagination />\n\n                                        </DataTable>\n\n                                        <ReactToastify.ToastContainer\n                                            hideProgressBar={false}\n                                            closeOnClick={false}\n                                            closeButton={false}\n                                            newestOnTop={true}\n                                            position=\"top-center\"\n                                            autoClose={5000}\n                                            toastClassName=\"toast-notification-wrap\"\n                                        />\n\n                                    </Fragment>\n\n\n                                : <Fragment>\n                                    <InputLabel label={title} />\n                                    <DataTable data={state.datos} >\n                                        <DataTable.HeaderBar>\n                                            <Item\n                                                content=\"Crear\"\n                                                icon={<Icon name=\"slidercontrols-plus\" size=\"small\" root=\"common\" />}\n                                                onClick={() => handleAdd()}\n                                            />\n                                            <Item\n                                                content=\"Eliminar\"\n                                                icon={<Icon name=\"delete\" size=\"small\" root=\"common\" />}\n                                            />\n                                        </DataTable.HeaderBar>\n                                        <DataTable.Column key={1} field=\"conn_id\" header=\"Conexión\" />\n                                        <DataTable.Column key={2} field=\"description\" header=\"Descripción\" />\n                                        <DataTable.Column key={3} field=\"db_type\" header=\"Base de Datos\" />\n                                        <DataTable.Column key={3} field=\"table_type\" header=\"Tipo\" />\n                                    </DataTable>\n\n                                </Fragment>\n            }\n\n        </Fragment>\n\n\n    )\n}\n\nexport default DatTab\n","import React from 'react'\nimport { Grid } from '@scuf/common'\n\nimport DatTabDS from '../../components/common/DatTab/DatTabDS'\n//import DatTabModels from '../../components/common/DatTab/DatTabModels'\n\n//import { isMobile } from \"react-device-detect\";\n//import { useDispatch } from 'react-redux'\n\nconst width = window.innerWidth;\n\n\n//let isMobile = (width <= 68);\n\n\nconst DataSources = () => {\n\n\n    return (\n        <>\n\n            <Grid >\n\n                <Grid.Row >\n                    <Grid.Column xsWidth='12' sWidth='12' mWidth='12' lWidth='12' xlWidth='12'>\n                        <div style={{ width: 0.8 * width, marginTop: '0px' }}>\n                            <DatTabDS\n                                url='datasources'\n                                body='?id=*'\n                                title='DataSources'\n                            />\n                        </div>\n                    </Grid.Column>\n                </Grid.Row>\n\n            </Grid>\n\n\n        </>\n    )\n}\n\nexport default DataSources\n","import React, { Fragment } from \"react\";\r\nimport { Radio, Badge, Card, Popup } from '@scuf/common';\r\n\r\nexport default class RadioGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n\r\n        this.textInput = null;\r\n        this.setTextInputRef = element => {\r\n            this.textInput = element;\r\n        };\r\n        this.focusTextInput = () => {\r\n            if (this.textInput) this.textInput.focus();\r\n        };\r\n\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n        this.textInput.focus();\r\n        //alert(JSON.stringify(dato))\r\n        /*window.scrollTo(1, 100);*/\r\n    }\r\n\r\n    handleChecked(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value ? item.label : nvalue\r\n        )\r\n        this.setState({ value: nvalue });\r\n\r\n\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <button className=\"oculto\" ref={this.setTextInputRef} />\r\n                <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n                {this.props.items.map((item) => (\r\n\r\n                    <React.Fragment>\r\n                        <Radio key={item.id}\r\n                            label={item.label}\r\n                            disabled={false}\r\n                            name=\"RadioGroup\"\r\n                            checked={this.handleChecked(this.state.value, item.label)}\r\n                            onChange={() => this.handleOnChange({ key: idGrupo, id: item.id, val: item.label })}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Checkbox, Badge } from '@scuf/common';\r\n\r\nexport default class RadioGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n\r\n        this.textInput = null;\r\n        this.setTextInputRef = element => {\r\n            this.textInput = element;\r\n        };\r\n        this.focusTextInput = () => {\r\n            if (this.textInput) this.textInput.focus();\r\n        };\r\n\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n        this.textInput.focus();\r\n        //alert(JSON.stringify(dato))\r\n        /*window.scrollTo(1, 100);*/\r\n    }\r\n\r\n    handleChecked(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n\r\n\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value == \"1\" ? 1 : 0 }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <button className=\"oculto\" ref={this.setTextInputRef} />\r\n                {/* <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge> */}\r\n                {this.props.items.map((item) => (\r\n\r\n                    <React.Fragment>\r\n                        <Checkbox key={item.id}\r\n                            label={item.label}\r\n                            toggle={true}\r\n                            disabled={false}\r\n                            name=\"RadioGroup\"\r\n                            checked={this.state.value == \"1\" ? true : false}\r\n                            onChange={(checked) => this.handleOnChange({ key: idGrupo, id: item.id, val: checked ? 1 : 0 })}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { TextArea, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n                        {item.label}\r\n                        <TextArea\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Input, Badge, Popup, Card } from '@scuf/common';\r\n\r\nexport default class InputNumber extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: 0,\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        if (!isNaN(dato.val)) {\r\n            this.setState({ value: dato.val });\r\n            this.props.onDato(dato);\r\n        }\r\n        else {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    {\r\n                                        item.label == \"Parámetro: Min Sample\" ?\r\n                                            <Fragment>\r\n                                                Número entero que indica cuantas iteraciones se realizarán sobre cada valor de min_cluster_size para elección del par de hiperparámetros [min_cluster_size, min_samples]\r\n                                                <br />\r\n                                                <a href=\"https://hdbscan.readthedocs.io/en/latest/parameter_selection.html#selecting-min-cluster-size\" target=\"_blank\">Mas Información</a>\r\n                                            </Fragment>\r\n\r\n                                            :\r\n                                            item.label == \"Período de agrupación de datos (minutos)\" ?\r\n                                                <Fragment>\r\n                                                    Periódo de muestreo del dataset usado (minutos)\r\n                                                </Fragment>\r\n\r\n                                                :\r\n                                                item.label == \"Puerto de disponibilización\" ?\r\n                                                    <Fragment>\r\n                                                        Puerto sobre el cual se levantará el modelo de xgboost\r\n                                                    </Fragment>\r\n\r\n                                                    : \"X\"\r\n\r\n                                    }\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n\r\n                        <Input\r\n                            placeholder={\"Valor Numérico\"}\r\n                            type={\"number\"}\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            min={0}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Input, Badge, Card, Popup } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            this.props.onDato(dato);\r\n        }\r\n    }\r\n\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    {\r\n                                        item.label == \"Nombre del Modelo\" ?\r\n                                            <Fragment>\r\n                                                Nombre con que se almacenará el modelo\r\n                                            </Fragment>\r\n                                            : \"X\"\r\n\r\n                                    }\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n\r\n                        <Input\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Input, Badge, Card, Popup } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            this.props.onDato(dato);\r\n        }\r\n    }\r\n\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n\r\n        )\r\n        this.setState({ value: nvalue });\r\n\r\n        // if (nvalue !== \"\")\r\n        //     this.handleOnChange({ key: this.props.idGrupo, id: 1, val: nvalue })\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n\r\n\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    Grilla de valores que se usarán en la búsqueda del hiperparámetro óptimo para el tamaño mínimo de clusters en %\r\n                                    <br />\r\n                                    <a href=\"https://hdbscan.readthedocs.io/en/latest/parameter_selection.html#selecting-min-cluster-size\" target=\"_blank\">Mas Información</a>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n\r\n                        <Input\r\n                            key={item.id}\r\n                            placeholder={\"Ej: 10,20,30\"}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Input, Badge, Card, Popup } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        const lastchr = dato.val.slice(-1);\r\n        var valor = \"\";\r\n        if (lastchr == '' || lastchr == '0' || lastchr == '1' || lastchr == '2' || lastchr == '3' || lastchr == '4' || lastchr == '5' || lastchr == '5' || lastchr == '6' || lastchr == '7' || lastchr == '8' || lastchr == '9' || lastchr == 'h' || lastchr == 'd' || lastchr == 'w' || lastchr == 'm' || lastchr == 'y') {\r\n            if (dato.val == 'h' || dato.val == 'd' || dato.val == 'w' || dato.val == 'm' || dato.val == 'y') {\r\n                this.setState({ value: \"\" });\r\n                this.props.onRemoveDato({ key: dato.key, id: dato.id, val: \"\" });\r\n            }\r\n            else if (lastchr == 'h' || lastchr == 'd' || lastchr == 'w' || lastchr == 'm' || lastchr == 'y') {\r\n                valor = dato.val.replaceAll('h', '').replaceAll('d', '').replaceAll('w', '').replaceAll('m', '').replaceAll('y', '') + lastchr;\r\n                this.setState({ value: valor });\r\n                if (dato.val === \"\") {\r\n                    this.props.onRemoveDato({ key: dato.key, id: dato.id, val: \"\" });\r\n                }\r\n                else {\r\n                    this.props.onDato({ key: dato.key, id: dato.id, val: valor });\r\n                }\r\n            }\r\n            else if (lastchr == '0' || lastchr == '1' || lastchr == '2' || lastchr == '3' || lastchr == '4' || lastchr == '5' || lastchr == '5' || lastchr == '6' || lastchr == '7' || lastchr == '8' || lastchr == '9') {\r\n                var unidad = 'd'\r\n                if (dato.val.includes('h')) { unidad = 'h' }\r\n                else if (dato.val.includes('d')) { unidad = 'd' }\r\n                else if (dato.val.includes('w')) { unidad = 'w' }\r\n                else if (dato.val.includes('m')) { unidad = 'm' }\r\n                else if (dato.val.includes('y')) { unidad = 'y' }\r\n                valor = dato.val.replaceAll('h', '').replaceAll('d', '').replaceAll('w', '').replaceAll('m', '').replaceAll('y', '') + unidad;\r\n                this.setState({ value: valor });\r\n                if (dato.val === \"\") {\r\n                    this.props.onRemoveDato({ key: dato.key, id: dato.id, val: \"\" });\r\n                }\r\n                else {\r\n                    this.props.onDato({ key: dato.key, id: dato.id, val: valor });\r\n                }\r\n            }\r\n            else {\r\n                this.setState({ value: dato.val });\r\n                if (dato.val === \"\") {\r\n                    this.props.onRemoveDato({ key: dato.key, id: dato.id, val: this.state.value });\r\n                }\r\n                else {\r\n                    this.props.onDato({ key: dato.key, id: dato.id, val: this.state.value });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (null);\r\n        // return (\r\n\r\n        //     <React.Fragment>\r\n        //         {this.props.items.map((item) => (\r\n        //             <React.Fragment>\r\n        //                 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        //                 <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n\r\n        //                 <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n        //                     <Card>\r\n        //                         <Card.Content>\r\n        //                             {\r\n        //                                 item.label == \"Largo de dataset\" ?\r\n        //                                     <Fragment>Tiempo de data que se usará para entrenar el modelo.<br />Ingresar un N° seguido del período (h,d,w,m,y)</Fragment>\r\n        //                                     :\r\n        //                                     item.label == \"Cantidad de datos a almacenar\" ?\r\n        //                                         <Fragment>Tiempo de data a analizar usando el modelo entrenado.<br />Ingresar un N° seguido del período (h,d,w,m,y)</Fragment>\r\n        //                                         : \"X\"\r\n\r\n        //                             }\r\n        //                         </Card.Content>\r\n        //                     </Card>\r\n        //                 </Popup>\r\n\r\n        //                 <Input\r\n        //                     placeholder={\"N° seguido del periodo (h,d,w,m,y). Ejemplo: 5d\"}\r\n        //                     key={item.id}\r\n        //                     fluid={true}\r\n        //                     rows={1}\r\n        //                     value={this.state.value}\r\n        //                     onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n        //                 />\r\n        //             </React.Fragment>\r\n        //         ))}\r\n        //     </React.Fragment>\r\n        // );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, Card, Popup, Button, Icon } from '@scuf/common';\r\nimport baseServices from '../../services/base.services';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: { tag: \"\", desc: \"\", ds: \"\", of: \"\" },\r\n            vTag: \"\",\r\n            vDesc: \"\",\r\n            vDS: \"\",\r\n            vOF: \"\",\r\n            datasources: \"\",\r\n            tagsCSV: []\r\n        };\r\n    }\r\n\r\n\r\n    handleOnChangeOF = (dato) => {\r\n\r\n        var regexNUM = /[-+][0-9]+\\.[0-9]+$/;\r\n        var regexINT = /^[0-9]+$/;\r\n\r\n        var datoVal = dato.val;\r\n        var numVal = datoVal.slice(1, 100)\r\n\r\n        if (datoVal.charAt(0) == \">\" || datoVal.charAt(0) == \"<\" || datoVal.charAt(0) == \"=\") {\r\n            datoVal = dato.val\r\n            if (numVal.charAt(0) == \"-\" || numVal.slice(-1) == \".\")\r\n                datoVal = dato.val\r\n            // else if (datoVal.length > 1 && !regexINT.test(numVal))\r\n            //     datoVal = \"\"\r\n        }\r\n        else datoVal = \"\"\r\n\r\n        if (datoVal.length > 2) {\r\n            if (datoVal.slice(-1) == \"-\")\r\n                datoVal = \"\"\r\n\r\n            else if (datoVal.split(\".\").length > 2)\r\n                datoVal = \"\"\r\n\r\n            if (datoVal.slice(-1) == \".\")\r\n                datoVal = datoVal\r\n            else if (!regexINT.test(datoVal.slice(-1)))\r\n                datoVal = \"\"\r\n        }\r\n\r\n        if (datoVal.length == 2) {\r\n            if (regexINT.test(datoVal.slice(-1)))\r\n                datoVal = datoVal\r\n            else if (datoVal.slice(-1) == \"-\")\r\n                datoVal = datoVal\r\n            else\r\n                datoVal = \"\"\r\n        }\r\n\r\n        // if (regexNUM.test(datoVal.slice(1, 100))) {\r\n        // }\r\n\r\n\r\n\r\n        this.setState({ vOF: datoVal });\r\n        this.setState({ value: { tag: this.state.vTag, desc: this.state.vDesc, ds: this.state.vDS, of: datoVal } });\r\n\r\n        if (datoVal === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (datoVal && !datoVal == \"\" && this.state.vDesc && !this.state.vDesc == \"\" && this.state.vDS && !this.state.vDS == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: this.state.vTag, desc: this.state.vDesc, ds: this.state.vDS, of: datoVal } });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeTag = (dato) => {\r\n        this.setState({ vTag: dato.val });\r\n        this.setState({ value: { tag: dato.val, desc: this.state.vDesc, ds: this.state.vDS, of: this.state.vOF } });\r\n\r\n        if (dato.val === \"\" || (this.state.vDesc === \"operational_filter\" && this.state.vOF === \"\")) {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (dato.val && !dato.val == \"\" && this.state.vDesc && !this.state.vDesc == \"\" && this.state.vDS && !this.state.vDS == \"\") {\r\n                this.state.vDesc == \"operational_filter\" ? this.props.onDato({ key: dato.key, id: dato.id, val: { tag: dato.val, desc: this.state.vDesc, ds: this.state.vDS, of: this.state.vOF } })\r\n                    : this.props.onDato({ key: dato.key, id: dato.id, val: { tag: dato.val, desc: this.state.vDesc, ds: this.state.vDS } });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeDesc = (dato) => {\r\n        //this.setState({ value: dato.val });\r\n        this.setState({ vDesc: dato.val });\r\n        this.setState({ value: { tag: this.state.vTag, desc: dato.val, ds: this.state.vDS } });\r\n\r\n        if (dato.val === \"operational_filter\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vTag && !this.state.vTag == \"\" && dato.val && !dato.val == \"\" && this.state.vDS && !this.state.vDS == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: this.state.vTag, desc: dato.val, ds: this.state.vDS } });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeDS = (dato) => {\r\n        //this.setState({ value: dato.val });\r\n        this.setState({ vDS: dato.val });\r\n        //this.setState({ value: { tag: this.state.vTag, desc: this.state.vDesc, ds: dato.val } });\r\n        this.setState({ value: { tag: '', desc: this.state.vDesc, ds: dato.val } });\r\n        this.getCSVTags(dato.val);\r\n\r\n        this.props.onRemoveDato(dato);\r\n\r\n        // if (dato.val === \"\" || true) {\r\n        //     this.props.onRemoveDato(dato);\r\n        // }\r\n        // else {\r\n        //     if (this.state.vTag && !this.state.vTag == \"\" && this.state.vDesc && !this.state.vDesc == \"\" && dato.val && !dato.val == \"\") {\r\n        //         this.props.onDato({ key: dato.key, id: dato.id, val: { tag: this.state.vTag, desc: this.state.vDesc, ds: dato.val } });\r\n        //     }\r\n        // }\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        this.getData();\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n        this.setState({ vTag: nvalue.tag });\r\n        this.setState({ vDesc: nvalue.desc });\r\n        this.setState({ vDS: nvalue.ds });\r\n        this.setState({ vOF: nvalue.att });\r\n        //console.log(this.props.items)\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        // var nvalue = \"\"\r\n        // this.props.items.map((item) =>\r\n        //     nvalue = item.value\r\n        // )\r\n\r\n        //console.log(this.props.items)\r\n\r\n        if (this.state.value !== \"\") {\r\n\r\n            //var dato = await { key: this.props.idGrupo, id: 1, val: this.props.items[0].ds }\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.vDS ? this.state.vDS : this.props.items[0].ds }\r\n            this.handleOnChangeDS(dato)\r\n\r\n            //var dato2 = await { key: this.props.idGrupo, id: 1, val: this.props.items[0].tag }\r\n            var dato2 = await { key: this.props.idGrupo, id: 1, val: this.state.vTag ? this.state.vTag : this.props.items[0].tag }\r\n            this.handleOnChangeTag(dato2)\r\n\r\n            //var dato3 = await { key: this.props.idGrupo, id: 1, val: this.props.items[0].desc }\r\n            var dato3 = await { key: this.props.idGrupo, id: 1, val: this.state.vDesc ? this.state.vDesc : this.props.items[0].desc }\r\n            this.handleOnChangeDesc(dato3)\r\n\r\n            var dato4 = await { key: this.props.idGrupo, id: 1, val: this.state.vOF ? this.state.vOF : this.props.items[0].att }\r\n            this.handleOnChangeOF(dato4)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getData = async () => {\r\n        try {\r\n            const url = 'datasources'\r\n            const body = '?id=0'\r\n            var response = await baseServices.getData(body, url);\r\n            this.setState({ datasources: response })\r\n        } catch (err) { }\r\n        //console.log(this.state.datasources.data);\r\n    }\r\n\r\n    getCSVTags = async (csv) => {\r\n        try {\r\n            const url = 'http://10.63.2.160:3000/parseCSV/' + csv\r\n            const body = ''\r\n            var response = await baseServices.getCSVTags(body, url);\r\n            const tagsINPUT = [];\r\n            response.data.resp.forEach(function (tag, index) {\r\n                if (!tag.includes('\"') && !tag.includes(\"'\") && !tag.includes('/') && !tag.includes('\\\\'))\r\n                    tagsINPUT.push({ \"value\": tag, \"text\": tag })\r\n            });\r\n            if (tagsINPUT.length > 0)\r\n                this.setState({ tagsCSV: tagsINPUT })\r\n            else\r\n                this.setState({ tagsCSV: [] })\r\n        } catch (err) {\r\n            this.setState({ tagsCSV: [] })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {/* {JSON.stringify(this.state.value)}<br /> */}\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        {/* <Badge color={(this.state.value === \"\" || this.state.value.tag === \"\" || this.state.value.desc === \"\" || this.state.value.ds === \"\" || !this.state.value.tag || !this.state.value.desc || !this.state.value.ds) ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge> */}\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    Tags opcionales para entrenar el modelo\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n                        <div align=\"right\">\r\n                            <Button\r\n                                type=\"link\"\r\n                                content={<Icon name=\"delete\" size=\"small\" root=\"common\" />}\r\n                                onClick={() => {\r\n                                    this.handleOnChangeDS({ key: idGrupo, id: item.id, val: '' });\r\n                                    this.handleOnChangeTag({ key: idGrupo, id: item.id, val: '' });\r\n                                    this.handleOnChangeDesc({ key: idGrupo, id: item.id, val: '' });\r\n                                    this.setState({ value: { tag: \"\", desc: \"\", ds: \"\" } });\r\n                                }\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <Select\r\n                            key={item.id + 20}\r\n                            placeholder={\"Seleccione la Descripcion del Tag\"}\r\n                            fluid={true}\r\n                            options={[{ value: 'model_feature', text: 'model_feature' }, { value: 'model_validation', text: 'model_validation' }, { value: 'operational_filter', text: 'operational_filter' }]}\r\n                            value={this.state.value.desc}\r\n                            onChange={(value) => this.handleOnChangeDesc({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n                        <Select\r\n                            key={item.id + 30}\r\n                            placeholder={\"Seleccione el Data Source\"}\r\n                            fluid={true}\r\n                            //options={[{ value: 'mongo_results_dmh', text: 'mongo_results_dmh' }, { value: 'mongo_data_coord', text: 'mongo_data_coord' }, { value: 'mongo_data_pervsent', text: 'mongo_data_pervsent' }, { value: 'SGO3', text: 'SGO3' }]}\r\n                            options={this.state.datasources.data ? this.state.datasources.data : [{}]}\r\n                            value={this.state.value.ds}\r\n                            onChange={(value) => {\r\n                                this.handleOnChangeDS({ key: idGrupo, id: item.id, val: value });\r\n                                //this.handleOnChangeTag({ key: idGrupo, id: item.id, val: \"\" })\r\n                            }\r\n                            }\r\n\r\n                        />\r\n\r\n                        {\r\n                            this.state.tagsCSV.length > 0 ?\r\n                                <Select\r\n                                    key={item.id + 50}\r\n                                    placeholder={\"Seleccione el Tag\"}\r\n                                    fluid={true}\r\n                                    options={this.state.tagsCSV ? this.state.tagsCSV : [{}]}\r\n                                    value={this.state.value.tag}\r\n                                    onChange={(value) => this.handleOnChangeTag({ key: idGrupo, id: item.id, val: value })}\r\n                                />\r\n                                :\r\n                                <Input\r\n                                    key={item.id + 10}\r\n                                    placeholder={\"Ingrese el Nombre del Tag\"}\r\n                                    fluid={true}\r\n                                    rows={1}\r\n                                    value={this.state.value.tag}\r\n                                    onChange={(value) => this.handleOnChangeTag({ key: idGrupo, id: item.id, val: value })}\r\n                                />\r\n                        }\r\n\r\n\r\n                        {\r\n                            this.state.value.desc === 'operational_filter' ?\r\n                                <Popup className=\"popup-theme-wrap\"\r\n                                    position=\"right center\"\r\n                                    on=\"hover\"\r\n                                    element={\r\n                                        <Input\r\n                                            key={item.id + 90}\r\n                                            placeholder={\"Ingrese el Filtro Operacional\"}\r\n                                            fluid={true}\r\n                                            rows={1}\r\n                                            value={this.state.value.of}\r\n                                            //type=\"number\"\r\n                                            onChange={(value) => this.handleOnChangeOF({ key: idGrupo, id: item.id, val: value })}\r\n                                        />\r\n                                    }\r\n                                >\r\n                                    <Card>\r\n                                        <Card.Content>\r\n                                            {\"Condición (>, <, =)\"} <br />  {\"seguido del valor.\"} <br />  {\"Ejemplo: >20.75\"}\r\n                                        </Card.Content>\r\n                                    </Card>\r\n                                </Popup>\r\n\r\n\r\n                                :\r\n                                <div />\r\n\r\n                        }\r\n\r\n\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Input, Select, Badge, Card, Popup } from '@scuf/common';\r\nimport baseServices from '../../services/base.services';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: { tag: \"\", desc: \"\", ds: \"\" },\r\n            vTag: \"\",\r\n            vDesc: \"\",\r\n            vDS: \"\",\r\n            datasources: \"\",\r\n            tagsCSV: []\r\n\r\n        };\r\n    }\r\n\r\n    handleOnChangeTag = (dato) => {\r\n        this.setState({ vTag: dato.val });\r\n        this.setState({ value: { tag: dato.val, desc: 'model_feature', ds: this.state.vDS } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vDS && !this.state.vDS == \"\" && dato.val && !dato.val == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: dato.val, desc: 'model_feature', ds: this.state.vDS } });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeDS = (dato) => {\r\n        //this.setState({ value: dato.val });\r\n\r\n        this.setState({ vDS: dato.val });\r\n        // this.setState({ value: { tag: this.state.vTag, desc: 'model_feature', ds: dato.val } });\r\n        this.setState({ value: { tag: '', desc: 'model_feature', ds: dato.val } });\r\n        this.getCSVTags(dato.val);\r\n\r\n\r\n        this.props.onRemoveDato(dato);\r\n\r\n        // if (dato.val === \"\" ) {\r\n        //     this.props.onRemoveDato(dato);\r\n        // }\r\n        // else {\r\n        //     if (this.state.vTag && !this.state.vTag == \"\" && dato.val && !dato.val == \"\") {\r\n        //         //this.props.onDato({ key: dato.key, id: dato.id, val: { tag: this.state.vTag, desc: 'model_feature', ds: dato.val } });\r\n        //         this.props.onDato({ key: dato.key, id: dato.id, val: { tag: '', desc: 'model_feature', ds: dato.val } });\r\n        //     }\r\n        // }\r\n\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        this.getData();\r\n        var nvalue = \"\"\r\n        var ntag = \"\"\r\n        var ndesc = \"model_feature\"\r\n        var nds = \"\"\r\n        this.props.items.map((item) => {\r\n            nvalue = item.value\r\n            ntag = item.tag\r\n            nds = item.ds\r\n        }\r\n        )\r\n\r\n        //console.log(this.props.item)\r\n\r\n        this.setState({ value: { tag: ntag, desc: ndesc, ds: nds } });\r\n        //this.setState({ value: nvalue });\r\n        this.setState({ vTag: nvalue.tag });\r\n        this.setState({ vDesc: 'model_feature' });\r\n        this.setState({ vDS: nvalue.ds });\r\n        //console.log(this.props.items)\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        // var nvalue = \"\"\r\n        // this.props.items.map((item) =>\r\n        //     nvalue = item.value\r\n        // )\r\n\r\n        //console.log(this.state.value.tag)\r\n\r\n        if (this.state.value !== \"\") {\r\n            //var dato = await { key: this.props.idGrupo, id: 1, val: this.props.items[0].ds }\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.vDS ? this.state.vDS : this.props.items[0].ds }\r\n            this.handleOnChangeDS(dato)\r\n\r\n            var dato2 = await { key: this.props.idGrupo, id: 1, val: this.state.vTag ? this.state.vTag : this.props.items[0].tag }\r\n            this.handleOnChangeTag(dato2)\r\n        }\r\n\r\n    }\r\n\r\n    getData = async () => {\r\n        try {\r\n            const url = 'datasources'\r\n            const body = '?id=0'\r\n            var response = await baseServices.getData(body, url);\r\n            this.setState({ datasources: response })\r\n        } catch (err) { }\r\n        //console.log(this.state.datasources.data);\r\n    }\r\n\r\n\r\n    getCSVTags = async (csv) => {\r\n        try {\r\n            const url = 'http://10.63.2.160:3000/parseCSV/' + csv\r\n            const body = ''\r\n            var response = await baseServices.getCSVTags(body, url);\r\n            const tagsINPUT = [];\r\n            const tagRegex = /^[a-zA-Z0-9\\s*_.]+$/;\r\n            response.data.resp.forEach(function (tag, index) {\r\n                //if (tagRegex.test(tag)) \r\n                if (!tag.includes('\"') && !tag.includes(\"'\") && !tag.includes('/') && !tag.includes('\\\\'))\r\n                    tagsINPUT.push({ \"value\": tag, \"text\": tag })\r\n            });\r\n            if (tagsINPUT.length > 0)\r\n                this.setState({ tagsCSV: tagsINPUT })\r\n            else\r\n                this.setState({ tagsCSV: [] })\r\n        } catch (err) {\r\n            this.setState({ tagsCSV: [] })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {/* {JSON.stringify(this.state.value)}<br /> */}\r\n                {/* {JSON.stringify(this.state.datasources.data)}<br /> */}\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={(this.state.value === \"\" || this.state.value.tag === \"\" || this.state.value.desc === \"\" || this.state.value.ds === \"\" || !this.state.value.tag || !this.state.value.desc || !this.state.value.ds) ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    Tags mínimos (2) requeridos para entrenar el modelo\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n\r\n\r\n                        <Select\r\n                            key={item.id + 30}\r\n                            placeholder={\"Seleccione el Data Source\"}\r\n                            fluid={true}\r\n                            //options={[{ value: 'mongo_results_dmh', text: 'mongo_results_dmh' }, { value: 'mongo_data_coord', text: 'mongo_data_coord' }, { value: 'mongo_data_pervsent', text: 'mongo_data_pervsent' }, { value: 'SGO3', text: 'SGO3' }]}\r\n                            options={this.state.datasources.data ? this.state.datasources.data : [{}]}\r\n                            value={this.state.value.ds}\r\n                            onChange={(value) => {\r\n                                this.handleOnChangeDS({ key: idGrupo, id: item.id, val: value });\r\n                                // this.handleOnChangeTag({ key: idGrupo, id: item.id, val: \"\" })\r\n                            }\r\n                            }\r\n                        />\r\n\r\n                        {\r\n                            this.state.tagsCSV.length > 0 ?\r\n                                <Select\r\n                                    key={item.id + 50}\r\n                                    placeholder={\"Seleccione el Tag\"}\r\n                                    fluid={true}\r\n                                    options={this.state.tagsCSV ? this.state.tagsCSV : [{}]}\r\n                                    value={this.state.value.tag}\r\n                                    onChange={(value) => this.handleOnChangeTag({ key: idGrupo, id: item.id, val: value })}\r\n                                />\r\n                                :\r\n                                <Input\r\n                                    key={item.id + 10}\r\n                                    placeholder={\"Ingrese el Nombre del Tag\"}\r\n                                    fluid={true}\r\n                                    rows={1}\r\n                                    value={this.state.value.tag}\r\n                                    onChange={(value) => this.handleOnChangeTag({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                                />\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n                    </React.Fragment>\r\n                ))}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Select, Badge, Card, Popup } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    {\r\n                                        item.label == \"Tipo\" ?\r\n                                            <Fragment>Tipo de Modelo</Fragment>\r\n                                            : \"X\"\r\n\r\n                                    }\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n\r\n                        <Select\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            options={[{ value: 'clustering', text: 'clustering' }]}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Select, Badge, Popup, Card } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    Criterio para escoger el modelo xgboost a utilizar (último, menor ruido, menor cantidad de clusters, etc)\r\n                                    <br />\r\n                                    {/* <a href=\"https://hdbscan.readthedocs.io/en/latest/parameter_selection.html#selecting-min-cluster-size\" target=\"_blank\">Mas Información</a> */}\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n\r\n                        <Select\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            options={[{ value: 'last', text: 'last' }]}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Chart } from '@scuf/charts';\r\nimport { Slider } from '@scuf/common';\r\nimport \"@scuf/common/honeywell-dark/theme.css\";\r\nimport '@scuf/charts/honeywell-dark/theme.css'\r\n\r\nexport default class Gauge extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        if (!isNaN(dato.val)) {\r\n            this.setState({ value: dato.val });\r\n            this.props.onDato(dato);\r\n        }\r\n        else {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue == '' ? 0 : nvalue });\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n            <div>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        <Chart showTooltips={false}>\r\n                            <Chart.Pane />\r\n                            <Chart.Gauge data={[{ y: value }]} useDial={true} dial={[{ backgroundColor: \"red\" }]}>\r\n                                <Chart.CenterBlock>\r\n                                    <span style={{ fontSize: '2rem' }}>{value < 40 ? \"Recarga\" : value > 60 ? \"Sobrecarga\" : \"Normal\"}</span>\r\n                                </Chart.CenterBlock>\r\n                            </Chart.Gauge>\r\n                            <Chart.YAxis variant=\"gauge\">\r\n                                <Chart.PlotBand from={0} to={39} variant=\"gauge\" color=\"red\" />\r\n                                <Chart.PlotBand from={40} to={60} variant=\"gauge\" color=\"green\" />\r\n                                <Chart.PlotBand from={61} to={100} variant=\"gauge\" color=\"red\" />\r\n                            </Chart.YAxis>\r\n                        </Chart>\r\n                        <Slider label=\"&nbsp;&nbsp;0\"\r\n                            min={0}\r\n                            max={100}\r\n                            value={this.state.value}\r\n                            onChange={value => {\r\n                                this.setState({ value });\r\n                            }}\r\n\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            fluid\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { DatePicker } from '@scuf/common';\r\nimport { LocalizationConfig } from '@scuf/localization';\r\n\r\n\r\nexport default class DTPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.activeElement.blur();\r\n    }\r\n\r\n\r\n    render() {\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <div id=\"blur\">\r\n                <LocalizationConfig languageCode={'es-CL'}>\r\n                    {this.props.items.map((item) => (\r\n                        <DatePicker\r\n                            className=\"abajo\"\r\n                            key={item.id}\r\n                            type=\"date\"\r\n                            helperText={item.label}\r\n                            closeOnDocumentClick={true}\r\n                            fluid={true}\r\n                            reserveSpace={true}\r\n                            displayFormat={\"DD-MM-YYYY\"}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            readOnly={false}\r\n                            disabled={false}\r\n                            showYearSelector={true}\r\n                        />\r\n\r\n                    ))}\r\n                </LocalizationConfig>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Table, Modal, Card, Popup } from '@scuf/common';\r\nimport RadioGroup from \"./miRadioGroup\";\r\nimport CheckBox from \"./miCheckBox\";\r\nimport TextoArea from \"./miTextArea\"\r\nimport InputNumber from \"./miInputNumber\"\r\nimport InputText from \"./miInputText\"\r\nimport InputTextMCS from \"./miInputTextMCS\"\r\nimport InputTextDataRange from \"./miInputTextDataRange\"\r\nimport InputTag from \"./miInputTag\"\r\nimport InputTagMF from \"./miInputTagMF\"\r\nimport Selector from \"./miSelector\"\r\nimport SelectorRSC from \"./miSelector_run_serve_criteria\"\r\nimport Gauge from \"./miGauge\"\r\nimport DTPicker from \"./miDatePicker\"\r\n//import SubirArchivo from \"./miFileUpload\"\r\n\r\n\r\n\r\nfunction Dibuja(props) {\r\n\r\n    const dibujar = props.items;\r\n\r\n    if (dibujar.type === 'checkboxes') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/* <Table.Cell>{dibujar.label}</Table.Cell> */}\r\n                <Table.Cell>\r\n                    <Popup className=\"popup-theme-wrap\" element={dibujar.label} position=\"right center\" on=\"hover\">\r\n                        <Card>\r\n                            <Card.Content>\r\n                                {\r\n                                    dibujar.label == \"Imputación de datos faltantes\" ?\r\n                                        <Fragment>Completar valores Nulos del dataset usando técnicas de machine learning (KNNImputer)</Fragment>\r\n                                        :\r\n                                        dibujar.label == \"Limpieza de valores negativos\" ?\r\n                                            <Fragment>Eliminar valores negativos</Fragment>\r\n                                            :\r\n                                            dibujar.label == \"Remoción de valores outliers\" ?\r\n                                                <Fragment>Eliminar outliers del modelo</Fragment>\r\n                                                : \"X\"\r\n\r\n                                }\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </Popup>\r\n                </Table.Cell>\r\n                <Table.Cell textAlign=\"right\"><RadioGroup key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'switch') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/* <Table.Cell>{dibujar.label}</Table.Cell> */}\r\n                <Table.Cell>\r\n                    <Popup className=\"popup-theme-wrap\" element={dibujar.label} position=\"right center\" on=\"hover\">\r\n                        <Card>\r\n                            <Card.Content>\r\n                                {\r\n                                    dibujar.label == \"Imputación de datos faltantes\" ?\r\n                                        <Fragment>Completar valores Nulos del dataset usando técnicas de machine learning (KNNImputer)</Fragment>\r\n                                        :\r\n                                        dibujar.label == \"Limpieza de valores negativos\" ?\r\n                                            <Fragment>Eliminar valores negativos</Fragment>\r\n                                            :\r\n                                            dibujar.label == \"Remoción de valores outliers\" ?\r\n                                                <Fragment>Eliminar outliers del modelo</Fragment>\r\n                                                : \"X\"\r\n\r\n                                }\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </Popup>\r\n                </Table.Cell>\r\n                <Table.Cell textAlign=\"right\"><CheckBox key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'textareas') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <TextoArea key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'numberareas') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <InputNumber key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputtext') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <InputText key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputtextMCS') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <InputTextMCS key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputtextDataRange') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/* <Table.Cell>{dibujar.label}</Table.Cell> */}\r\n                <Table.Cell> <InputTextDataRange key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputTag') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/* <Table.Cell>{dibujar.label}</Table.Cell> */}\r\n                <Table.Cell> <InputTag key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputTagMF') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/* <Table.Cell>{dibujar.label}</Table.Cell> */}\r\n                <Table.Cell> <InputTagMF key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'select') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <Selector key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'selectRSC') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <SelectorRSC key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'gauges') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <Gauge key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'datepickers') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell>{dibujar.label}</Table.Cell>\r\n                <Table.Cell textAlign=\"right\"> <DTPicker key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    } else if (dibujar.type === 'fileuploads') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/*<Table.Cell>{dibujar.label}</Table.Cell>*/}\r\n                {/* <Table.Cell textAlign=\"left\"> <SubirArchivo key={props.idGrupo} token={props.token} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell> */}\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else return <React.Fragment />\r\n\r\n\r\n}\r\n\r\n\r\nexport default class General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeName: \"\",\r\n            tagItem: { id: 1000, label: 'Tag1', type: 'inputTag', items: [{ id: 1, label: 'Tag', value: '' }] },\r\n            newTags: []\r\n\r\n\r\n        };\r\n    }\r\n\r\n\r\n\r\n    handleDato = (dato) => {\r\n        this.props.onhandleGeneralDato(dato);\r\n    };\r\n\r\n    handleRemoveDato = (dato) => {\r\n        this.props.onhandleGeneralRemoveDato(dato);\r\n    };\r\n\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const Pagina = this.props.id\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Table key={Pagina}>\r\n                    <Table.Header>\r\n                        <Table.HeaderCell content={this.props.titulo} textAlign=\"left\" />\r\n                        {/* <Modal className=\"popup-theme-wrap\" closeIcon={true} trigger={<Table.HeaderCell content={this.props.titulo} textAlign=\"left\" />}>\r\n                            <Modal.Content>\r\n                                This modal is controlled via its trigger JSX and built in close methods. The onClose method is used when a user clicks the close icon or outside the modal\r\n                            </Modal.Content>\r\n                        </Modal> */}\r\n\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {\r\n\r\n                            this.props.items.map((item) => (\r\n                                <React.Fragment>\r\n                                    <Dibuja key={item.id} token={this.props.token} idGrupo={Pagina + \"-\" + item.id} items={item} onDato={this.handleDato} onRemoveDato={this.handleRemoveDato} />\r\n                                </React.Fragment>\r\n                            ))\r\n                        }\r\n                        {\r\n\r\n                            this.state.newTags.map((item) => (\r\n                                <React.Fragment>\r\n                                    <Dibuja key={item.id} token={0} idGrupo={Pagina + \"-\" + item.id} items={item} onDato={this.handleDato} onRemoveDato={this.handleRemoveDato} />\r\n                                </React.Fragment>\r\n                            ))\r\n                        }\r\n\r\n                    </Table.Body>\r\n                    <Table.Footer>\r\n                        <Table.Row align=\"left\">\r\n                            <Table.HeaderCell >\r\n\r\n                            </Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Footer>\r\n                </Table>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n//import axios from \"axios\";\r\nimport { Header, Button, Notification, Card, Loader, Modal, Badge, Icon, Tooltip } from \"@scuf/common\";\r\nimport Grupos from \"./Grupos\";\r\nimport baseServices from '../../services/base.services';\r\n\r\nconst ReactToastify = require('react-toastify');\r\n\r\nconst config = require(\"../../config.json\");\r\n\r\n\r\n\r\nconst ToastNotification = ({ closeToast, Texto, Detalle }) => (\r\n    <Notification\r\n        className=\"toast-notification\"\r\n        severity=\"critical\"\r\n        onCloseClick={closeToast}\r\n        hasIcon={true}\r\n        title={Texto}\r\n        //detailsText=\"Todos los datos son obligatorios\"\r\n        detailsText={Detalle.replaceAll(',', \",\\n\")}\r\n        onDetailsClick={() => { }} //{() => alert('Debie ingresar todos los datos para continuar')}\r\n    />\r\n)\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            hidden: \"hidden\",\r\n            activePage: 0,\r\n            datosAPI: [],\r\n            datos: [], //require(\"./Components/datos.json\"),\r\n            items: [],\r\n            respuestas: [],\r\n            apiBody: \"\",\r\n            modal: false,\r\n            modalFin: false,\r\n            Preguntas_Todas: [],\r\n            Preguntas_Respondidas: [],\r\n            Preguntas_Faltantes: [],\r\n            Situacion_Final: \"\",\r\n            Color_Situacion_Final: \"\",\r\n            MensajeAPI: \"\"\r\n        };\r\n        this.click_Next = this.click_Next.bind(this);\r\n        this.click_Prev = this.click_Prev.bind(this);\r\n        this.click_Send = this.click_Send.bind(this);\r\n        this.click_ModalSi = this.click_ModalSi.bind(this);\r\n        this.click_ModalNo = this.click_ModalNo.bind(this);\r\n    }\r\n\r\n    async getData(body, url) {\r\n        try {\r\n            if (body) {\r\n                var response = await baseServices.getData(body, url);\r\n                if (response.data && response.data.length > 0) {\r\n\r\n                    this.setState({\r\n                        datos: response.data,\r\n                        isLoading: false\r\n                    })\r\n\r\n                }\r\n            } else { }\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        const items = config\r\n        this.props.modelo ? this.getData('?id=editarmodelo;' + this.props.modelo, 'models')\r\n            :\r\n            this.setState({\r\n                datos: items,\r\n                isLoading: false\r\n            });\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(this.props.modelo)\r\n    }\r\n\r\n\r\n    click_Next() {\r\n\r\n        var Preguntas_Todas = []\r\n        this.state.datos[this.state.activePage].datos.map((item) => Preguntas_Todas.push(item.label))\r\n\r\n        let Preguntas_Faltantes = Preguntas_Todas.filter(Pregunta => !this.state.Preguntas_Respondidas.includes(Pregunta))\r\n\r\n        this.setState({\r\n            Preguntas_Todas: Preguntas_Todas,\r\n            Preguntas_Faltantes: Preguntas_Faltantes\r\n\r\n        });\r\n\r\n        const page = Number(this.state.datos[this.state.activePage].id)\r\n        const pageSize = this.state.datos[this.state.activePage].datos.length\r\n        var ndatos = 0\r\n        this.state.items.map((item) => parseInt(item.key.split(\"-\")[0]) === page ? ndatos = ndatos + 1 : null)\r\n\r\n\r\n        if (ndatos < pageSize) {\r\n            var mensaje\r\n            (pageSize - ndatos) === 1 ? mensaje = \"Falta un dato\" : mensaje = (\"Faltan \" + (pageSize - ndatos) + \" datos\")\r\n            ReactToastify.toast(<ToastNotification Detalle={JSON.stringify(Preguntas_Faltantes).replace('[', '').replace(']', '')} Texto={mensaje} closeToast={true} />)\r\n        }\r\n        else {\r\n\r\n            // if (this.state.activePage >= this.state.datos.length - 2) {\r\n            //     this.setState({ hidden: \"\" });\r\n            // } else { this.setState({ hidden: \"hidden\" }); }\r\n\r\n            if (this.state.activePage < this.state.datos.length - 1) {\r\n                this.setState({ activePage: this.state.activePage + 1 });\r\n                window.scrollTo(1, 1);\r\n            }\r\n            //else {\r\n            //    this.setState({ activePage: 0, hidden: \"\" });\r\n            //}\r\n        }\r\n\r\n        //this.state.datos[this.state.activePage + 1].titulo === 'TAGS' && this.setState({ hidden: \"\" });\r\n    }\r\n\r\n    click_Prev() {\r\n        const page = Number(this.state.datos[this.state.activePage].id)\r\n        //const pageSize = this.state.datos[this.state.activePage].datos.length\r\n        var ndatos = 0\r\n        this.state.items.map((item) => parseInt(item.key.split(\"-\")[0]) === page ? ndatos = ndatos + 1 : null)\r\n\r\n        //if (ndatos < pageSize) {\r\n        //    var mensaje\r\n        //    (pageSize - ndatos) === 1 ? mensaje = \"Falta un dato\" : mensaje = (\"Faltan \" + (pageSize - ndatos) + \" datos\")\r\n        //    ReactToastify.toast(<ToastNotification Texto={mensaje} closeToast={true} />)\r\n        //}\r\n        //else {\r\n        //    if (this.state.activePage > 0) {\r\n        //        this.setState({ activePage: this.state.activePage - 1 });\r\n        //    } else {\r\n        //        this.setState({ activePage: this.state.datos.length - 1 });\r\n        //    }\r\n        //    window.scrollTo(1, 1);\r\n        //}\r\n\r\n        if (this.state.activePage > 0) {\r\n            this.setState({ activePage: this.state.activePage - 1 });\r\n            window.scrollTo(1, 1);\r\n        }\r\n\r\n        this.setState({ hidden: \"hidden\" });\r\n\r\n\r\n    }\r\n\r\n\r\n    click_Send() {\r\n        this.setState({ modal: true })\r\n    }\r\n\r\n\r\n    postData = async () => {\r\n        try {\r\n            const bodypost = this.state.respuestas;\r\n            const url = 'models';\r\n            var response = await baseServices.postData(bodypost, url);\r\n            window.location.reload();\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n    click_ModalSi() {\r\n        try {\r\n            this.setState({ isLoading: true, modal: false });\r\n            this.postData();\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({\r\n                isLoading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    click_ModalNo() {\r\n        this.setState({ modal: false });\r\n    }\r\n\r\n\r\n    click_ModalFin() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    handleGeneralRemoveDato = (item) => {\r\n        //nitems: De los items filtro el key modificado (se elimina) y NO se concatena el nuevo item\r\n        const nitems = this.state.items.filter((c) => c.key !== item.key)\r\n\r\n\r\n        //nitems2: Mismo nitems, pero sin la columna key (para el envío a la BD)\r\n        var nitems2 = [];\r\n        nitems.map((nitem) => nitems2 = nitems2.concat([{ idPregunta: nitem.key.split(\"-\")[1], Respuesta: nitem.val }]))\r\n\r\n        //KeyPageFile: Para obtener el id de la página (0) y el id de la fila (1)\r\n        const keyPageFile = item.key.split(\"-\")\r\n\r\n        //ndatos: De todos los datos originales que vienen de la BD, filtro solo la hoja asociada al item modificado\r\n        var ndatos = this.state.datos.filter((c) => c.id === parseInt(keyPageFile[0]))\r\n\r\n        //ndatos2: De la hoja (ndatos) saco solamente el arreglo de datos (las filas)\r\n        var ndatos2 = []\r\n        ndatos.map((ndato) =>\r\n            ndatos2 = ndatos2.concat(ndato.datos)\r\n        )\r\n\r\n        //ndatos3: De todas las filas (ndatos2), saco solo la correspondiente al item modificado\r\n        var ndatos3 = ndatos2.filter((c) => c.id === parseInt(keyPageFile[1]))\r\n\r\n\r\n        //Con el filtro quita esta pregunt del array de preguntas espondidas\r\n        let Preguntas_Respondidas = this.state.Preguntas_Respondidas.filter(item => item !== ndatos3[0].label)\r\n        this.setState({\r\n            Preguntas_Respondidas: Preguntas_Respondidas\r\n        });\r\n\r\n\r\n\r\n        //ndatos4: De la fila (ndatos3) saco sus elementos. Si es un checkbox, recorro el radiogroup y le asigno el checked=1 al elemento correspondiente\r\n        var ndatos4 = []\r\n        ndatos3.map((ndato) => {\r\n            if (ndato.type === 'checkboxes') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.label === item.val ? ndato.value = 1 : ndato.value = 0)\r\n                //ndatos3.checkboxes = ndatos4\r\n\r\n            } else if (ndato.type === 'switch') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'textareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'numberareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtext') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtextMCS') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtextDataRange') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTag') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTagMF') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'select') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'selectRSC') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'gauges') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'datepickers') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'fileuploads') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            }\r\n            return null\r\n        })\r\n\r\n\r\n        this.setState({\r\n            items: nitems,\r\n            respuestas: nitems2\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    handleGeneralDato = (item) => {\r\n\r\n        //nitems: De los items filtro el key modificado (se elimina) y se concatena el nuevo item\r\n        const nitems = (this.state.items.filter((c) => c.key !== item.key)).concat(item)\r\n\r\n        //nitems2: Mismo nitems, pero sin la columna key (para el envío a la BD)\r\n        var nitems2 = [];\r\n        nitems.map((nitem) => nitems2 = nitems2.concat([{ idPregunta: nitem.key.split(\"-\")[1], Respuesta: nitem.val }]))\r\n\r\n        //KeyPageFile: Para obtener el id de la página (0) y el id de la fila (1)\r\n        const keyPageFile = item.key.split(\"-\")\r\n\r\n        //ndatos: De todos los datos originales que vienen de la BD, filtro solo la hoja asociada al item modificado\r\n        var ndatos = this.state.datos.filter((c) => c.id === parseInt(keyPageFile[0]))\r\n\r\n        //ndatos2: De la hoja (ndatos) saco solamente el arreglo de datos (las filas)\r\n        var ndatos2 = []\r\n        ndatos.map((ndato) =>\r\n            ndatos2 = ndatos2.concat(ndato.datos)\r\n        )\r\n\r\n        //ndatos3: De todas las filas (ndatos2), saco solo la correspondiente al item modificado\r\n        var ndatos3 = ndatos2.filter((c) => c.id === parseInt(keyPageFile[1]))\r\n        var Preguntas_Respondidas = this.state.Preguntas_Respondidas\r\n\r\n\r\n        //ndatos3[0].id > 99 && console.log(item.val);\r\n        //lleno el array con las preguntas respondidas para luego mostrar las faltantes\r\n        if (Preguntas_Respondidas.indexOf(ndatos3[0].label) === -1) {\r\n            Preguntas_Respondidas.push(ndatos3[0].label)\r\n            this.setState({ Preguntas_Respondidas: Preguntas_Respondidas });\r\n        }\r\n\r\n\r\n\r\n\r\n        //ndatos4: De la fila (ndatos3) saco sus elementos. Si es un checkbox, recorro el radiogroup y le asigno el checked=1 al elemento correspondiente\r\n        var ndatos4 = []\r\n        ndatos3.map((ndato) => {\r\n            if (ndato.type === 'checkboxes') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.label === item.val ? ndato.value = 1 : ndato.value = 0)\r\n                //ndatos3.checkboxes = ndatos4\r\n\r\n            } else if (ndato.type === 'switch') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n\r\n            } else if (ndato.type === 'textareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'numberareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtext') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtextMCS') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtextDataRange') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTag') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTagMF') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'select') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'selectRSC') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'gauges') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'datepickers') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'fileuploads') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            }\r\n            return null\r\n        })\r\n\r\n\r\n        //Ahora ndatos4 corresponde a la fila en el formato \"datos\", por lo que hay que reemplazarla en el array de datos\r\n        //ndatos2.datos = ndatos3\r\n\r\n        //const apiBody = {\r\n        //    \"hashCode\": this.props.token,\r\n        //    \"idFormulario\": 1,\r\n        //    \"idPlanta\": this.props.idPlanta,\r\n        //    \"idUsuario\": this.props.idUsuario,\r\n        //    \"idVehiculo\": this.props.idVehiculo,\r\n        //    \"resultados\": nitems2\r\n        //}\r\n\r\n\r\n        this.setState({\r\n            items: nitems,\r\n            respuestas: nitems2\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleNewTag = () => {\r\n        var hojas = this.state.datos;\r\n        hojas.slice(-1);\r\n        var newTagsArray = this.state.datos[3].datos;\r\n        var tagsSize = newTagsArray.length;\r\n        var tagItem = {\r\n            \"id\": 10000 + tagsSize,\r\n            \"label\": \"Tag\",\r\n            \"type\": \"inputTag\",\r\n            \"items\": [\r\n                {\r\n                    \"id\": 1,\r\n                    \"label\": \"Tag\",\r\n                    \"value\": \"\"\r\n                }\r\n            ]\r\n        }\r\n\r\n        newTagsArray.push(tagItem)\r\n\r\n        var hojaTags = {\r\n            \"id\": 4,\r\n            \"titulo\": \"TAGS\",\r\n            \"datos\": newTagsArray\r\n        }\r\n\r\n        hojas.push(hojaTags)\r\n        this.setState({ datos: hojas })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header menu={false} logo={false} title={'Espere...'}>\r\n                    </Header>\r\n                    <Card>\r\n                        <Card.Header />\r\n                        <Card.Content>\r\n                            <Loader minHeight={400}>\r\n                                <div className=\"placeholder\" />\r\n                            </Loader>\r\n                        </Card.Content>\r\n                    </Card>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        else\r\n            return (\r\n\r\n\r\n                <React.Fragment>\r\n                    {/* {\"Respuestas:\"}<br />\r\n                    {JSON.stringify(this.state.respuestas)}<br /><br />\r\n                    {\"Preguntas_Respondidas:\"}<br />\r\n                    {JSON.stringify(this.state.Preguntas_Respondidas)}<br /><br />\r\n                    {\"Preguntas_Faltantes:\"}<br />\r\n                    {JSON.stringify(this.state.Preguntas_Faltantes)} */}\r\n\r\n\r\n                    {this.renderModal()}\r\n                    {this.renderModalFin()}\r\n                    <table style={{ width: '50%' }}>\r\n                        <tr>\r\n                            <td colspan=\"3\">\r\n                                <Header menu={false} logo={false} title={this.props.modelo ? 'Editar Modelo \"' + this.props.modelo + '\"' : 'Crear Modelo'}>\r\n                                    <Header.Item>\r\n                                        <Icon name=\"close\" size=\"small\" root=\"common\" onClick={() => { this.setState({ isLoading: true, modal: false }); this.click_ModalFin(); }} />\r\n                                    </Header.Item>\r\n                                </Header>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\">\r\n\r\n                                <Grupos\r\n                                    key={1}\r\n                                    token={this.props.token}\r\n                                    id={this.state.datos[this.state.activePage].id}\r\n                                    titulo={this.state.datos[this.state.activePage].titulo === 'TAGS' ?\r\n                                        <Button type=\"secondary\"\r\n                                            icon=\"badge-plus\"\r\n                                            size=\"small\"\r\n                                            content=\"TAGS\"\r\n                                            iconPosition=\"right\" onClick={this.handleNewTag}>\r\n                                        </Button>\r\n                                        :\r\n                                        this.state.datos[this.state.activePage].titulo\r\n                                    }\r\n                                    items={this.state.datos[this.state.activePage].datos}\r\n                                    onhandleGeneralDato={this.handleGeneralDato}\r\n                                    onhandleGeneralRemoveDato={this.handleGeneralRemoveDato}\r\n                                />\r\n\r\n                            </td>\r\n                        </tr>\r\n                        <tr >\r\n                            <td>\r\n                                <Button type=\"primary\"\r\n                                    icon=\"caret-left\"\r\n                                    size=\"small\"\r\n                                    content=\"\"\r\n                                    iconPosition=\"left\" onClick={this.click_Prev} disabled={this.state.isLoading}>\r\n                                </Button>\r\n                            </td>\r\n                            <td style={{ textAlign: 'center' }}>\r\n                                {\r\n\r\n                                    this.state.datos[this.state.activePage].titulo === 'TAGS' ?\r\n                                        <Button\r\n                                            //className={this.state.hidden}\r\n                                            type=\"primary\"\r\n                                            loading={this.state.isLoading}\r\n                                            size=\"small\"\r\n                                            content=\"Terminar\"\r\n                                            iconPosition=\"right\" onClick={this.click_Send} disabled={this.state.isLoading}>\r\n                                        </Button>\r\n                                        :\r\n                                        <React.Fragment />\r\n                                }\r\n                            </td>\r\n\r\n                            <td style={{ textAlign: 'right' }}>\r\n                                <Button type=\"primary\"\r\n                                    icon=\"caret-right\"\r\n                                    size=\"small\"\r\n                                    content=\"\"\r\n                                    iconPosition=\"right\" onClick={this.click_Next} disabled={this.state.isLoading}>\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\"><span>&nbsp;&nbsp;</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\"><span>&nbsp;&nbsp;</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\"><span>&nbsp;&nbsp;</span></td>\r\n                        </tr>\r\n                    </table>\r\n                    <br /><br /><br /><br /><br />\r\n\r\n                    <div>\r\n                        <ReactToastify.ToastContainer\r\n                            hideProgressBar={false}\r\n                            closeOnClick={false}\r\n                            closeButton={false}\r\n                            newestOnTop={true}\r\n                            //position=\"bottom-right\"\r\n                            position=\"top-center\"\r\n                            autoClose={2500}\r\n                            toastClassName=\"toast-notification-wrap\"\r\n                        />\r\n                    </div>\r\n\r\n\r\n\r\n                </React.Fragment>\r\n\r\n            );\r\n\r\n    }\r\n\r\n\r\n    renderModal() {\r\n        return (\r\n            <Modal style={{ height: '150px', width: '300px', position: 'absolute', top: '20%', left: '50%', marginLeft: '-150px' }} closeIcon={true} size=\"mini\" onClose={() => this.setState({ modal: false })} open={this.state.modal} closeOnDimmerClick={false}>\r\n                <Modal.Header>\r\n                    ¿Está Seguro?\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                    <Button type=\"secondary\" size=\"small\" content=\"No\" onClick={this.click_ModalNo} disabled={this.state.isLoading} />\r\n                    <Button type=\"primary\" size=\"small\" content=\"Si\" onClick={this.click_ModalSi} disabled={this.state.isLoading} />\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n\r\n    }\r\n\r\n    renderModalFin() {\r\n        return (\r\n            <Modal className=\"popup-theme-wrap\" size=\"mini\" onClose={() => this.setState({ modalFin: false })} open={this.state.modalFin} closeOnDimmerClick={false}>\r\n                <Modal.Header>\r\n                    Formulario Enviado\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    Situacion Final:<br />{<Badge color={this.state.Color_Situacion_Final.split('\\n')[0]}>{this.state.Situacion_Final.split('\\n')[0]} </Badge>}<br />\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                    <Button type=\"secondary\" size=\"small\" content=\"Cerrar\" onClick={this.click_ModalFin} />\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    notify() {\r\n        ReactToastify.toast(<ToastNotification closeToast={true} />)\r\n    }\r\n\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Modal, InputLabel, Notification, Input } from '@scuf/common'\r\nimport { Icon, Button, Card, Header, Progress, KPIStatistic } from '@scuf/common';\r\nimport { DataTable } from '@scuf/datatable';\r\nimport { useDispatch } from 'react-redux'\r\nimport DataTabDataAPI from './DatTabDataAPI'\r\nimport baseServices from '../../../services/base.services';\r\n//import '@scuf/datatable/honeywell-dark/theme.css'\r\nimport { Fragment } from 'react';\r\nimport Formulario from '../../../components/form/Formulario'\r\nconst ReactToastify = require('react-toastify');\r\n\r\n\r\n\r\nconst DatTabModel = ({ url, body, title }) => {\r\n\r\n\r\n    //const dispatch = useDispatch();\r\n    const [state, setState] = useState([])\r\n    const [modal, setModal] = useState(false);\r\n    const [modalEdit, setModalEdit] = useState(false);\r\n    const [selectedRecord, setSelectedRecord] = useState({})\r\n    const [updatedValue, setUpdatedValue] = useState()\r\n    const [add, setAdd] = useState(false);\r\n    const [id, setId] = useState(0);\r\n    const [distModels, setDistModels] = useState([]);\r\n    const [selectedRow, setSelectedRow] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isEntrenando, setIsEntrenando] = useState(false)\r\n    const [avance, setAvance] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const getData = async () => {\r\n            try {\r\n                if (body) {\r\n                    var response = await baseServices.getData(body, url);\r\n                    if (response.data && response.data.length > 0) {\r\n                        let datos = DataTabDataAPI(response);\r\n\r\n\r\n                        setState(datos);\r\n\r\n                        const result = [];\r\n                        const map = new Map();\r\n                        for (const item of datos.datos) {\r\n                            if (!map.has(item.model)) {\r\n                                map.set(item.model, true);    // set any value to Map\r\n                                result.push({\r\n                                    model: item.model\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        setDistModels(result);\r\n\r\n                    }\r\n                } else { }\r\n\r\n            } catch (err) { }\r\n\r\n        }\r\n        getData();\r\n        //return { ...state, getData }\r\n\r\n    }, [])\r\n\r\n\r\n    const delData = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            if (body) {\r\n                let bodydel = '?id=' + selectedRow[0].model;\r\n                var response = await baseServices.delData(bodydel, url);\r\n                window.location.reload();\r\n            } else { }\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n    let handleDelete = () => {\r\n        var res;\r\n        //console.log(selectedRow[0].id)\r\n        selectedRow.length < 1\r\n            ?\r\n            res = ReactToastify.toast(<ToastNotification Tipo=\"Delete\" Texto={\"Seleccione un Modelo\"} closeToast={true} Severity=\"critical\" />)\r\n            :\r\n            res = ReactToastify.toast(<ToastNotification Tipo=\"Delete\" Texto={selectedRow.length == 1 ? \"¿Eliminar \" + selectedRow[0].model + \"?\" : \"¿Eliminar estos \" + selectedRow[0].conn_id + \" DataSources?\"} closeToast={true} Severity=\"information\" />)\r\n\r\n        return res\r\n    }\r\n\r\n\r\n    let handleAdd = () => {\r\n        var res;\r\n        setAdd(true);\r\n        return res\r\n    }\r\n\r\n    let handleEdit = () => {\r\n        var res;\r\n        setAdd(true);\r\n        return res\r\n    }\r\n\r\n    let handleEntrenar = () => {\r\n        var res;\r\n        selectedRow.length < 1\r\n            ?\r\n            res = ReactToastify.toast(<ToastNotification Tipo=\"Script_Init\" Texto={\"Seleccione un Modelo\"} closeToast={true} Severity=\"critical\" />)\r\n            :\r\n            res = ReactToastify.toast(<ToastNotification Tipo=\"Script_Init\" Texto={\"¿Entrenar \" + selectedRow[0].model + \"?\"} closeToast={true} Severity=\"information\" Model={selectedRow[0].model} />)\r\n\r\n        return res\r\n    }\r\n\r\n\r\n\r\n\r\n    const postEntrena = async (model) => {\r\n        try {\r\n            setIsEntrenando(true);\r\n            setIsLoading(true);\r\n            const bodypost = [\r\n                {\r\n                    \"Columna\": \"init_ingesta\",\r\n                    \"Valor\": \"1\"\r\n                },\r\n                {\r\n                    \"Columna\": \"init_train\",\r\n                    \"Valor\": \"1\"\r\n                },\r\n                {\r\n                    \"Columna\": \"init_serving\",\r\n                    \"Valor\": \"1\"\r\n                },\r\n                {\r\n                    \"Columna\": \"progress\",\r\n                    \"Valor\": \"0\"\r\n                },\r\n                {\r\n                    \"Columna\": \"model\",\r\n                    \"Valor\": model\r\n                },\r\n            ];\r\n            const url = 'scriptinit';\r\n            //const url = 'scriptinittest';\r\n            var response = await baseServices.postData(bodypost, url);\r\n            getScriptInit();\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n\r\n\r\n    const getScriptInit = async () => {\r\n\r\n        try {\r\n            var response = await baseServices.getData('?id=*', 'scriptinit');\r\n            if (response.data && response.data.length > 0) {\r\n                //alert(response.data[0].progress.length);\r\n                //if (response.data[0].init_ingesta == \"1\" || response.data[0].init_train == \"1\" || response.data[0].init_serving == \"1\")\r\n                if (response.data[0].progress.length < 3) {\r\n                    setAvance(response.data[0].progress)\r\n                    setTimeout(() => {\r\n                        getScriptInit()\r\n                    }, 1000);\r\n                } else {\r\n                    setIsEntrenando(false);\r\n                    setIsLoading(false);\r\n                    var res = ReactToastify.toast(<ToastNotification Tipo=\"Info\" Texto={\"Modelo Entrenado\"} closeToast={true} Severity=\"information\" />)\r\n                }\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            setTimeout(() => {\r\n                getScriptInit()\r\n            }, 1000);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getData = async () => {\r\n        try {\r\n            if (body) {\r\n                var response = await baseServices.getData(body, url);\r\n                if (response.data && response.data.length > 0) {\r\n                    let datos = DataTabDataAPI(response);\r\n\r\n                    setState(datos);\r\n\r\n                    const result = [];\r\n                    const map = new Map();\r\n                    for (const item of datos.datos) {\r\n                        if (!map.has(item.model)) {\r\n                            map.set(item.model, true);    // set any value to Map\r\n                            result.push({\r\n                                model: item.model\r\n                            });\r\n                        }\r\n                    }\r\n                    //console.log({ result })\r\n                    //setDistModels(result);\r\n\r\n                }\r\n            } else { }\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n\r\n    const postUpdateModelo = async () => {\r\n        try {\r\n            //setIsEntrenando(true);\r\n            //setIsLoading(true);\r\n            const bodypost = [\r\n                {\r\n                    \"columna\": \"id_conf\",\r\n                    \"valor\": selectedRecord.data.id_conf\r\n                },\r\n                {\r\n                    \"columna\": \"value\",\r\n                    \"valor\": updatedValue\r\n                }\r\n            ];\r\n            const url = 'models';\r\n            var response = await baseServices.postData(bodypost, url);\r\n            getData();\r\n            //setIsLoading(false);\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n\r\n\r\n    const ToastNotification = ({ Tipo, closeToast, Texto, Severity, Model }) => (\r\n        Tipo == \"Info\"\r\n            ?\r\n            <Notification\r\n                className=\"toast-notification\"\r\n                severity={Severity}\r\n                onCloseClick={closeToast}\r\n                hasIcon={false}\r\n                title={Texto}\r\n                detailsText={<Button key={1} size=\"small\" content=\"OK\" onClick={closeToast} />}\r\n                onDetailsClick={closeToast}\r\n            />\r\n            :\r\n            Tipo == \"Delete\"\r\n                ?\r\n                Severity == \"critical\"\r\n                    ?\r\n                    <Notification\r\n                        className=\"toast-notification\"\r\n                        severity={Severity}\r\n                        onCloseClick={closeToast}\r\n                        hasIcon={false}\r\n                        title={Texto}\r\n                        detailsText={<Button key={1} size=\"small\" content=\"OK\" onClick={closeToast} />}\r\n                        onDetailsClick={closeToast}\r\n                    />\r\n                    :\r\n                    <Notification\r\n                        className=\"toast-notification\"\r\n                        severity={Severity}\r\n                        onCloseClick={closeToast}\r\n                        hasIcon={false}\r\n                        title={Texto}\r\n                        detailsText={<Button key={1} size=\"small\" content=\"Si\" onClick={closeToast} />}\r\n                        //detailsText=\"Eliminar\"\r\n                        onDetailsClick={() => { delData() }}\r\n                    />\r\n                :\r\n                Tipo == \"Script_Init\" ?\r\n                    Severity == \"critical\"\r\n                        ?\r\n                        <Notification\r\n                            className=\"toast-notification\"\r\n                            severity={Severity}\r\n                            onCloseClick={closeToast}\r\n                            hasIcon={false}\r\n                            title={Texto}\r\n                            detailsText={<Button key={1} size=\"small\" content=\"OK\" onClick={closeToast} />}\r\n                            onDetailsClick={closeToast}\r\n                        />\r\n                        :\r\n                        <Notification\r\n                            className=\"toast-notification\"\r\n                            severity={Severity}\r\n                            onCloseClick={closeToast}\r\n                            hasIcon={false}\r\n                            title={Texto}\r\n                            detailsText={<Button key={1} size=\"small\" content=\"Si\" onClick={closeToast} />}\r\n                            //detailsText=\"Eliminar\"\r\n                            onDetailsClick={() => { postEntrena(Model) }}\r\n                        />\r\n                    :\r\n                    <Fragment />\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n    const Item = DataTable.HeaderBar.Item;\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Fragment>\r\n                        <Header menu={false} logo={false} title={isEntrenando ? 'Entrenando Modelo... (' + avance + ')' : 'Eliminando Modelo...'}>\r\n                        </Header>\r\n                        <Card>\r\n                            <Card.Header />\r\n                            {/* <Progress percent={50} size=\"xlarge\" /> */}\r\n                            <Card.Content>\r\n                                {/* <Loader minHeight={400}>\r\n                                    <div className=\"placeholder\" />\r\n                                    <Progress percent={avance} circular={true} size='xlarge' />\r\n                                </Loader> */}\r\n                                <Progress percent={avance} circular={true} size='xlarge' />\r\n\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </Fragment>\r\n                    :\r\n                    add ?\r\n                        <Formulario />\r\n                        :\r\n                        state.datos ?\r\n                            modal ?\r\n                                <Formulario modelo={distModels[id].model} />\r\n                                // <Modal closeIcon={true} onClose={() => { setModal(false); setModalEdit(false) }} open={modal} closeOnDimmerClick={false} closeOnDocumentClick={false}>\r\n                                //     <Modal.Header>\r\n                                //         {distModels[id].model}\r\n                                //     </Modal.Header>\r\n                                //     <Modal.Content>\r\n                                //         <Fragment>\r\n                                //             <DataTable data={state.datos.filter(x => x.model == distModels[id].model)} rows={15} search={true}\r\n                                //                 scrollable={true} scrollHeight=\"600%\" reorderableColumns={true} resizableColumns={true}\r\n                                //                 onRowClick={(data) => { setSelectedRecord(data); setUpdatedValue(\"\"); setModalEdit(true) }}\r\n                                //             >\r\n                                //                 {\r\n                                //                     state.fields && state.fields.map((y, i) => (\r\n                                //                         i > 0 && (y.field == 'attribute' || y.field == 'value' || y.field == 'id_confX' || y.field == 'datasource' || y.field == 'description') ?\r\n                                //                             <DataTable.Column key={i} field={y.field} header={y.field} sortable={true} editable={true} editFieldType=\"text\" visible={false} />\r\n                                //                             : <Fragment />\r\n                                //                     ))\r\n                                //                 }\r\n                                //                 <DataTable.Pagination />\r\n                                //             </DataTable>\r\n                                //         </Fragment>\r\n                                //     </Modal.Content>\r\n                                //     <Modal.Footer>\r\n                                //     </Modal.Footer>\r\n\r\n                                //     {\r\n                                //         modalEdit ?\r\n\r\n                                //             <Notification\r\n                                //                 title={selectedRecord.data.attribute}\r\n                                //                 severity=\"information\"\r\n                                //                 detailsText=\"Guardar\"\r\n                                //                 onDetailsClick={() => postUpdateModelo()}\r\n                                //                 onCloseClick={() => setModalEdit(false)}>\r\n                                //                 <Input placeholder=\"Ingrese nuevo valor\" onChange={(data) => { setUpdatedValue(data); }} value={updatedValue} />\r\n                                //             </Notification>\r\n\r\n                                //             : <Fragment />\r\n                                //     }\r\n                                // </Modal>\r\n\r\n                                :\r\n                                <Fragment style=\"margin-bottom: 1000px !important\">\r\n                                    <InputLabel label={title} />\r\n                                    <DataTable\r\n                                        data={distModels} rows={10} search={true} selection={selectedRow} onSelectionChange={e => setSelectedRow(e)} selectionMode=\"single\"\r\n                                        scrollable={true} scrollHeight=\"600%\" reorderableColumns={true} resizableColumns={true}\r\n                                        onCellClick={(data) => { setModal(true); setId(data.rowIndex) }}\r\n                                    // onCellClick={(data) => { handleEdit(); setId(data.rowIndex) }}\r\n                                    >\r\n                                        <DataTable.HeaderBar>\r\n                                            <Item\r\n                                                content=\"Crear\"\r\n                                                icon={<Icon name=\"slidercontrols-plus\" size=\"small\" root=\"common\" />}\r\n                                                onClick={() => handleAdd()}\r\n                                            />\r\n                                            <Item\r\n                                                content=\"Eliminar\"\r\n                                                icon={<Icon name=\"delete\" size=\"small\" root=\"common\" />}\r\n                                                onClick={() => handleDelete()}\r\n                                            />\r\n                                            <Item\r\n                                                content=\"Entrenar\"\r\n                                                icon={<Icon name=\"badge-check\" size=\"small\" root=\"common\" />}\r\n                                                onClick={() => handleEntrenar()}\r\n                                            />\r\n                                        </DataTable.HeaderBar>\r\n                                        <DataTable.Column key={1} field=\"model\" header=\"Modelo\" sortable={true} editable={true} editFieldType=\"text\" />\r\n\r\n                                        <DataTable.Pagination />\r\n\r\n                                    </DataTable>\r\n                                    <br />\r\n\r\n\r\n                                    {/* <Checkbox label=\"Entrenar\" checked={Entrena} toggle={true} onChange={(checked) => postEntrena()} /><br />\r\n                                    <Checkbox label=\"Entrenar\" toggle={true} /><br />\r\n                                    <Checkbox label=\"Calcular\" toggle={true} /> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    <ReactToastify.ToastContainer\r\n                                        hideProgressBar={false}\r\n                                        closeOnClick={false}\r\n                                        closeButton={false}\r\n                                        newestOnTop={true}\r\n                                        position=\"top-center\"\r\n                                        autoClose={5000}\r\n                                        toastClassName=\"toast-notification-wrap\"\r\n                                    />\r\n\r\n                                </Fragment>\r\n\r\n                            : <Fragment>\r\n                                <InputLabel label={title} />\r\n                                <DataTable data={state.datos} >\r\n                                    <DataTable.HeaderBar>\r\n                                        <Item\r\n                                            content=\"Crear\"\r\n                                            icon={<Icon name=\"slidercontrols-plus\" size=\"small\" root=\"common\" />}\r\n                                            onClick={() => handleAdd()}\r\n                                        />\r\n                                        <Item\r\n                                            content=\"Eliminar\"\r\n                                            icon={<Icon name=\"delete\" size=\"small\" root=\"common\" />}\r\n                                        />\r\n\r\n                                    </DataTable.HeaderBar>\r\n                                    <DataTable.Column key={1} field=\"model\" header=\"Modelo\" />\r\n                                </DataTable>\r\n\r\n                            </Fragment>\r\n            }\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DatTabModel\r\n","import React from 'react'\nimport { Grid } from '@scuf/common'\n\n//import DatTabDS from '../../components/common/DatTab/DatTabDS'\nimport DatTabModels from '../../components/common/DatTab/DatTabModels'\n\n\n//import { isMobile } from \"react-device-detect\";\n//import { useDispatch } from 'react-redux'\n\nconst width = window.innerWidth;\n\n\n//let isMobile = (width <= 68);\n\n\nconst Models = () => {\n\n\n    return (\n        <>\n            <Grid >\n                <Grid.Row >\n                    <Grid.Column xsWidth='12' sWidth='12' mWidth='12' lWidth='12' xlWidth='12'>\n                        <div style={{ width: 0.8 * width, marginTop: '0px' }}>\n                            <DatTabModels\n                                url='models'\n                                body='?id=*'\n                                title='Modelos'\n                            />\n                        </div>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n\n        </>\n    )\n}\n\nexport default Models\n","import React from 'react'\nimport { Grid } from '@scuf/common'\n\n\nimport SubirArchivo from '../../components/fileupload/miFileUpload'\n\n\n\nconst width = window.innerWidth;\n\n\n//let isMobile = (width <= 68);\n\n\nconst Models = () => {\n\n\n    return (\n        <>\n            <SubirArchivo key={1} token={1} idGrupo={1} items={1} onDato={1} />\n\n        </>\n    )\n}\n\nexport default Models\n","import React, { useState, useEffect } from \"react\";\r\nimport { Loader, Select, InputLabel, Grid } from \"@scuf/common\";\r\nimport Plot from 'react-plotly.js';\r\nimport baseServices from '../../services/base.services';\r\nimport { GeneratedIdentifierFlags } from \"typescript\";\r\n\r\nconst stateOptions = [{ value: 'AL', text: 'Alabama' }, { value: 'GA', text: 'Georgia' }, { value: 'HI', text: 'Hawaii' }];\r\n\r\n\r\n\r\n// var datosPrueba =\r\n//     [\r\n//         {\r\n//             type: 'candlestick',\r\n//             decreasing: { line: { color: '#7F7F7F' } },\r\n//             increasing: { line: { color: '#17BECF' } },\r\n//             line: { color: 'rgba(31,119,180,1)' },\r\n\r\n//             \"x\": [\r\n//                 [\"Energia Promedio Molino SAG\", \"Energia Promedio Molino SAG\", \"Energia Promedio Molino SAG\", \"Energia Promedio Molino SAG\", \"Energia Promedio Molino SAG\", \"Energia Promedio Molino SAG\", \"Fino\", \"Fino\", \"Fino\", \"Fino\", \"Fino\", \"Fino\", \"P80 Promedio\", \"P80 Promedio\", \"P80 Promedio\", \"P80 Promedio\", \"P80 Promedio\", \"P80 Promedio\", \"Pebbles Chancados\", \"Pebbles Chancados\", \"Pebbles Chancados\", \"Pebbles Chancados\", \"Pebbles Chancados\", \"Pebbles Chancados\", \"Potencia Promedio Molino Bolas\", \"Potencia Promedio Molino Bolas\", \"Potencia Promedio Molino Bolas\", \"Potencia Promedio Molino Bolas\", \"Potencia Promedio Molino Bolas\", \"Potencia Promedio Molino Bolas\", \"Torque Espesador de Relave 1\", \"Torque Espesador de Relave 1\", \"Torque Espesador de Relave 1\", \"Torque Espesador de Relave 1\", \"Torque Espesador de Relave 1\", \"Torque Espesador de Relave 1\", \"Torque Molino SAG\", \"Torque Molino SAG\", \"Torque Molino SAG\", \"Torque Molino SAG\", \"Torque Molino SAG\", \"Torque Molino SAG\"],\r\n//                 [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\"]\r\n//             ],\r\n//             \"low\": [-1.77613037420865, -3.6231885769037633, -0.7285531721353709, -1.5234164717820984, 0, 0, -2.340943652924366, -10.200971665299672, -0.9045024469857821, -1.3893538693702494, 0, 0, -1.7445574394707735, -1.6406914963493442, -3.9779584327653428, -1.279883438504826, 0, 0, -4.267776741878903, -0.5972775311152563, -0.5976872774685824, -0.5977300063271686, -7.264210482072222e-17, -7.264210482072222e-17, 0.056549426612428566, -3.4715753600082686, -1.728475290502916, 0.2321284755596002, 0, 0, -2.165249784312847, -2.1856538515582096, -1.3061346578652364, -2.1854884165799855, -3.994123910587309e-16, -3.994123910587309e-16, -1.3208883606522737, -4.514074208634906, -0.9231500440708533, -1.324444666150678, -9.624518754149564e-16, -9.624518754149564e-16],\r\n//             \"open\": [-0.31181421164423895, -3.6231885769037633, 0.2764799526280897, -0.396783669412846, 0, 0, -0.7266312462027925, -4.51822589408461, 0.10058880372464256, -0.09489264634987639, 0, 0, -0.47957087543990656, -1.6406914963493442, -0.6951916398268877, -0.2853620591189372, 0, 0, -0.5953537800205497, -0.5963197776965782, -0.5963197776965782, -0.5963197776965782, -7.264210482072222e-17, -7.264210482072222e-17, 0.42806791593558813, -3.4715753600082686, -1.4926897373942671, 0.5032800987973167, 0, 0, -0.5762605421778828, -1.9714872557574534, 0.08313599443659772, -0.5757240846836877, -3.994123910587309e-16, -3.994123910587309e-16, -0.11329889132066619, -4.514074208634906, -0.30252110953891553, -0.19715879748231338, -9.624518754149564e-16, -9.624518754149564e-16],\r\n//             \"close\": [0.6643965633987019, -3.6231885769037633, 0.9465020358037299, 0.354304865499989, 0, 0, 0.34957702494492293, -0.7297287132745678, 0.7706496375315923, 0.7680815023303722, 0, 0, 0.3637535005806714, -1.6406914963493442, 1.4933195554654157, 0.3776521938049888, 0, 0, 1.8529281945516858, -0.5956812754174594, -0.5954081111819087, -0.5953796252761846, -7.264210482072222e-17, -7.264210482072222e-17, 0.6757469088176945, -3.4715753600082686, -1.335499368655168, 0.6840478476224611, 0, 0, 0.48306561924542646, -1.828709525223616, 1.0093164293044872, 0.49745213658051063, -3.994123910587309e-16, -3.994123910587309e-16, 0.6917607549004055, -4.514074208634906, 0.1112315134823763, 0.554365114963263, -9.624518754149564e-16, -9.624518754149564e-16],\r\n//             \"high\": [2.128712725963113, -3.6231885769037633, 1.9515351605671905, 1.4809376678692414, 0, 0, 1.9638894316664963, 4.953017057940495, 1.775740888242017, 2.0625427253507453, 0, 0, 1.6287400646115382, -1.6406914963493442, 4.7760863484038705, 1.372173573190878, 0, 0, 5.525351156410039, -0.5947235219987812, -0.5940406114099046, -0.5939693966455942, -7.264210482072222e-17, -7.264210482072222e-17, 1.047265398140854, -3.4715753600082686, -1.0997138155465191, 0.9551994708601776, 0, 0, 2.0720548613803906, -1.6145429294228602, 2.3985870816063213, 2.107216468476808, -3.994123910587309e-16, -3.994123910587309e-16, 1.8993502242320128, -4.514074208634906, 0.731860448014314, 1.6816509836316276, -9.624518754149564e-16, -9.624518754149564e-16]\r\n\r\n//         }\r\n//     ]\r\n\r\n\r\nvar layout = {\r\n    plot_bgcolor: '#202020',\r\n    paper_bgcolor: '#202020',\r\n    width: 400,\r\n    height: 400,\r\n    title: {\r\n        text: '',\r\n        font: {\r\n            //family: 'Courier New, monospace',\r\n            size: 20,\r\n            color: '#e0e0e0'\r\n        },\r\n        xref: 'paper',\r\n        x: 0.5,\r\n        y: 0.99\r\n    },\r\n    dragmode: 'zoom',\r\n    // margin: {\r\n    //     r: 10,\r\n    //     t: 25,\r\n    //     b: 40,\r\n    //     l: 60\r\n    // },\r\n    showlegend: false,\r\n    linewidth: 10,\r\n    xaxis: {\r\n        autorange: true,\r\n        showdividers: true,\r\n        dividercolor: '#e0e0e0',\r\n        dividerwidth: 1,\r\n        tickson: \"boundaries\",\r\n        ticklen: 15,\r\n        tickcolor: \"#505050\",\r\n        tickfont: {\r\n            size: 12,\r\n            color: '#e0e0e0'\r\n        },\r\n        type: 'multicategory',\r\n        rangeslider: {\r\n            visible: false\r\n        }\r\n    },\r\n    yaxis: {\r\n        autorange: true,\r\n        tickfont: {\r\n            size: 14,\r\n            color: '#e0e0e0'\r\n        },\r\n        type: 'linear'\r\n    }\r\n};\r\n\r\n\r\nconst url = 'modos';\r\nconst body = '?id=bplot';\r\nconst bodyModels = '?id=models'\r\n\r\nconst BPlot = () => {\r\n\r\n    const [state, setState] = useState({ hidden: \"hidden\", showplot: false })\r\n    const [models, setModels] = useState({ models: [] });\r\n\r\n\r\n    useEffect(() => {\r\n        const getModels = async () => {\r\n            try {\r\n                var response = await baseServices.getData(bodyModels, url);\r\n                if (response.data && response.data.length > 0) {\r\n                    setModels({ models: response.data, texto: \"-\" })\r\n                }\r\n\r\n            } catch (err) {\r\n                setTimeout(() => {\r\n                    getModels()\r\n                }, 15000);\r\n\r\n            }\r\n\r\n        }\r\n        getModels();\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    function getDatos(modelo) {\r\n        const getData = async () => {\r\n            setState({ dimensions: '', hidden: \"\", width: window.innerWidth })\r\n            const bodyplot = body + \";\" + modelo\r\n\r\n            try {\r\n                if (bodyplot) {\r\n                    var response = await baseServices.getData(bodyplot, url);\r\n                    if (response.data && response.data.length > 0) {\r\n                        setState({ API: response.data, hidden: \"hidden\", showplot: true })\r\n                        //setState({ API: [{ \"x1\": [\"Power\", \"Power\", \"Power\", \"Weight\", \"Weight\", \"Weight\"], \"x2\": [\"0\", \"1\", \"2\", \"0\", \"1\", \"2\"], \"low\": [719.28, 1085.7500000000005, 1236.7774999999997, 89.52394568124998, 73.86350343968746, 87.34242863156254], \"open\": [1140.75, 1124.6750000000002, 1316.2849999999999, 113.3343235, 80.43356151687499, 92.74907638687502], \"close\": [1421.73, 1150.625, 1369.29, 129.2079087125, 84.81360023500001, 96.35350822375], \"high\": [1843.2, 1189.5499999999997, 1448.7975000000001, 153.01828653125, 91.38365831218755, 101.76015597906246] }], hidden: \"hidden\", showplot: true })\r\n                        //console.log(response.data)\r\n\r\n                    }\r\n                } else {\r\n                }\r\n\r\n            } catch (err) {\r\n                setTimeout(() => {\r\n                    getData()\r\n                }, 15000);\r\n\r\n            }\r\n\r\n        }\r\n        return getData();\r\n        //return [{ \"x1\": [\"Power\", \"Power\", \"Power\", \"Weight\", \"Weight\", \"Weight\"], \"x2\": [\"0\", \"1\", \"2\", \"0\", \"1\", \"2\"], \"low\": [719.28, 1085.7500000000005, 1236.7774999999997, 89.52394568124998, 73.86350343968746, 87.34242863156254], \"open\": [1140.75, 1124.6750000000002, 1316.2849999999999, 113.3343235, 80.43356151687499, 92.74907638687502], \"close\": [1421.73, 1150.625, 1369.29, 129.2079087125, 84.81360023500001, 96.35350822375], \"high\": [1843.2, 1189.5499999999997, 1448.7975000000001, 153.01828653125, 91.38365831218755, 101.76015597906246] }];\r\n    }\r\n\r\n\r\n    /*\r\n    var datos = state.API &&\r\n        [\r\n            {\r\n                type: 'candlestick',\r\n                decreasing: { line: { color: '#7F7F7F' } },\r\n                increasing: { line: { color: '#17BECF' } },\r\n                line: { color: 'rgba(31,119,180,1)' },\r\n                x: [state.API[0].x1, state.API[0].x2],\r\n                low: state.API[0].low,\r\n                open: state.API[0].open,\r\n                close: state.API[0].close,\r\n                high: state.API[0].high\r\n            }\r\n        ];\r\n*/\r\n\r\n    var datos = state.API &&\r\n        [\r\n            {\r\n                type: 'candlestick',\r\n                decreasing: { line: { color: '#7F7F7F' } },\r\n                increasing: { line: { color: '#17BECF' } },\r\n                line: { color: 'rgba(31,119,180,1)' },\r\n                x: [state.API[0].x1, state.API[0].x2],\r\n                low: state.API[0].low,\r\n                open: state.API[0].open,\r\n                close: state.API[0].close,\r\n                high: state.API[0].high\r\n            }\r\n        ];\r\n\r\n\r\n\r\n    var datos_features = state.API && new Set(state.API[0].x1);\r\n\r\n    var total_clusters = state.API && Array.from(new Set(state.API[0].x2));\r\n\r\n    //console.log(datos);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={state.hidden}>\r\n                <Loader text=\"Abriendo...\" minHeight={400}>\r\n                </Loader>\r\n            </div>\r\n            {/* <InputLabel label={JSON.stringify(state.dimensions[0].array_to_json)} /> */}\r\n            <Select placeholder=\"Seleccione un Modelo\" options={models.models} onChange={(value) => getDatos(value)} />\r\n\r\n            <Grid.Row style={{ paddingTop: '50px' }}>\r\n\r\n                {state.showplot && Array.from(datos_features).map((x, i) =>\r\n\r\n                    <>\r\n                        <p hidden>{i *= (Math.max(...total_clusters) + 1)}</p>\r\n\r\n                        <Grid.Column width={5}>\r\n\r\n\r\n                            <Plot\r\n                                //data={datosPrueba}\r\n                                data={[\r\n                                    {\r\n                                        type: 'candlestick',\r\n                                        decreasing: { line: { color: '#7F7F7F' } },\r\n                                        increasing: { line: { color: '#17BECF' } },\r\n                                        line: { color: 'rgba(214,214,214)' },\r\n                                        x: [Array(Math.max(...total_clusters) + 1).fill('Clusters'), total_clusters],\r\n                                        low: state.API[0].low.slice(i, i + (Math.max(...total_clusters) + 1)),\r\n                                        open: state.API[0].open.slice(i, i + (Math.max(...total_clusters) + 1)),\r\n                                        close: state.API[0].close.slice(i, i + (Math.max(...total_clusters) + 1)),\r\n                                        high: state.API[0].high.slice(i, i + (Math.max(...total_clusters) + 1)),\r\n                                        text: state.API[0].percentage.slice(i, i + (Math.max(...total_clusters) + 1)),\r\n                                    }\r\n                                ]}\r\n                                layout={{\r\n                                    plot_bgcolor: '#202020',\r\n                                    paper_bgcolor: '#202020',\r\n                                    width: 500,\r\n                                    height: 400,\r\n                                    title: {\r\n                                        text: x,\r\n                                        font: {\r\n                                            //family: 'Courier New, monospace',\r\n                                            size: 20,\r\n                                            color: '#e0e0e0'\r\n                                        },\r\n                                        xref: 'paper',\r\n                                        x: 0.5,\r\n                                        y: 0.99\r\n                                    },\r\n                                    dragmode: 'zoom',\r\n                                    // margin: {\r\n                                    //     r: 10,\r\n                                    //     t: 25,\r\n                                    //     b: 40,\r\n                                    //     l: 60\r\n                                    // },\r\n                                    showlegend: false,\r\n                                    linewidth: 10,\r\n                                    xaxis: {\r\n                                        autorange: true,\r\n                                        gridcolor: '#464646',\r\n                                        showdividers: true,\r\n                                        dividercolor: '#e0e0e0',\r\n                                        dividerwidth: 1,\r\n                                        tickson: \"boundaries\",\r\n                                        ticklen: 15,\r\n                                        tickcolor: \"#505050\",\r\n                                        tickfont: {\r\n                                            size: 12,\r\n                                            color: '#e0e0e0'\r\n                                        },\r\n                                        type: 'multicategory',\r\n                                        rangeslider: {\r\n                                            visible: false\r\n                                        }\r\n                                    },\r\n                                    yaxis: {\r\n                                        autorange: true,\r\n                                        gridcolor: '#464646',\r\n                                        tickfont: {\r\n                                            size: 14,\r\n                                            color: '#e0e0e0'\r\n                                        },\r\n                                        type: 'linear'\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Grid.Column>\r\n\r\n                    </>\r\n                )\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n            </Grid.Row>\r\n\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default BPlot;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Loader, Select, InputLabel } from \"@scuf/common\";\r\nimport Plot from 'react-plotly.js';\r\nimport baseServices from '../../services/base.services';\r\nimport { getJSDocDeprecatedTag } from \"typescript\";\r\n\r\nconst stateOptions = [{ value: 'AL', text: 'Alabama' }, { value: 'GA', text: 'Georgia' }, { value: 'HI', text: 'Hawaii' }];\r\n\r\nconst url = 'modos';\r\nconst body = '?id=pplot';\r\nconst bodyModels = '?id=models'\r\n\r\n\r\nconst PPlot = () => {\r\n\r\n    const [state, setState] = useState({ dimensions: '', hidden: \"hidden\", showplot: false })\r\n    const [models, setModels] = useState({ models: [] });\r\n    const [seleccionado, setSeleccionado] = useState({ texto: \"-\" })\r\n\r\n    useEffect(() => {\r\n        const getModels = async () => {\r\n            try {\r\n                var response = await baseServices.getData(bodyModels, url);\r\n                if (response.data && response.data.length > 0) {\r\n                    setModels({ models: response.data, texto: \"-\" })\r\n                }\r\n\r\n            } catch (err) {\r\n                setTimeout(() => {\r\n                    getModels()\r\n                }, 15000);\r\n\r\n            }\r\n\r\n        }\r\n        getModels();\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    function getDatos(modelo) {\r\n        const getData = async () => {\r\n            setState({ dimensions: '', hidden: \"\", width: window.innerWidth })\r\n            const bodypplot = body + \";\" + modelo\r\n\r\n            try {\r\n                if (bodypplot) {\r\n                    var response = await baseServices.getData(bodypplot, url);\r\n                    if (response.data && response.data.length > 0) {\r\n                        setState({ dimensions: response.data, hidden: \"hidden\", width: window.innerWidth, showplot: true })\r\n                        setSeleccionado({ texto: bodypplot })\r\n                    }\r\n                } else {\r\n                }\r\n\r\n            } catch (err) {\r\n                setTimeout(() => {\r\n                    getData()\r\n                }, 15000);\r\n\r\n            }\r\n\r\n        }\r\n        return getData();\r\n    }\r\n\r\n\r\n\r\n    var datos = {\r\n        type: 'parcoords',\r\n        labelfont: { color: '#e0e0e0', size: 14 },\r\n        rangefont: { color: '#202020', size: 12 },\r\n        tickfont: { color: '#e0e0e0', size: 12 },\r\n        dimensions: state.dimensions && state.dimensions[0].array_to_json\r\n        // [\r\n        //     {\r\n        //         label: 'Tag 1',\r\n        //         values: [10, 40, 30]\r\n        //     }, {\r\n        //         label: 'Tag 2',\r\n        //         values: [3, 1.5, 4]\r\n        //     }, {\r\n        //         label: 'Tag 3',\r\n        //         values: [2, 4, 4]\r\n        //     }, {\r\n        //         label: 'Tag 4',\r\n        //         values: [4, 2, 3]\r\n        //     }\r\n        // ]\r\n    };\r\n\r\n    var layout = {\r\n\r\n        width: state.width * 0.85,\r\n        height: 700,\r\n        title: {\r\n            text: 'Parallel Plot',\r\n            font: {\r\n                //family: 'Courier New, monospace',\r\n                size: 20,\r\n                color: '#e0e0e0'\r\n            },\r\n            xref: 'paper',\r\n            x: 0.5,\r\n            y: 0.99\r\n        },\r\n        plot_bgcolor: '#202020',\r\n        paper_bgcolor: '#202020',\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={state.hidden}>\r\n                <Loader text=\"Abriendo...\" minHeight={400}>\r\n                </Loader>\r\n            </div>\r\n            {/* <InputLabel label={JSON.stringify(seleccionado.texto)} /> */}\r\n\r\n            <Select placeholder=\"Seleccione un Modelo\" options={models.models} onChange={(value) => getDatos(value)} />\r\n            {state.showplot &&\r\n                <Plot\r\n                    data={[datos]}\r\n                    layout={layout}\r\n                />\r\n            }\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default PPlot;\r\n","const HChartDataAPI = (response) => {\r\n\r\n    const DatosJson = response.data\r\n    const datosLine = []\r\n    const datosBand = []\r\n    const uniqueSeries = []\r\n\r\n    //Obtendo los array con las series. Solo 1 registro por serie y por (uniqueSeries)\r\n    const PrimerItem = DatosJson[0].data\r\n    Object.keys(PrimerItem).map((key, i) => (\r\n        uniqueSeries.push(key)\r\n    ))\r\n    //console.log(uniqueSeries)\r\n\r\n    // recorro el array con las distintas series y luego recorro los datos del API para crear el array datosSeries\r\n    uniqueSeries.map((f, j) => {\r\n        const datosSerie = []\r\n        const datosBanda = []\r\n        var Banda_Actual\r\n        var Banda_Siguiente\r\n        var Banda_From = DatosJson[0].x\r\n\r\n        for (let index = 0; index < DatosJson.length; index++) {\r\n            const element = DatosJson[index];\r\n            datosSerie.push([parseFloat(element.x), element.data[f]]);\r\n\r\n            Banda_Actual = element.cluster\r\n            Banda_Siguiente = index + 1 < DatosJson.length ? DatosJson[index + 1].cluster : DatosJson[index].cluster\r\n\r\n            if (index == DatosJson.length - 1)\r\n                Banda_Siguiente = \"-2\"\r\n\r\n\r\n            if (Banda_Actual == Banda_Siguiente) {\r\n                if (Banda_From == element.x)\r\n                    Banda_From = parseFloat(element.x)\r\n            }\r\n            else {\r\n                datosBanda.push({ from: Banda_From, to: parseFloat(element.x), color: element.color, DT: element.date })\r\n                Banda_From = element.x\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        datosLine.push(\r\n            {\r\n                name: uniqueSeries[j],\r\n                data: datosSerie\r\n            }\r\n        )\r\n\r\n        datosBand.push(datosBanda)\r\n\r\n\r\n    }\r\n    )\r\n\r\n    return { Lineas: datosLine, Bandas: datosBand[0] }\r\n}\r\n\r\nexport default HChartDataAPI\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Badge, Loader, Grid } from '@scuf/common'\r\nimport Highcharts from 'highcharts/highstock'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport HChartDataAPI from './HChartDataAPI'\r\nimport './hchart.css'\r\n//import './custom.css'\r\nimport baseServices from '../../../services/base.services';\r\n\r\nrequire('highcharts/modules/exporting')(Highcharts)\r\nrequire('highcharts/modules/export-data')(Highcharts)\r\n\r\n\r\nconst Midata = [\r\n    { \"name\": \"1\", data: [[1641899579000, 0.55], [1641899639000, 5], [1641899699000, 0.55], [1641899759000, 0.55]] },\r\n    { \"name\": \"2\", data: [[1641899579000, 1.55], [1641899639000, 1], [1641899699000, 1.55], [1641899759000, 1.55]] },\r\n    { \"name\": \"3\", data: [[1641899579000, 1], [1641899639000, 2], [1641899699000, 3], [1641899759000, 4]] },\r\n    { \"name\": \"4\", data: [[1641899579000, 0], [1641899639000, 0], [1641899699000, 0], [1641899759000, 2]] }\r\n]\r\n\r\n\r\n\r\nconst HChart = ({ url, body, heigth, title, subtitle }) => {\r\n\r\n    const [state, setState] = useState({ line: [], response: [], hidden: \"nohidden\" })\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getData = async () => {\r\n\r\n            try {\r\n                if (body) {\r\n                    var response = await baseServices.getData(body, url);\r\n                    if (response.data && response.data.length > 0) {\r\n                        //dispatch(startLineChart(response.data[0]))                    \r\n                        setState({ line: HChartDataAPI(response), response: response.data, hidden: \"hidden\" })\r\n                        setTimeout(() => {\r\n                            getData()\r\n                        }, 150000);\r\n\r\n                    }\r\n                } else {\r\n                }\r\n\r\n            } catch (err) {\r\n                setTimeout(() => {\r\n                    getData()\r\n                }, 15000);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        getData()\r\n\r\n    }, [body, state.hidden])\r\n\r\n    const options = {\r\n\r\n        chart: {\r\n            type: 'line', //'area',\r\n            height: heigth,\r\n            zoomType: \"xy\"\r\n        },\r\n\r\n        boost: {\r\n            useGPUTranslations: true,\r\n            // Chart-level boost when there are more than 5 series in the chart\r\n            seriesThreshold: 5\r\n        },\r\n\r\n        lang: {\r\n            decimalPount: \".\"\r\n        },\r\n        title: {\r\n            text: title\r\n        },\r\n        subtitle: {\r\n            text: subtitle\r\n        },\r\n        tooltip: {\r\n            backgroundColor: '#000000',\r\n            style: {\r\n                color: 'white'\r\n            }\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        exporting: {\r\n            enabled: true\r\n        },\r\n        legend: {\r\n            enabled: true\r\n        },\r\n        yAxis: {\r\n            gridLineWidth: 0.05\r\n        },\r\n        xAxis: {\r\n            // plotBands: [{\r\n            //     color: \"#91e8e1\", \r\n            //     from: 1639526400000,\r\n            //     to: 1639569600000 \r\n            // }]\r\n            plotBands: state.line.Bandas\r\n        },\r\n        colors: [\"#7cb5ec\", \"#90ed7d\", \"#f7a35c\", \"#8085e9\", \"#f15c80\", \"#e4d354\", \"#2b908f\", \"#f45b5b\", \"#91e8e1\", \"#fbe5ba\"],\r\n        //colors: [state.line.data[0].color],\r\n        //series: state.line.data//[{ name: state.line.data[0].serie, data: state.line.data }]\r\n        series: state.line.Lineas//Midata\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* {JSON.stringify(state.line.Bandas)} <br /><br /> */}\r\n\r\n            <div className={state.hidden}>\r\n                <Loader text=\"Abriendo...\" minHeight={400}>\r\n                </Loader>\r\n            </div>\r\n\r\n            <div className='hcharts'>\r\n                <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    constructorType={'stockChart'}\r\n                    options={options}\r\n                />\r\n            </div>\r\n            {\r\n                //const colors = ['#8c8988','#4d6fab', '#dc824f', '#55a665', '#c34c50', '#816fae', '#93765d', '#65b1c7']\r\n                state.response ?\r\n                    <Grid.Row>\r\n                        <Grid.Row>\r\n                            <br />Cluster:<br />\r\n                        </Grid.Row>\r\n                        <Grid.Column width={6}>\r\n                            {JSON.stringify(state.response).includes('\"cluster\":0') && <div class='box clust0'>0</div>}\r\n                            {JSON.stringify(state.response).includes('\"cluster\":1') && <div class='box clust1'>1</div>}\r\n                            {JSON.stringify(state.response).includes('\"cluster\":2') && <div class='box clust2'>2</div>}\r\n                            {JSON.stringify(state.response).includes('\"cluster\":3') && <div class='box clust3'>3</div>}\r\n                            {JSON.stringify(state.response).includes('\"cluster\":4') && <div class='box clust4'>4</div>}\r\n                            {JSON.stringify(state.response).includes('\"cluster\":5') && <div class='box clust5'>5</div>}\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                    : <React.Fragment />\r\n            }\r\n        </React.Fragment>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default HChart;","import React, { useState, useEffect } from \"react\";\nimport baseServices from '../../services/base.services';\nimport { Grid, Select } from '@scuf/common'\nimport Line2 from '../../components/charts/Line/Line2'\nimport HChart from '../../components/charts/HighCharts/HChart'\nimport { Fragment } from \"react\";\n//import DatTab from '../../components/common/DatTab/DatTab'\n//import KPIStat from '../../components/common/KPIStat/KPIStat'\n//import TitlePage from '../../components/TitlePage/TitlePage'\n\n\nconst url = 'modos';\nconst body0 = '?id=moperacion';\nconst bodyModels = '?id=models'\n\nconst Procesos = () => {\n\n    const [models, setModels] = useState({ models: [] });\n    const [state, setState] = useState({ body: \"\" });\n\n    useEffect(() => {\n        const getModels = async () => {\n            try {\n                var response = await baseServices.getData(bodyModels, url);\n                if (response.data && response.data.length > 0) {\n                    setModels({ models: response.data, texto: \"-\" })\n                }\n\n            } catch (err) {\n                setTimeout(() => {\n                    getModels()\n                }, 15000);\n            }\n\n        }\n        getModels();\n\n    }, []);\n\n\n    function getDatos(modelo) {\n        const bodymop = body0 + \";\" + modelo\n        setState({ body: bodymop })\n        return bodymop;\n    }\n\n    return (\n        <React.Fragment>\n            <Select placeholder=\"Seleccione un Modelo\" options={models.models} onChange={(value) => getDatos(value)} />\n            {\n                state.body ?\n                    <Grid className='m-0 p-0' >\n                        <Grid.Row>\n\n                        </Grid.Row>\n\n                        <Grid.Row >\n                            <Grid.Column xsWidth='12' sWidth='12' mWidth='12' lWidth='12' xlWidth='12'>\n                                <div style={{ padding: '0px' }}>\n                                    {/* <Line2\n                                        url={url}\n                                        body={body.body}\n                                        yAxisTitle=''\n                                        titleCard='Modos de Operacion'\n                                    /> */}\n\n                                    <HChart\n                                        url={url}\n                                        body={state.body}\n                                        heigth={600}\n                                        title=''\n                                        subtitle=''\n                                    />\n\n                                    {/* <DatTab\n                                url='modos'\n                                body='?id=*'\n                                title='Modelos'\n                            /> */}\n\n                                </div>\n\n                            </Grid.Column>\n\n                        </Grid.Row>\n\n                    </Grid>\n                    :\n                    <></>\n            }\n\n\n        </React.Fragment>\n    )\n}\n\nexport default Procesos\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\n\nimport '@scuf/common/honeywell-compact-combined/theme.css'\nimport '@scuf/charts/honeywell-compact-combined/theme.css'\n//import \"@scuf/datatable/honeywell-compact-combined/theme.css\";\n\nimport Layout from './pages/Layout/Layout'\nimport Login from './pages/Login/Login'\n//import Analitica from './pages/Analitica/Analitica';\nimport DataSources from './pages/DataSources/DataSources';\nimport Models from './pages/Models/Models'\nimport Subir from './pages/SubirCSV/csv'\nimport BoxPlot from './pages/Plots/BoxPlot'\nimport ParallelPlot from './pages/Plots/ParallelPlot'\nimport Process from './pages/Process/Process'\n\nconst RouteConfig = () => {\n\n  const PrivateRoute = ({ children, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          true ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Layout route='DataSources' component={<DataSources></DataSources>} />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <PrivateRoute path=\"/Models\">\n            <Layout route='Models' component={<Models></Models>} />\n          </PrivateRoute>\n          <PrivateRoute path=\"/DataSources\">\n            <Layout route='DataSources' component={<DataSources></DataSources>} />\n          </PrivateRoute>\n          <PrivateRoute path=\"/Modos de Operacion\">\n            <Layout route='Modos de Operacion' component={<Process></Process>} />\n          </PrivateRoute>\n          <PrivateRoute path=\"/csv\">\n            <Layout route='Subir csv' component={<Subir></Subir>} />\n          </PrivateRoute>\n          <PrivateRoute path=\"/BPlot\">\n            <Layout route='Box Plot' component={<BoxPlot></BoxPlot>} />\n          </PrivateRoute>\n          <PrivateRoute path=\"/PPlot\">\n            <Layout route='Parallel Plot' component={<ParallelPlot></ParallelPlot>} />\n          </PrivateRoute>\n        </Switch>\n      </Router>\n    </Provider>\n\n  )\n}\n\nexport default RouteConfig\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RouteConfig from './RouteConfig';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n    <RouteConfig />,\n  document.getElementById('root')\n);\n\n\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 491;"],"sourceRoot":""}