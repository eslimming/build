{"version":3,"sources":["types/types.js","store/store.js","reducers/AuthReducer.js","actions/authLogin.js","pages/Layout/Layout.js","services/auth.services.js","pages/Login/Login.js","actions/msgError.js","components/common/DatTab/DatTabDataAPI.js","services/auth-header.js","services/base.services.js","components/formDS/miRadioGroup.js","components/formDS/miTextArea.js","components/formDS/miInputNumber.js","components/formDS/miInputText.js","components/formDS/miInputTextPassword.js","components/formDS/miInputTag.js","components/formDS/miInputTextDataRange.js","components/formDS/miInputTagMF.js","components/formDS/miSelector.js","components/formDS/miSelector_run_serve_criteria.js","components/formDS/miGauge.js","components/formDS/miDatePicker.js","components/fileupload/miFileUpload.js","components/formDS/Grupos.js","components/formDS/Formulario.js","components/common/DatTab/DatTabDS.js","pages/DataSources/DataSources.js","components/form/miRadioGroup.js","components/form/miTextArea.js","components/form/miInputNumber.js","components/form/miInputText.js","components/form/miInputTextMCS.js","components/form/miInputTextDataRange.js","components/form/miInputTag.js","components/form/miInputTagMF.js","components/form/miSelector.js","components/form/miSelector_run_serve_criteria.js","components/form/miGauge.js","components/form/miDatePicker.js","components/form/Grupos.js","components/form/Formulario.js","components/common/DatTab/DatTabModels.js","pages/Models/Models.js","pages/SubirCSV/csv.js","pages/Plots/BoxPlot.js","pages/Plots/ParallelPlot.js","components/charts/Line/LineData2.js","components/charts/Line/LineDataAPI2.js","components/charts/Line/Line2.js","pages/Process/Process.js","RouteConfig.js","index.js","../node_modules/typescript/lib sync"],"names":["types","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","login","state","action","type","data","token","store","createStore","applyMiddleware","thunk","payload","Layout","props","dispatch","useDispatch","stateRedux","useSelector","useState","user","JSON","parse","localStorage","getItem","sidebarCollapsed","logoCompany","isDark","setState","setItem","useEffect","Object","keys","length","toggleTheme","ThemeType","Dark","iconText","text","icon","style","textAlign","marginBottom","className","menu","logo","logoUrl","isForge","title","onMenuToggle","noIcons","collapsed","Sidebar","to","Item","onClick","titulo","content","root","name","Content","width","component","href","API_URL","exportedObject","register","username","email","password","axios","post","Usuario","Password","then","response","stringify","catch","error","console","log","logout","removeItem","getCurrentUser","changePassword","idUser","oldPass","newPass","ReactToastify","require","Login","setUser","pass","setPass","load","setLoad","history","useHistory","getData","e","a","preventDefault","servicesAuth","msg","push","display","flexDirection","placeholder","label","value","onChange","fluid","size","marginTop","disabled","actionType","loading","copyrightText","src","alt","marginRight","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","position","toastClassName","DataTabDataAPI","fields","index","field","datos","authHeader","Authorization","body","url","get","headers","timeout","delData","delete","postData","postFileUpload","RadioGroup","handleOnChange","dato","val","onDato","textInput","focus","setTextInputRef","element","focusTextInput","b","nvalue","this","items","map","item","idGrupo","Fragment","ref","color","empty","checked","handleChecked","key","id","React","Component","TextoArea","fileError","acceptedFiles","rejectedFiles","InputNumber","isNaN","onRemoveDato","min","rows","handleOnChangeTag","vTag","tag","desc","vDesc","ds","vDS","handleOnChangeDesc","handleOnChangeDS","baseServices","datasources","options","Gauge","showTooltips","Pane","y","useDial","dial","backgroundColor","CenterBlock","fontSize","YAxis","variant","PlotBand","from","max","DTPicker","document","activeElement","blur","languageCode","helperText","closeOnDocumentClick","reserveSpace","displayFormat","readOnly","showYearSelector","FileUpload","setResponseAPI","loader","setLoader","setBodyDS","minHeight","buttonText","resetButtonText","acceptedTypes","maxSize","onAccepted","files","onRejected","onReset","file","formData","FormData","append","filename","idPregunta","Respuesta","bodypost","responseDS","location","reload","ex","Dibuja","dibujar","Row","Cell","General","handleDato","onhandleGeneralDato","handleRemoveDato","onhandleGeneralRemoveDato","activeName","tagItem","newTags","Pagina","Header","HeaderCell","Body","Footer","align","config","ToastNotification","closeToast","Texto","Detalle","severity","onCloseClick","hasIcon","detailsText","replaceAll","onDetailsClick","App","respuestas","handleGeneralRemoveDato","nitems","filter","c","nitems2","nitem","concat","split","keyPageFile","ndatos","parseInt","ndatos2","ndato","ndatos3","Preguntas_Respondidas","ndatos4","handleGeneralDato","indexOf","handleNewTag","hojas","slice","newTagsArray","hojaTags","isLoading","hidden","activePage","apiBody","modal","modalFin","Preguntas_Todas","Preguntas_Faltantes","Situacion_Final","Color_Situacion_Final","MensajeAPI","click_Next","bind","click_Prev","click_Send","click_ModalSi","click_ModalNo","Pregunta","includes","mensaje","page","Number","pageSize","toast","replace","scrollTo","renderModal","renderModalFin","colspan","click_ModalFin","iconPosition","autoClose","height","top","left","marginLeft","closeIcon","onClose","open","closeOnDimmerClick","DatTab","setModal","add","setAdd","addCsv","setAddCsv","setId","selectedRow","setSelectedRow","setIsLoading","bodydel","handleAdd","Tipo","Severity","DataTable","HeaderBar","conn_id","search","scrollable","scrollHeight","reorderableColumns","resizableColumns","i","Column","header","sortable","editable","editFieldType","Pagination","selection","onSelectionChange","selectionMode","onCellClick","rowIndex","innerWidth","DataSources","xsWidth","sWidth","mWidth","lWidth","xlWidth","DatTabDS","on","target","lastchr","valor","unidad","DatTabModel","modalEdit","setModalEdit","selectedRecord","setSelectedRecord","updatedValue","setUpdatedValue","distModels","setDistModels","isEntrenando","setIsEntrenando","avance","setAvance","result","Map","has","model","set","postEntrena","getScriptInit","progress","setTimeout","postUpdateModelo","id_conf","Model","percent","circular","x","onRowClick","visible","attribute","Models","DatTabModels","BPlot","showplot","models","setModels","getModels","texto","API","x1","x2","low","close","high","datos_features","Set","total_clusters","Array","modelo","dimensions","bodyplot","getDatos","paddingTop","Math","decreasing","line","increasing","fill","layout","plot_bgcolor","paper_bgcolor","font","xref","dragmode","showlegend","linewidth","xaxis","autorange","gridcolor","showdividers","dividercolor","dividerwidth","tickson","ticklen","tickcolor","tickfont","rangeslider","yaxis","PPlot","setSeleccionado","labelfont","rangefont","array_to_json","bodypplot","LineData","DatosJson","datosLine","uniqueSeries","PrimerItem","f","j","datosSerie","parseFloat","LineDataAPI","Line","yAxisTitle","titleCard","randomSeries","date","Date","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","colors","LineDataAPI2","LineData2","showRangeSelector","showScrollbar","showNavigator","zoom","spline","Legend","enabled","itemSpacing","itemStyle","XAxis","cluster","hasta","tickAmount","showGridLines","offset","labels","format","class","Procesos","setBody","bodymop","body0","padding","Line2","RouteConfig","PrivateRoute","children","rest","render","path","exact","route","Process","BoxPlot","ParallelPlot","ReactDOM","getElementById","webpackEmptyContext","req","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.92248715.chunk.js","sourcesContent":["export const types = {\n    \n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    msgSetError: '[Msg] Set Errot',\n    msgRemoveError: '[Msg] Set Error',\n\n    dataLineChart: '[DataLineChart]',  \n    \n    dataDonutChart: '[DataDonutChart]'\n}","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\nimport { authReducer } from '../reducers/AuthReducer'\n// import { msgReducer } from '../reducers/MsgReducer'\n// import { lineChartReducer } from '../reducers/LineChartReducer'\n// import { donutChartReducer } from '../reducers/DonutChartReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    login: authReducer,\n    //msgError: msgReducer,\n    //lineChartReducer: lineChartReducer,\n    //donutChartReducer: donutChartReducer\n})\n\nexport const store = createStore(\n    reducers,\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() \n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","import { types } from '../types/types';\n\nexport const authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.login:\n            return {\n                data: 'action.payload.data.data',\n                token: 'action.payload.data.token'\n            }\n        case types.logout:\n            return {}\n\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nexport const login = (data,token) => ({\n    type: types.login,\n    payload:{\n        data,\n        token\n    }\n}) ","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { SidebarLayout, Footer, Header, Icon, toggleTheme, ThemeType } from '@scuf/common'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../../actions/authLogin'\r\n\r\n\r\nimport './Layout.css'\r\n//import '@scuf/common/honeywell-compact-dark/theme.css'\r\n//import \"@scuf/common/honeywell-dark/theme.css\";\r\n//import KPI from '../KPI/KPI'\r\n//import \"@scuf/datatable/honeywell-combined/theme.css\";\r\n\r\nconst Layout = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const stateRedux = useSelector(state => state)\r\n    const [state, setState] = useState({\r\n        user: JSON.parse(localStorage.getItem('user')),\r\n        sidebarCollapsed: true,\r\n        logoCompany: '../../assets/Codelco_logo.png',\r\n        isDark: true\r\n    })\r\n\r\n    localStorage.setItem('tituloHeader', \"SMART MODELER\");\r\n\r\n\r\n    // // inicial state redux\r\n    useEffect(() => {\r\n        if (Object.keys(stateRedux.login).length === 0) {\r\n            dispatch(login(JSON.parse(localStorage.getItem('user'))))\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, stateRedux.login])\r\n\r\n    useEffect(() => {\r\n        toggleTheme(ThemeType.Dark);\r\n        // toggleTheme(ThemeType.Light);\r\n    }, []\r\n    )\r\n\r\n    // const onCollapsedClick = () => {\r\n    //     setState({ ...state, sidebarCollapsed: !state.sidebarCollapsed })\r\n    // }\r\n\r\n    // const onSettingsCollapsedClick = () => {\r\n    //     setState({ ...state, settingsCollapsed: !state.settingsCollapsed })\r\n    // }\r\n\r\n\r\n    // const changeLogo = (dark) => {\r\n    //     if(dark){\r\n    //       toggleTheme(ThemeType.Dark);\r\n    //       setState({\r\n    //         ...state,\r\n    //         logoCompany: '../../assets/hydro-white.jpg',\r\n    //         isDark: dark\r\n    //       })\r\n    //     }else{\r\n    //       if(dark){\r\n    //         toggleTheme(ThemeType.Light);\r\n    //         setState({\r\n    //             ...state,\r\n    //             logoCompany: '../../assets/hydro-black.jpg',\r\n    //             isDark: dark\r\n    //         })\r\n    //       }\r\n    //     }\r\n    // }\r\n\r\n    // const tituloHeader = (titulo) => {\r\n    //     localStorage.setItem('tituloHeader', titulo);\r\n    //     return titulo\r\n    // }\r\n\r\n    // const changeLogoDark = () => {\r\n\r\n    //     if (state.isDark) {\r\n    //         toggleTheme(ThemeType.Dark);\r\n    //         setState({\r\n    //             ...state,\r\n    //             logoCompany: '../../assets/Codelco_logo.png',\r\n    //             isDark: false\r\n    //         })\r\n    //     } else {\r\n    //         toggleTheme(ThemeType.Light);\r\n    //         setState({\r\n    //             ...state,\r\n    //             logoCompany: '../../assets/Codelco_logo.png',\r\n    //             isDark: true\r\n    //         })\r\n    //     }\r\n\r\n    //     localStorage.setItem('isDark', state.isDark)\r\n    // }\r\n\r\n    // const validate = () => {\r\n    //     // const emailValidationRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    //     return {\r\n    //       // email: emailValidationRegex.test(this.state.email.trim()) ? null : 'Invalid Email',\r\n    //       name: this.state.name.trim() ? null : 'Required',\r\n    //       message: this.state.message.trim() ? null : 'Required'\r\n    //     }\r\n    // }\r\n\r\n    // const listTop = () => {\r\n    //     var list = [];\r\n    //     return list;\r\n    // }\r\n\r\n    // const ItemMenuHorizontalAPC = (title) => {\r\n    //     return <div className='item-menu'>\r\n    //         <span style={{ marginLeft: '-6px', fontWeight: '700' }}>APC</span>\r\n    //         <div style={{ textAlign: 'center' }}>{title}</div>\r\n    //     </div>\r\n    // }\r\n\r\n    // const ItemMenuHorizontal = (title, icon) => {\r\n    //     return <div className='item-menu'>\r\n    //         <Icon root='common' name={icon} exactSize={22}></Icon>\r\n    //         <div style={{ textAlign: 'center' }}>{title}</div>\r\n    //     </div>\r\n    // }\r\n\r\n    const iconText = ({ text, icon }) => {\r\n        return <div style={{ textAlign: 'center', marginBottom: '10px' }}>\r\n            {icon}\r\n            <div className='label-menu'>{text}</div>\r\n        </div>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header menu={false} logo={true} logoUrl='./honeywell-logo.svg' isForge={false} title={localStorage.getItem('tituloHeader')} onMenuToggle={() => setState({ ...state, sidebarCollapsed: !state.sidebarCollapsed })} >\r\n            </Header>\r\n\r\n\r\n            <SidebarLayout noIcons={true} collapsed={false} className=\"example-sidebar\">\r\n                <SidebarLayout.Sidebar>\r\n\r\n                    <Link to=\"/DataSources\">\r\n                        <SidebarLayout.Sidebar.Item onClick={() => setState({ ...state, titulo: \"DataSources\" })}\r\n                            content=\"DataSources\"\r\n                            icon={\r\n                                iconText({\r\n                                    //text: 'Models',\r\n                                    icon: <Icon root='common' name='CMX'></Icon>\r\n                                })}\r\n                        />\r\n                    </Link>\r\n\r\n                    <Link to=\"/Models\">\r\n                        <SidebarLayout.Sidebar.Item onClick={() => setState({ ...state, titulo: \"Models\" })}\r\n                            content=\"Models\"\r\n                            icon={\r\n                                iconText({\r\n                                    //text: 'DataSources',\r\n                                    icon: <Icon root='common' name='CMX'></Icon>\r\n                                })}\r\n                        />\r\n                    </Link>\r\n\r\n\r\n                    <Link to=\"/BPlot\">\r\n                        <SidebarLayout.Sidebar.Item onClick={() => setState({ ...state, titulo: \"Box Plot\" })}\r\n                            content=\"Box Plot\"\r\n                            icon={\r\n                                iconText({\r\n                                    //text: 'DataSources',\r\n                                    icon: <Icon root='common' name='increasing'></Icon>\r\n                                })}\r\n                        />\r\n                    </Link>\r\n\r\n                    <Link to=\"/PPlot\">\r\n                        <SidebarLayout.Sidebar.Item onClick={() => setState({ ...state, titulo: \"Parallel Plot\" })}\r\n                            content=\"Parallel Plot\"\r\n                            icon={\r\n                                iconText({\r\n                                    //text: 'DataSources',\r\n                                    icon: <Icon root='common' name='increasing'></Icon>\r\n                                })}\r\n                        />\r\n                    </Link>\r\n\r\n                    <Link to=\"/Modos de Operacion\">\r\n                        <SidebarLayout.Sidebar.Item onClick={() => setState({ ...state, titulo: \"Modos de Operacion\" })}\r\n                            content=\"Modos de Operacion\"\r\n                            icon={\r\n                                iconText({\r\n                                    //text: 'DataSources',\r\n                                    icon: <Icon root='common' name='increasing'></Icon>\r\n                                })}\r\n                        />\r\n                    </Link>\r\n\r\n\r\n                </SidebarLayout.Sidebar>\r\n                <SidebarLayout.Content>\r\n                    <div style={{ width: '100%', marginBottom: '0px' }} className='m-0 p-0'>\r\n                        {props.component}\r\n                    </div>\r\n                </SidebarLayout.Content>\r\n            </SidebarLayout>\r\n\r\n            <Footer className='footer'>\r\n                <Footer.Item href=\"#\">Terms & Conditions</Footer.Item>\r\n                <Footer.Item href=\"#\">Privacy Policy</Footer.Item>\r\n            </Footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout","import axios from \"axios\";\n//const API_URL = 'https://apialunorte.kairosmining.com/auth/'\nconst API_URL = 'https://apikairos.kairosmining.com/auth/'\n// const API_URL = 'http://localhost:5000/auth/';\n\nconst register = (username, email, password) => {\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password,\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"login\", { Usuario: username, Password: password })\n    .then((response) => {\n      if (response.data) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      return response;\n    }).catch((error) => {\n      console.log(error.response.data);\n      return error.response.data;\n    });\n};\n\nconst changePassword = (idUser, oldPass, newPass) => {\n  return axios\n    .post(API_URL + \"changePassword\", {\n      idUser: idUser,\n      oldPass: oldPass,\n      newPass: newPass,\n    })\n    .then((response) => {\n      // console.log(response);\n      if (response.data) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      return response;\n    }).catch((error) => {\n      // console.log(error.response.data);\n      return error.response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst exportedObject = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  changePassword\n}\n\nexport default exportedObject","import React, { useState } from 'react'\nimport { Card, Button, Input, Header, Footer, toggleTheme, ThemeType } from '@scuf/common' //, ToastNotification\nimport { useHistory } from \"react-router-dom\"\nimport { useDispatch } from 'react-redux'\n\nimport { login } from '../../actions/authLogin'\nimport { msgError, removeError } from '../../actions/msgError'\nimport servicesAuth from '../../services/auth.services'\n\n//import '@scuf/common/honeywell-compact-combined/theme.css'\n//import '@scuf/common/honeywell-compact-dark/theme.css'\n//import \"@scuf/common/honeywell-dark/theme.css\";\n//import \"@scuf/common/honeywell-dark/theme.css\";\n\n\nimport './Login.css'\n\nconst ReactToastify = require('react-toastify')\n\nconst Login = () => {\n\n    const dispatch = useDispatch();\n\n    var logo = 'https://www.honeywell.com/content/dam/honeywell/en-us/images/HON%20logo_200x37.png';\n    localStorage.setItem('tituloHeader', \"SMART MODELER\");\n\n    const [user, setUser] = useState('')\n    const [pass, setPass] = useState('')\n    const [load, setLoad] = useState(false);\n\n    let history = useHistory();\n    toggleTheme(ThemeType.Dark);\n\n    //history.push('/DataSources');\n\n    const getData = async (e) => {\n\n        e.preventDefault()\n        setLoad(true);\n        await servicesAuth.login(user, pass).then(\n            (response) => {\n                setLoad(false);\n                if (response.error) {\n                    dispatch(msgError(response.error))\n                    // messageToast(response.error);\n                    return;\n                }\n                dispatch(login(response.data))\n                setLoad(false)\n                dispatch(removeError())\n                history.push('/Analitica')\n            },\n            (error) => {\n                console.log(error);\n                setLoad(false);\n            });\n    };\n\n    // const messageToast = (title) => {\n    //     ReactToastify.toast(<ToastNotification  closeToast={false} title={title}/>)\n    // }\n\n\n    return (\n        <>\n            <div className=\"login-page\" />\n            <div className='mx-auto'>\n                <Card>\n                    <Header isForge={true} title=\"WALL DISPLAY\" menu={false} >\n                    </Header>\n                    <Card.Content>\n                        <h3 className='mb-3 text-center'>Log In</h3 >\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <Input\n                                className=\"input-custom\"\n                                placeholder=\"Enter in this field\"\n                                label=\"Username\"\n                                value={user}\n                                onChange={e => setUser(e)}\n                                type=\"text\"\n                                fluid={true}\n                            />\n                            <Input\n                                className=\"input-custom\"\n                                placeholder=\"Enter in this field\"\n                                label=\"Password\"\n                                value={pass}\n                                onChange={e => setPass(e)}\n                                type=\"password\"\n                                fluid={true}\n                            />\n                            <br></br>\n                            <Button type=\"primary\"\n                                size=\"small\"\n                                style={{ marginTop: '10px' }}\n                                disabled={load}\n                                onClick={getData}\n                                content=\"Log In\"\n                                actionType=\"submit\"\n                                loading={load}\n                            />\n                        </div>\n                    </Card.Content>\n                    <Footer copyrightText=\"Powered by Kairos Mining\" style={{ display: 'none' }}>\n                        <Footer.Item href=\"#\" >\n                            <img\n                                src={logo}\n                                alt=\"Logo\"\n                                style={{ width: '80px', marginRight: '120px' }}\n                            />\n                        </Footer.Item>\n                    </Footer>\n                </Card>\n            </div>\n\n            <ReactToastify.ToastContainer\n                hideProgressBar={true}\n                closeOnClick={false}\n                closeButton={false}\n                newestOnTop={true}\n                position=\"bottom-right\"\n                toastClassName=\"toast-notification-wrap\"\n            />\n\n        </>\n    )\n}\n\nexport default Login\n","import { types } from \"../types/types\";\n\nexport const msgError = (msg) => ({\n    type: types.msgSetError,\n    payload:{\n        msg\n    }\n}) \n\nexport const removeError = () => ({\n    type: types.msgRemoveError\n}) ","\nconst DataTabDataAPI = (response) => {\n\n    var keys = Object.keys(response.data[0]);\n    var fields = [];\n\n\n    for (let index = 0; index < keys.length; index++) {\n        fields.push(\n            { field: keys[index] }\n        )\n    }\n\n\n    return { datos: response.data, fields: fields }\n\n\n\n}\n\nexport default DataTabDataAPI\n\n\n\n\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.token) {\n    return { Authorization: 'Bearer ' + user.token };\n  } else {\n    return { Authorization: 'Bearer QWERTY' };\n    //return {};\n  }\n}","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\n//require('dotenv').config();\r\n\r\n\r\nconst HOST_IP = '10.63.2.160';\r\n//const HOST_IP = window.Configs.PA_DOCKER_HOST;\r\n//const HOST_IP = process.env.REACT_APP_DOCKER_HOST;\r\n\r\n//const API_URL = 'http://10.63.2.128:8003/api/';\r\nconst API_URL = 'http://' + HOST_IP + ':8003/api/';\r\n//const API_URL = 'http://' + HOST_IP + ':8002/api/';\r\n\r\n//console.log(process.env);\r\n\r\nconst getData = (body, url) => {\r\n  console.log(API_URL + url + body)\r\n  return axios.get(API_URL + url + body, { headers: authHeader(), timeout: 15000 });\r\n  \r\n};\r\n\r\nconst delData = (body, url) => {\r\n  console.log(API_URL + url + body)\r\n  return axios.delete(API_URL + url + body, { headers: authHeader(), timeout: 15000 });\r\n};\r\n\r\nconst postData = (body, url) => {\r\n  console.log(API_URL + url + body)\r\n  \r\n  return axios.post(API_URL + url, body, { headers: authHeader(), timeout: 15000 });\r\n};\r\n\r\n\r\n\r\nconst postFileUpload = (body, url) => {\r\n  //console.log(API_URL + url + body)\r\n  return axios.post(url, body, { headers: authHeader(), timeout: 15000 });\r\n};\r\n\r\n\r\nconst exportedObject = {\r\n  getData,\r\n  delData,\r\n  postData,\r\n  postFileUpload\r\n}\r\n\r\nexport default exportedObject","import React from \"react\";\r\nimport { Radio, Badge } from '@scuf/common';\r\n\r\nexport default class RadioGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n\r\n        this.textInput = null;\r\n        this.setTextInputRef = element => {\r\n            this.textInput = element;\r\n        };\r\n        this.focusTextInput = () => {\r\n            if (this.textInput) this.textInput.focus();\r\n        };\r\n\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n        this.textInput.focus();\r\n        /*window.scrollTo(1, 100);*/\r\n    }\r\n\r\n    handleChecked(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value ? item.label : nvalue\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n            <React.Fragment>\r\n                <button className=\"oculto\" ref={this.setTextInputRef} />\r\n                <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        <Radio key={item.id}\r\n                            label={item.label}\r\n                            disabled={false}\r\n                            name=\"RadioGroup\"\r\n                            checked={this.handleChecked(this.state.value, item.label)}\r\n                            onChange={() => this.handleOnChange({ key: idGrupo, id: item.id, val: item.label })}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { TextArea, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n                        {item.label}\r\n                        <TextArea\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Badge } from '@scuf/common';\r\n\r\nexport default class InputNumber extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: 0,\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        if (!isNaN(dato.val)) {\r\n            this.setState({ value: dato.val });\r\n            this.props.onDato(dato);\r\n        }\r\n        else {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Input\r\n                            //placeholder={\"Valor Numérico\"}\r\n                            type={\"number\"}\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            min={0}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            this.props.onDato(dato);\r\n        }\r\n    }\r\n\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Input\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            this.props.onDato(dato);\r\n        }\r\n    }\r\n\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Input\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            type={\"password\"}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, Badge } from '@scuf/common';\r\nimport baseServices from '../../services/base.services';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: { tag: \"\", desc: \"\", ds: \"\" },\r\n            vTag: \"\",\r\n            vDesc: \"\",\r\n            vDS: \"\",\r\n            datasources: \"\"\r\n        };\r\n    }\r\n\r\n    handleOnChangeTag = (dato) => {\r\n        this.setState({ vTag: dato.val });\r\n        this.setState({ value: { tag: dato.val, desc: this.state.vDesc, ds: this.state.vDS } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (dato.val && !dato.val == \"\" && this.state.vDesc && !this.state.vDesc == \"\" && this.state.vDS && !this.state.vDS == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: dato.val, desc: this.state.vDesc, ds: this.state.vDS } });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeDesc = (dato) => {\r\n        //this.setState({ value: dato.val });\r\n        this.setState({ vDesc: dato.val });\r\n        this.setState({ value: { tag: this.state.vTag, desc: dato.val, ds: this.state.vDS } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vTag && !this.state.vTag == \"\" && dato.val && !dato.val == \"\" && this.state.vDS && !this.state.vDS == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: this.state.vTag, desc: dato.val, ds: this.state.vDS } });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeDS = (dato) => {\r\n        //this.setState({ value: dato.val });\r\n        this.setState({ vDS: dato.val });\r\n        this.setState({ value: { tag: this.state.vTag, desc: this.state.vDesc, ds: dato.val } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vTag && !this.state.vTag == \"\" && this.state.vDesc && !this.state.vDesc == \"\" && dato.val && !dato.val == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: this.state.vTag, desc: this.state.vDesc, ds: dato.val } });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        this.getData();\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n        this.setState({ vTag: nvalue.tag });\r\n        this.setState({ vDesc: nvalue.desc });\r\n        this.setState({ vDS: nvalue.ds });\r\n        //console.log(this.props.items)\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    getData = async () => {\r\n        try {\r\n            const url = 'datasources'\r\n            const body = '?id=0'\r\n            var response = await baseServices.getData(body, url);\r\n            this.setState({ datasources: response })\r\n        } catch (err) { }\r\n        //console.log(this.state.datasources.data);\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {/* {JSON.stringify(this.state.value)}<br /> */}\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        {/* <Badge color={(this.state.value === \"\" || this.state.value.tag === \"\" || this.state.value.desc === \"\" || this.state.value.ds === \"\" || !this.state.value.tag || !this.state.value.desc || !this.state.value.ds) ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge> */}\r\n                        {item.label}\r\n                        <Input\r\n                            key={item.id + 10}\r\n                            placeholder={\"Ingrese el Nombre del Tag\"}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value.tag}\r\n                            onChange={(value) => this.handleOnChangeTag({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n                        <Select\r\n                            key={item.id + 20}\r\n                            placeholder={\"Seleccione la Descripcion del Tag\"}\r\n                            fluid={true}\r\n                            options={[{ value: 'model_feature', text: 'model_feature' }, { value: 'model_validation', text: 'model_validation' }]}\r\n                            value={this.state.value.desc}\r\n                            onChange={(value) => this.handleOnChangeDesc({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n                        <Select\r\n                            key={item.id + 30}\r\n                            placeholder={\"Seleccione el Data Source\"}\r\n                            fluid={true}\r\n                            //options={[{ value: 'mongo_results_dmh', text: 'mongo_results_dmh' }, { value: 'mongo_data_coord', text: 'mongo_data_coord' }, { value: 'mongo_data_pervsent', text: 'mongo_data_pervsent' }, { value: 'SGO3', text: 'SGO3' }]}\r\n                            options={this.state.datasources.data ? this.state.datasources.data : [{}]}\r\n                            value={this.state.value.ds}\r\n                            onChange={(value) => this.handleOnChangeDS({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        const lastchr = dato.val.slice(-1);\r\n        var valor = \"\";\r\n        if (lastchr == '' || lastchr == '0' || lastchr == '1' || lastchr == '2' || lastchr == '3' || lastchr == '4' || lastchr == '5' || lastchr == '5' || lastchr == '6' || lastchr == '7' || lastchr == '8' || lastchr == '9' || lastchr == 'h' || lastchr == 'd' || lastchr == 'w' || lastchr == 'm' || lastchr == 'y') {\r\n            if (dato.val == 'h' || dato.val == 'd' || dato.val == 'w' || dato.val == 'm' || dato.val == 'y') {\r\n                this.setState({ value: \"\" });\r\n                this.props.onRemoveDato({ key: dato.key, id: dato.id, val: \"\" });\r\n            }\r\n            else if (lastchr == 'h' || lastchr == 'd' || lastchr == 'w' || lastchr == 'm' || lastchr == 'y') {\r\n                valor = dato.val.replaceAll('h', '').replaceAll('d', '').replaceAll('w', '').replaceAll('m', '').replaceAll('y', '') + lastchr;\r\n                this.setState({ value: valor });\r\n                if (dato.val === \"\") {\r\n                    this.props.onRemoveDato({ key: dato.key, id: dato.id, val: \"\" });\r\n                }\r\n                else {\r\n                    this.props.onDato({ key: dato.key, id: dato.id, val: valor });\r\n                }\r\n            }\r\n            else if (lastchr == '0' || lastchr == '1' || lastchr == '2' || lastchr == '3' || lastchr == '4' || lastchr == '5' || lastchr == '5' || lastchr == '6' || lastchr == '7' || lastchr == '8' || lastchr == '9') {\r\n                var unidad = 'd'\r\n                if (dato.val.includes('h')) { unidad = 'h' }\r\n                else if (dato.val.includes('d')) { unidad = 'd' }\r\n                else if (dato.val.includes('w')) { unidad = 'w' }\r\n                else if (dato.val.includes('m')) { unidad = 'm' }\r\n                else if (dato.val.includes('y')) { unidad = 'y' }\r\n                valor = dato.val.replaceAll('h', '').replaceAll('d', '').replaceAll('w', '').replaceAll('m', '').replaceAll('y', '') + unidad;\r\n                this.setState({ value: valor });\r\n                if (dato.val === \"\") {\r\n                    this.props.onRemoveDato({ key: dato.key, id: dato.id, val: \"\" });\r\n                }\r\n                else {\r\n                    this.props.onDato({ key: dato.key, id: dato.id, val: valor });\r\n                }\r\n            }\r\n            else {\r\n                this.setState({ value: dato.val });\r\n                if (dato.val === \"\") {\r\n                    this.props.onRemoveDato({ key: dato.key, id: dato.id, val: this.state.value });\r\n                }\r\n                else {\r\n                    this.props.onDato({ key: dato.key, id: dato.id, val: this.state.value });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Input\r\n                            placeholder={\"N° seguido del periodo (h,d,w,m,y). Ejemplo: 5d\"}\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, Badge } from '@scuf/common';\r\nimport baseServices from '../../services/base.services';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: { tag: \"\", desc: \"\", ds: \"\" },\r\n            vTag: \"\",\r\n            vDesc: \"\",\r\n            vDS: \"\",\r\n            datasources: \"\"\r\n        };\r\n    }\r\n\r\n    handleOnChangeTag = (dato) => {\r\n        this.setState({ vTag: dato.val });\r\n        this.setState({ value: { tag: dato.val, desc: 'model_feature', ds: this.state.vDS } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vDS && !this.state.vDS == \"\" && dato.val && !dato.val == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: dato.val, desc: 'model_feature', ds: this.state.vDS } });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeDS = (dato) => {\r\n        //this.setState({ value: dato.val });\r\n        this.setState({ vDS: dato.val });\r\n        this.setState({ value: { tag: this.state.vTag, desc: 'model_feature', ds: dato.val } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vTag && !this.state.vTag == \"\" && dato.val && !dato.val == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: this.state.vTag, desc: 'model_feature', ds: dato.val } });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        this.getData();\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n        this.setState({ vTag: nvalue.tag });\r\n        this.setState({ vDesc: 'model_feature' });\r\n        this.setState({ vDS: nvalue.ds });\r\n        //console.log(this.props.items)\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    getData = async () => {\r\n        try {\r\n            const url = 'datasources'\r\n            const body = '?id=0'\r\n            var response = await baseServices.getData(body, url);\r\n            this.setState({ datasources: response })\r\n        } catch (err) { }\r\n        //console.log(this.state.datasources.data);\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {/* {JSON.stringify(this.state.value)}<br /> */}\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={(this.state.value === \"\" || this.state.value.tag === \"\" || this.state.value.desc === \"\" || this.state.value.ds === \"\" || !this.state.value.tag || !this.state.value.desc || !this.state.value.ds) ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Input\r\n                            key={item.id + 10}\r\n                            placeholder={\"Ingrese el Nombre del Tag\"}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value.tag}\r\n                            onChange={(value) => this.handleOnChangeTag({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n                        <Select\r\n                            key={item.id + 30}\r\n                            placeholder={\"Seleccione el Data Source\"}\r\n                            fluid={true}\r\n                            //options={[{ value: 'mongo_results_dmh', text: 'mongo_results_dmh' }, { value: 'mongo_data_coord', text: 'mongo_data_coord' }, { value: 'mongo_data_pervsent', text: 'mongo_data_pervsent' }, { value: 'SGO3', text: 'SGO3' }]}\r\n                            options={this.state.datasources.data ? this.state.datasources.data : [{}]}\r\n                            value={this.state.value.ds}\r\n                            onChange={(value) => this.handleOnChangeDS({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Select, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Select\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            options={[{ value: 'mongodb', text: 'mongodb' }, { value: 'mssql', text: 'mssql' }]}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Select, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n                        {item.label}\r\n                        <Select\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            options={[{ value: 'last', text: 'last' }]}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Chart } from '@scuf/charts';\r\nimport { Slider } from '@scuf/common';\r\nimport \"@scuf/common/honeywell-dark/theme.css\";\r\nimport '@scuf/charts/honeywell-dark/theme.css'\r\n\r\nexport default class Gauge extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        if (!isNaN(dato.val)) {\r\n            this.setState({ value: dato.val });\r\n            this.props.onDato(dato);\r\n        }\r\n        else {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue == '' ? 0 : nvalue });\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n            <div>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        <Chart showTooltips={false}>\r\n                            <Chart.Pane />\r\n                            <Chart.Gauge data={[{ y: value }]} useDial={true} dial={[{ backgroundColor: \"red\" }]}>\r\n                                <Chart.CenterBlock>\r\n                                    <span style={{ fontSize: '2rem' }}>{value < 40 ? \"Recarga\" : value > 60 ? \"Sobrecarga\" : \"Normal\"}</span>\r\n                                </Chart.CenterBlock>\r\n                            </Chart.Gauge>\r\n                            <Chart.YAxis variant=\"gauge\">\r\n                                <Chart.PlotBand from={0} to={39} variant=\"gauge\" color=\"red\" />\r\n                                <Chart.PlotBand from={40} to={60} variant=\"gauge\" color=\"green\" />\r\n                                <Chart.PlotBand from={61} to={100} variant=\"gauge\" color=\"red\" />\r\n                            </Chart.YAxis>\r\n                        </Chart>\r\n                        <Slider label=\"&nbsp;&nbsp;0\"\r\n                            min={0}\r\n                            max={100}\r\n                            value={this.state.value}\r\n                            onChange={value => {\r\n                                this.setState({ value });\r\n                            }}\r\n\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            fluid\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { DatePicker } from '@scuf/common';\r\nimport { LocalizationConfig } from '@scuf/localization';\r\n\r\n\r\nexport default class DTPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.activeElement.blur();\r\n    }\r\n\r\n\r\n    render() {\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <div id=\"blur\">\r\n                <LocalizationConfig languageCode={'es-CL'}>\r\n                    {this.props.items.map((item) => (\r\n                        <DatePicker\r\n                            className=\"abajo\"\r\n                            key={item.id}\r\n                            type=\"date\"\r\n                            helperText={item.label}\r\n                            closeOnDocumentClick={true}\r\n                            fluid={true}\r\n                            reserveSpace={true}\r\n                            displayFormat={\"DD-MM-YYYY\"}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            readOnly={false}\r\n                            disabled={false}\r\n                            showYearSelector={true}\r\n                        />\r\n\r\n                    ))}\r\n                </LocalizationConfig>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FileDrop, Loader } from '@scuf/common';\r\nimport baseServices from '../../services/base.services';\r\n\r\n\r\n//const config = require(\"../config.json\");\r\n\r\nconst url = 'http://10.63.2.160:3000/upload'\r\n// const apiKey = 'config.authorization';\r\n// const headers = { 'authorization': apiKey }\r\n\r\n\r\n\r\nconst FileUpload = () => {\r\n    const [state, setState] = useState({ fileError: \"\", value: \"\", response: \"\", acceptedFiles: [], rejectedFiles: [] })\r\n    const [responseAPI, setResponseAPI] = useState([])\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const [bodyDS, setBodyDS] = useState([])\r\n\r\n    function postFileUpload(body) {\r\n        const FileUpload = async () => {\r\n            try {\r\n                if (body) {\r\n                    var response = await baseServices.postFileUpload(body, url);\r\n                    if (response) {\r\n                        const filename = response.data.data.name\r\n                        /*********************************/\r\n                        setBodyDS([{ idPregunta: \"1\", Respuesta: filename }, { idPregunta: \"2\", Respuesta: filename }, { idPregunta: \"5\", Respuesta: \"csv\" }, { idPregunta: \"6\", Respuesta: filename }, { idPregunta: \"10\", Respuesta: filename }])\r\n                        const bodypost = [{ idPregunta: \"1\", Respuesta: filename }, { idPregunta: \"2\", Respuesta: filename }, { idPregunta: \"5\", Respuesta: \"csv\" }, { idPregunta: \"6\", Respuesta: filename }, { idPregunta: \"10\", Respuesta: filename }];\r\n                        const url = 'datasources';\r\n                        var responseDS = await baseServices.postData(bodypost, url);\r\n                        setResponseAPI([responseDS])\r\n                        window.location.reload();\r\n                        /*********************************/\r\n\r\n                    }\r\n                } else {\r\n                }\r\n\r\n            } catch (err) {\r\n                setResponseAPI([err])\r\n            }\r\n\r\n        }\r\n        return FileUpload();\r\n    }\r\n\r\n\r\n    const { acceptedFiles, rejectedFiles } = state;\r\n\r\n    return (\r\n        loader ?\r\n            <Loader text=\"Subiendo Archivo...\" minHeight={400}>\r\n                <div className=\"placeholder\" />\r\n            </Loader>\r\n            :\r\n            <React.Fragment>\r\n                <React.Fragment>\r\n                    <FileDrop\r\n                        key={1}\r\n                        label={\r\n                            <React.Fragment>\r\n                                {/* <h5>\r\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} />\r\n                                    {'Seleccine Archivo'}\r\n                                </h5> */}\r\n                            </React.Fragment>\r\n                        }\r\n                        buttonText=\"Subir archivo CSV\"\r\n                        resetButtonText=\"¿Desea crear el datasource?\"\r\n                        acceptedTypes={['.csv']}\r\n                        placeholder=\"Arrastrar Archivo (máximo: 350MB)\"\r\n                        maxSize=\"350000000\"\r\n                        error={state.fileError}\r\n                        onAccepted={(files) => {\r\n                            setState({ acceptedFiles: [...acceptedFiles, ...files] })\r\n                        }\r\n                        }\r\n\r\n                        onRejected={(files) => {\r\n                            setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"Uno o mas archivos fueron rechazados\" })\r\n                        }\r\n                        }\r\n                        onReset={() => {\r\n                            setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })\r\n                            state.acceptedFiles.map((file, index) => {\r\n                                const formData = new FormData();\r\n                                formData.append(\"file\", file);\r\n                                try {\r\n                                    setLoader(true)\r\n                                    postFileUpload(formData)\r\n                                    return null\r\n                                } catch (ex) {\r\n                                    console.log(ex);\r\n                                    return null\r\n                                }\r\n                            }\r\n                            )\r\n\r\n                        }\r\n                        }\r\n\r\n                    />\r\n                    {/*<h6>Archivos Aceptados:</h6>\r\n                    {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}\r\n                    <br /><br /><br />\r\n                    <h6>Archivos Rechazados:</h6>\r\n                    {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)} */}\r\n                    {/* {\r\n                    responseAPI.length > 0 ? JSON.stringify(responseAPI[0].data) : null\r\n                }\r\n                <br /><br />\r\n                {\r\n                    bodyDS.length > 0 ? JSON.stringify(bodyDS) : null\r\n                } */}\r\n                </React.Fragment>\r\n\r\n\r\n\r\n\r\n            </React.Fragment>\r\n    );\r\n\r\n\r\n}\r\nexport default FileUpload;","import React from \"react\";\r\nimport { Table, Button } from '@scuf/common';\r\nimport RadioGroup from \"./miRadioGroup\";\r\nimport TextoArea from \"./miTextArea\"\r\nimport InputNumber from \"./miInputNumber\"\r\nimport InputText from \"./miInputText\"\r\nimport InputTextPassword from \"./miInputTextPassword\"\r\nimport InputTextDataRange from \"./miInputTextDataRange\"\r\nimport InputTag from \"./miInputTag\"\r\nimport InputTagMF from \"./miInputTagMF\"\r\nimport Selector from \"./miSelector\"\r\nimport SelectorRSC from \"./miSelector_run_serve_criteria\"\r\nimport Gauge from \"./miGauge\"\r\nimport DTPicker from \"./miDatePicker\"\r\n//import SubirArchivo from \"./miFileUpload\"\r\nimport SubirArchivo from '../../components/fileupload/miFileUpload'\r\n\r\n\r\n\r\nfunction Dibuja(props) {\r\n\r\n    const dibujar = props.items;\r\n    if (dibujar.type === 'checkboxes') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell>{dibujar.label}</Table.Cell>\r\n                <Table.Cell textAlign=\"right\"><RadioGroup key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'textareas') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <TextoArea key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'numberareas') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <InputNumber key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputtext') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <InputText key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputtextPassword') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <InputTextPassword key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputTag') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/* <Table.Cell>{dibujar.label}</Table.Cell> */}\r\n                <Table.Cell> <InputTag key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputTagMF') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/* <Table.Cell>{dibujar.label}</Table.Cell> */}\r\n                <Table.Cell> <InputTagMF key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'select') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <Selector key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'selectRSC') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <SelectorRSC key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'gauges') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <Gauge key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'datepickers') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell>{dibujar.label}</Table.Cell>\r\n                <Table.Cell textAlign=\"right\"> <DTPicker key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    } else if (dibujar.type === 'fileuploads') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/*<Table.Cell>{dibujar.label}</Table.Cell>*/}\r\n                <Table.Cell textAlign=\"left\"> <SubirArchivo key={props.idGrupo} token={props.token} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else return <React.Fragment />\r\n\r\n\r\n}\r\n\r\n\r\nexport default class General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeName: \"\",\r\n            tagItem: { id: 1000, label: 'Tag1', type: 'inputTag', items: [{ id: 1, label: 'Tag', value: '' }] },\r\n            newTags: []\r\n\r\n\r\n        };\r\n    }\r\n\r\n\r\n\r\n    handleDato = (dato) => {\r\n        this.props.onhandleGeneralDato(dato);\r\n    };\r\n\r\n    handleRemoveDato = (dato) => {\r\n        this.props.onhandleGeneralRemoveDato(dato);\r\n    };\r\n\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const Pagina = this.props.id\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Table key={Pagina}>\r\n                    <Table.Header>\r\n                        <Table.HeaderCell content={this.props.titulo} textAlign=\"left\" />\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {\r\n\r\n                            this.props.items.map((item) => (\r\n                                <React.Fragment>\r\n                                    <Dibuja key={item.id} token={this.props.token} idGrupo={Pagina + \"-\" + item.id} items={item} onDato={this.handleDato} onRemoveDato={this.handleRemoveDato} />\r\n                                </React.Fragment>\r\n                            ))\r\n                        }\r\n                        {\r\n\r\n                            this.state.newTags.map((item) => (\r\n                                <React.Fragment>\r\n                                    <Dibuja key={item.id} token={0} idGrupo={Pagina + \"-\" + item.id} items={item} onDato={this.handleDato} onRemoveDato={this.handleRemoveDato} />\r\n                                </React.Fragment>\r\n                            ))\r\n                        }\r\n\r\n                    </Table.Body>\r\n                    <Table.Footer>\r\n                        <Table.Row align=\"left\">\r\n                            <Table.HeaderCell >\r\n\r\n                            </Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Footer>\r\n                </Table>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Header, Button, Notification, Card, Loader, Modal, Badge, Icon } from \"@scuf/common\";\r\nimport Grupos from \"./Grupos\";\r\nimport baseServices from '../../services/base.services';\r\n\r\nconst ReactToastify = require('react-toastify');\r\n\r\nconst config = require(\"../../configDS.json\");\r\n\r\n\r\n\r\nconst ToastNotification = ({ closeToast, Texto, Detalle }) => (\r\n    <Notification\r\n        className=\"toast-notification\"\r\n        severity=\"critical\"\r\n        onCloseClick={closeToast}\r\n        hasIcon={true}\r\n        title={Texto}\r\n        //detailsText=\"Todos los datos son obligatorios\"\r\n        detailsText={Detalle.replaceAll(',', \",\\n\")}\r\n        onDetailsClick={() => { }} //{() => alert('Debie ingresar todos los datos para continuar')}\r\n    />\r\n)\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            hidden: \"hidden\",\r\n            activePage: 0,\r\n            datos: [], //require(\"./Components/datos.json\"),\r\n            items: [],\r\n            respuestas: [],\r\n            apiBody: \"\",\r\n            modal: false,\r\n            modalFin: false,\r\n            Preguntas_Todas: [],\r\n            Preguntas_Respondidas: [],\r\n            Preguntas_Faltantes: [],\r\n            Situacion_Final: \"\",\r\n            Color_Situacion_Final: \"\",\r\n            MensajeAPI: \"\"\r\n        };\r\n        this.click_Next = this.click_Next.bind(this);\r\n        this.click_Prev = this.click_Prev.bind(this);\r\n        this.click_Send = this.click_Send.bind(this);\r\n        this.click_ModalSi = this.click_ModalSi.bind(this);\r\n        this.click_ModalNo = this.click_ModalNo.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.location.reload();\r\n    }\r\n\r\n    componentWillMount() {\r\n        // try {\r\n\r\n        //     axios.post(`${APIFormulario}`,\r\n        //         {\r\n        //             \"idTipo\": this.props.idTipo\r\n        //         },\r\n        //         { headers: headers })\r\n        //         .then((res) => {\r\n        //             const items = JSON.parse(res.data[0].JsonString)\r\n        //             this.setState({\r\n        //                 datos: items,\r\n        //                 isLoading: false\r\n        //             });\r\n        //         });\r\n\r\n        // } catch (e) {\r\n        //     console.log(e);\r\n        // }\r\n\r\n        const items = config\r\n        this.setState({\r\n            datos: items,\r\n            isLoading: false\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    click_Next() {\r\n\r\n        var Preguntas_Todas = []\r\n        this.state.datos[this.state.activePage].datos.map((item) => Preguntas_Todas.push(item.label))\r\n\r\n        let Preguntas_Faltantes = Preguntas_Todas.filter(Pregunta => !this.state.Preguntas_Respondidas.includes(Pregunta))\r\n\r\n        this.setState({\r\n            Preguntas_Todas: Preguntas_Todas,\r\n            Preguntas_Faltantes: Preguntas_Faltantes\r\n\r\n        });\r\n\r\n        const page = Number(this.state.datos[this.state.activePage].id)\r\n        const pageSize = this.state.datos[this.state.activePage].datos.length\r\n        var ndatos = 0\r\n        this.state.items.map((item) => parseInt(item.key.split(\"-\")[0]) === page ? ndatos = ndatos + 1 : null)\r\n\r\n\r\n        if (ndatos < pageSize) {\r\n            var mensaje\r\n            (pageSize - ndatos) === 1 ? mensaje = \"Falta un dato\" : mensaje = (\"Faltan \" + (pageSize - ndatos) + \" datos\")\r\n            ReactToastify.toast(<ToastNotification Detalle={JSON.stringify(Preguntas_Faltantes).replace('[', '').replace(']', '')} Texto={mensaje} closeToast={true} />)\r\n        }\r\n        else {\r\n\r\n            // if (this.state.activePage >= this.state.datos.length - 2) {\r\n            //     this.setState({ hidden: \"\" });\r\n            // } else { this.setState({ hidden: \"hidden\" }); }\r\n\r\n            if (this.state.activePage < this.state.datos.length - 1) {\r\n                this.setState({ activePage: this.state.activePage + 1 });\r\n                window.scrollTo(1, 1);\r\n            }\r\n            //else {\r\n            //    this.setState({ activePage: 0, hidden: \"\" });\r\n            //}\r\n        }\r\n\r\n        //this.state.datos[this.state.activePage + 1].titulo === 'TAGS' && this.setState({ hidden: \"\" });\r\n    }\r\n\r\n    click_Prev() {\r\n        const page = Number(this.state.datos[this.state.activePage].id)\r\n        //const pageSize = this.state.datos[this.state.activePage].datos.length\r\n        var ndatos = 0\r\n        this.state.items.map((item) => parseInt(item.key.split(\"-\")[0]) === page ? ndatos = ndatos + 1 : null)\r\n\r\n        //if (ndatos < pageSize) {\r\n        //    var mensaje\r\n        //    (pageSize - ndatos) === 1 ? mensaje = \"Falta un dato\" : mensaje = (\"Faltan \" + (pageSize - ndatos) + \" datos\")\r\n        //    ReactToastify.toast(<ToastNotification Texto={mensaje} closeToast={true} />)\r\n        //}\r\n        //else {\r\n        //    if (this.state.activePage > 0) {\r\n        //        this.setState({ activePage: this.state.activePage - 1 });\r\n        //    } else {\r\n        //        this.setState({ activePage: this.state.datos.length - 1 });\r\n        //    }\r\n        //    window.scrollTo(1, 1);\r\n        //}\r\n\r\n        if (this.state.activePage > 0) {\r\n            this.setState({ activePage: this.state.activePage - 1 });\r\n            window.scrollTo(1, 1);\r\n        }\r\n\r\n        this.setState({ hidden: \"hidden\" });\r\n\r\n\r\n    }\r\n\r\n\r\n    click_Send() {\r\n        this.setState({ modal: true })\r\n    }\r\n\r\n\r\n    postData = async () => {\r\n        try {\r\n            const bodypost = this.state.respuestas;\r\n            const url = 'datasources';\r\n            var response = await baseServices.postData(bodypost, url);\r\n            //console.log(bodypost)\r\n            window.location.reload();\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n    click_ModalSi() {\r\n        try {\r\n            this.setState({ isLoading: true, modal: false });\r\n            this.postData();\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({\r\n                isLoading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    click_ModalNo() {\r\n        this.setState({ modal: false });\r\n    }\r\n\r\n\r\n    click_ModalFin() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    handleGeneralRemoveDato = (item) => {\r\n        //nitems: De los items filtro el key modificado (se elimina) y NO se concatena el nuevo item\r\n        const nitems = this.state.items.filter((c) => c.key !== item.key)\r\n\r\n\r\n        //nitems2: Mismo nitems, pero sin la columna key (para el envío a la BD)\r\n        var nitems2 = [];\r\n        nitems.map((nitem) => nitems2 = nitems2.concat([{ idPregunta: nitem.key.split(\"-\")[1], Respuesta: nitem.val }]))\r\n\r\n        //KeyPageFile: Para obtener el id de la página (0) y el id de la fila (1)\r\n        const keyPageFile = item.key.split(\"-\")\r\n\r\n        //ndatos: De todos los datos originales que vienen de la BD, filtro solo la hoja asociada al item modificado\r\n        var ndatos = this.state.datos.filter((c) => c.id === parseInt(keyPageFile[0]))\r\n\r\n        //ndatos2: De la hoja (ndatos) saco solamente el arreglo de datos (las filas)\r\n        var ndatos2 = []\r\n        ndatos.map((ndato) =>\r\n            ndatos2 = ndatos2.concat(ndato.datos)\r\n        )\r\n\r\n        //ndatos3: De todas las filas (ndatos2), saco solo la correspondiente al item modificado\r\n        var ndatos3 = ndatos2.filter((c) => c.id === parseInt(keyPageFile[1]))\r\n\r\n\r\n        //Con el filtro quita esta pregunt del array de preguntas espondidas\r\n        let Preguntas_Respondidas = this.state.Preguntas_Respondidas.filter(item => item !== ndatos3[0].label)\r\n        this.setState({\r\n            Preguntas_Respondidas: Preguntas_Respondidas\r\n        });\r\n\r\n\r\n\r\n        //ndatos4: De la fila (ndatos3) saco sus elementos. Si es un checkbox, recorro el radiogroup y le asigno el checked=1 al elemento correspondiente\r\n        var ndatos4 = []\r\n        ndatos3.map((ndato) => {\r\n            if (ndato.type === 'checkboxes') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.label === item.val ? ndato.value = 1 : ndato.value = 0)\r\n                //ndatos3.checkboxes = ndatos4\r\n\r\n            } else if (ndato.type === 'textareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'numberareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtext') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtextPassword') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTag') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTagMF') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'select') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'selectRSC') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'gauges') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'datepickers') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'fileuploads') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            }\r\n            return null\r\n        })\r\n\r\n\r\n        this.setState({\r\n            items: nitems,\r\n            respuestas: nitems2\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    handleGeneralDato = (item) => {\r\n\r\n        //nitems: De los items filtro el key modificado (se elimina) y se concatena el nuevo item\r\n        const nitems = (this.state.items.filter((c) => c.key !== item.key)).concat(item)\r\n\r\n        //nitems2: Mismo nitems, pero sin la columna key (para el envío a la BD)\r\n        var nitems2 = [];\r\n        nitems.map((nitem) => nitems2 = nitems2.concat([{ idPregunta: nitem.key.split(\"-\")[1], Respuesta: nitem.val }]))\r\n\r\n        //KeyPageFile: Para obtener el id de la página (0) y el id de la fila (1)\r\n        const keyPageFile = item.key.split(\"-\")\r\n\r\n        //ndatos: De todos los datos originales que vienen de la BD, filtro solo la hoja asociada al item modificado\r\n        var ndatos = this.state.datos.filter((c) => c.id === parseInt(keyPageFile[0]))\r\n\r\n        //ndatos2: De la hoja (ndatos) saco solamente el arreglo de datos (las filas)\r\n        var ndatos2 = []\r\n        ndatos.map((ndato) =>\r\n            ndatos2 = ndatos2.concat(ndato.datos)\r\n        )\r\n\r\n        //ndatos3: De todas las filas (ndatos2), saco solo la correspondiente al item modificado\r\n        var ndatos3 = ndatos2.filter((c) => c.id === parseInt(keyPageFile[1]))\r\n        var Preguntas_Respondidas = this.state.Preguntas_Respondidas\r\n\r\n\r\n        //ndatos3[0].id > 99 && console.log(item.val);\r\n        //lleno el array con las preguntas respondidas para luego mostrar las faltantes\r\n        if (Preguntas_Respondidas.indexOf(ndatos3[0].label) === -1) {\r\n            Preguntas_Respondidas.push(ndatos3[0].label)\r\n            this.setState({ Preguntas_Respondidas: Preguntas_Respondidas });\r\n        }\r\n\r\n\r\n\r\n\r\n        //ndatos4: De la fila (ndatos3) saco sus elementos. Si es un checkbox, recorro el radiogroup y le asigno el checked=1 al elemento correspondiente\r\n        var ndatos4 = []\r\n        ndatos3.map((ndato) => {\r\n            if (ndato.type === 'checkboxes') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.label === item.val ? ndato.value = 1 : ndato.value = 0)\r\n                //ndatos3.checkboxes = ndatos4\r\n\r\n            } else if (ndato.type === 'textareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'numberareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtext') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtextPassword') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTag') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTagMF') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'select') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'selectRSC') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'gauges') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'datepickers') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'fileuploads') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            }\r\n            return null\r\n        })\r\n\r\n\r\n\r\n        this.setState({\r\n            items: nitems,\r\n            respuestas: nitems2\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleNewTag = () => {\r\n        var hojas = this.state.datos;\r\n        hojas.slice(-1);\r\n        var newTagsArray = this.state.datos[3].datos;\r\n        var tagsSize = newTagsArray.length;\r\n        var tagItem = {\r\n            \"id\": 10000 + tagsSize,\r\n            \"label\": \"Tag\",\r\n            \"type\": \"inputTag\",\r\n            \"items\": [\r\n                {\r\n                    \"id\": 1,\r\n                    \"label\": \"Tag\",\r\n                    \"value\": \"\"\r\n                }\r\n            ]\r\n        }\r\n\r\n        newTagsArray.push(tagItem)\r\n\r\n        var hojaTags = {\r\n            \"id\": 4,\r\n            \"titulo\": \"TAGS\",\r\n            \"datos\": newTagsArray\r\n        }\r\n\r\n        hojas.push(hojaTags)\r\n        this.setState({ datos: hojas })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header menu={false} logo={false} title={'Espere...'}>\r\n                    </Header>\r\n                    <Card>\r\n                        <Card.Header />\r\n                        <Card.Content>\r\n                            <Loader minHeight={400}>\r\n                                <div className=\"placeholder\" />\r\n                            </Loader>\r\n                        </Card.Content>\r\n                    </Card>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        else\r\n            return (\r\n\r\n\r\n                <React.Fragment>\r\n\r\n\r\n                    {/* {JSON.stringify(this.state.respuestas)}<br /> */}\r\n                    {/*{JSON.stringify(this.state.Preguntas_Respondidas)}<br />*/}\r\n                    {/*{JSON.stringify(this.state.Preguntas_Faltantes)}*/}\r\n\r\n\r\n                    {this.renderModal()}\r\n                    {this.renderModalFin()}\r\n                    <table style={{ width: '50%' }}>\r\n                        <tr>\r\n                            <td colspan=\"3\">\r\n                                <Header menu={false} logo={false} title={'Crear Data Source'}>\r\n                                    <Header.Item>\r\n                                        <Icon name=\"close\" size=\"small\" root=\"common\" onClick={() => { this.setState({ isLoading: true, modal: false }); this.click_ModalFin(); }} />\r\n                                    </Header.Item>\r\n                                </Header>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\">\r\n\r\n                                <Grupos\r\n                                    key={1}\r\n                                    token={this.props.token}\r\n                                    id={this.state.datos[this.state.activePage].id}\r\n                                    titulo={this.state.datos[this.state.activePage].titulo}\r\n                                    items={this.state.datos[this.state.activePage].datos}\r\n                                    onhandleGeneralDato={this.handleGeneralDato}\r\n                                    onhandleGeneralRemoveDato={this.handleGeneralRemoveDato}\r\n                                />\r\n\r\n                            </td>\r\n                        </tr>\r\n                        <tr >\r\n                            <td>\r\n                                <Button type=\"primary\"\r\n                                    icon=\"caret-left\"\r\n                                    size=\"small\"\r\n                                    content=\"\"\r\n                                    iconPosition=\"left\" onClick={this.click_Prev} disabled={this.state.isLoading}>\r\n                                </Button>\r\n                            </td>\r\n                            <td style={{ textAlign: 'center' }}>\r\n                                {\r\n\r\n                                    this.state.datos[this.state.activePage].titulo === 'Tabla' ?\r\n                                        <Button\r\n                                            //className={this.state.hidden}\r\n                                            type=\"primary\"\r\n                                            loading={this.state.isLoading}\r\n                                            size=\"small\"\r\n                                            content=\"Terminar\"\r\n                                            iconPosition=\"right\" onClick={this.click_Send} disabled={this.state.isLoading}>\r\n                                        </Button>\r\n                                        :\r\n                                        <React.Fragment />\r\n                                }\r\n                            </td>\r\n\r\n                            <td style={{ textAlign: 'right' }}>\r\n                                <Button type=\"primary\"\r\n                                    icon=\"caret-right\"\r\n                                    size=\"small\"\r\n                                    content=\"\"\r\n                                    iconPosition=\"right\" onClick={this.click_Next} disabled={this.state.isLoading}>\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\"><span>&nbsp;&nbsp;</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\"><span>&nbsp;&nbsp;</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\"><span>&nbsp;&nbsp;</span></td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <div>\r\n                        <ReactToastify.ToastContainer\r\n                            hideProgressBar={false}\r\n                            closeOnClick={false}\r\n                            closeButton={false}\r\n                            newestOnTop={true}\r\n                            //position=\"bottom-right\"\r\n                            position=\"top-center\"\r\n                            autoClose={2500}\r\n                            toastClassName=\"toast-notification-wrap\"\r\n                        />\r\n                    </div>\r\n\r\n\r\n\r\n                </React.Fragment>\r\n\r\n            );\r\n\r\n    }\r\n\r\n\r\n    renderModal() {\r\n        return (\r\n            <Modal style={{ height: '150px', width: '300px', position: 'absolute', top: '20%', left: '50%', marginLeft: '-150px' }} closeIcon={true} size=\"mini\" onClose={() => this.setState({ modal: false })} open={this.state.modal} closeOnDimmerClick={false}>\r\n                <Modal.Header>\r\n                    ¿Está Seguro?\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                    <Button type=\"secondary\" size=\"small\" content=\"No\" onClick={this.click_ModalNo} disabled={this.state.isLoading} />\r\n                    <Button type=\"primary\" size=\"small\" content=\"Si\" onClick={this.click_ModalSi} disabled={this.state.isLoading} />\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n\r\n    }\r\n\r\n    renderModalFin() {\r\n        return (\r\n            <Modal className=\"popup-theme-wrap\" size=\"mini\" onClose={() => this.setState({ modalFin: false })} open={this.state.modalFin} closeOnDimmerClick={false}>\r\n                <Modal.Header>\r\n                    Formulario Enviado\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    Situacion Final:<br />{<Badge color={this.state.Color_Situacion_Final.split('\\n')[0]}>{this.state.Situacion_Final.split('\\n')[0]} </Badge>}<br />\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                    <Button type=\"secondary\" size=\"small\" content=\"Cerrar\" onClick={this.click_ModalFin} />\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    notify() {\r\n        ReactToastify.toast(<ToastNotification closeToast={true} />)\r\n    }\r\n\r\n}\r\n","import { useState, useEffect } from 'react'\n\nimport { Modal, InputLabel, Notification } from '@scuf/common'\nimport { DataTable } from '@scuf/datatable';\nimport { Icon, Button, Loader, Card, Header } from '@scuf/common';\n\nimport { useDispatch } from 'react-redux'\nimport DataTabDataAPI from './DatTabDataAPI'\nimport baseServices from '../../../services/base.services';\nimport '@scuf/datatable/honeywell-compact-dark/theme.css'\nimport { Fragment } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../../../src/toast-notification-wrap.css'\n\nimport Formulario from '../../../components/formDS/Formulario'\nimport SubirArchivo from '../../../components/fileupload/miFileUpload'\nconst ReactToastify = require('react-toastify');\n\nconst DatTab = ({ url, body, title }) => {\n\n    const dispatch = useDispatch();\n    const [state, setState] = useState([])\n    const [modal, setModal] = useState(false);\n    const [add, setAdd] = useState(false);\n    const [addCsv, setAddCsv] = useState(false);\n    const [id, setId] = useState(0);\n    const [selectedRow, setSelectedRow] = useState([])\n    const [deleteRows, setDeleteRows] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        const getData = async () => {\n            try {\n                if (body) {\n                    var response = await baseServices.getData(body, url);\n                    if (response.data && response.data.length > 0) {\n                        setState(DataTabDataAPI(response))\n                    }\n                } else { }\n\n            } catch (err) { }\n\n        }\n\n        getData();\n\n    }, []);\n\n\n\n\n    const delData = async () => {\n        setIsLoading(true);\n        try {\n            if (body) {\n                let bodydel = '?id=' + selectedRow[0].id;\n                var responseDel = await baseServices.delData(bodydel, url);\n                window.location.reload();\n            } else { }\n\n        } catch (err) { }\n\n    }\n\n\n    let handleDelete = () => {\n        var res;\n        //console.log(selectedRow[0].id)\n        selectedRow.length < 1\n            ?\n            res = ReactToastify.toast(<ToastNotification Tipo=\"Delete\" Texto={\"Seleccione un DataSource\"} closeToast={true} Severity=\"critical\" />)\n            :\n            res = ReactToastify.toast(<ToastNotification Tipo=\"Delete\" Texto={selectedRow.length == 1 ? \"¿Eliminar \" + selectedRow[0].conn_id + \"?\" : \"¿Eliminar estos \" + selectedRow[0].conn_id + \" DataSources?\"} closeToast={true} Severity=\"information\" />)\n\n        return res\n    }\n\n    let handleAdd = () => {\n        var res;\n        setAdd(true);\n        return res\n    }\n\n    let handleAddCsv = () => {\n        var res;\n        setAddCsv(true);\n        return res\n    }\n\n\n\n    const ToastNotification = ({ Tipo, closeToast, Texto, Severity }) => (\n        Tipo == \"Delete\"\n            ?\n            Severity == \"critical\"\n                ?\n                <Notification\n                    className=\"toast-notification\"\n                    severity={Severity}\n                    onCloseClick={closeToast}\n                    hasIcon={false}\n                    title={Texto}\n                    detailsText={<Button key={1} size=\"small\" content=\"OK\" onClick={closeToast} />}\n                    onDetailsClick={closeToast}\n                />\n                :\n                <Notification\n                    className=\"toast-notification\"\n                    severity={Severity}\n                    onCloseClick={closeToast}\n                    hasIcon={false}\n                    title={Texto}\n                    detailsText={<Button key={1} size=\"small\" content=\"Si\" onClick={closeToast} />}\n                    //detailsText=\"Eliminar\"\n                    onDetailsClick={() => { delData() }}\n                />\n            :\n            <Fragment />\n\n    )\n\n\n\n\n    const Item = DataTable.HeaderBar.Item;\n    return (\n        <Fragment>\n            {\n                isLoading ?\n                    <Fragment>\n                        <Header menu={false} logo={false} title={'Eliminando Data Source...'}>\n                        </Header>\n                        <Card>\n                            <Card.Header />\n                            <Card.Content>\n                                <Loader minHeight={400}>\n                                    <div className=\"placeholder\" />\n                                </Loader>\n                            </Card.Content>\n                        </Card>\n                    </Fragment>\n                    :\n                    add ?\n                        <Formulario />\n                        :\n                        addCsv ? <SubirArchivo />\n                            :\n                            state.datos ?\n                                modal ?\n                                    <Modal closeIcon={true} onClose={() => setModal(false)} open={modal} closeOnDimmerClick={false} closeOnDocumentClick={false} >\n                                        <Modal.Header>\n                                            {state.datos[id].conn_id}\n                                        </Modal.Header>\n                                        <Modal.Content>\n                                            <Fragment>\n                                                <DataTable data={[state.datos[id]]} rows={10} search={true}\n                                                    scrollable={true} scrollHeight=\"600%\" reorderableColumns={true} resizableColumns={true}\n                                                >\n                                                    {\n                                                        state.fields && state.fields.map((y, i) => (\n                                                            <DataTable.Column key={i} field={y.field} header={y.field} sortable={true} editable={true} editFieldType=\"text\" />\n                                                        ))\n                                                    }\n                                                    <DataTable.Pagination />\n\n                                                </DataTable>\n                                            </Fragment>\n                                        </Modal.Content>\n                                        <Modal.Footer>\n\n                                        </Modal.Footer>\n                                    </Modal>\n                                    :\n                                    <Fragment>\n                                        <InputLabel label={title} />\n                                        <DataTable data={state.datos} rows={10} search={true} selection={selectedRow} onSelectionChange={e => setSelectedRow(e)} selectionMode=\"single\"\n                                            scrollable={true} scrollHeight=\"600%\" reorderableColumns={true} resizableColumns={true}\n                                            onCellClick={(data) => { setModal(true); setId(data.rowIndex) }}\n                                        >\n                                            <DataTable.HeaderBar>\n                                                <Item\n                                                    content=\"SQL\"\n                                                    icon={<Icon name=\"slidercontrols-plus\" size=\"small\" root=\"common\" />}\n                                                    onClick={() => handleAdd()}\n                                                />\n\n                                                <Item\n                                                    content=\"CSV\"\n                                                    icon={<Icon name=\"slidercontrols-plus\" size=\"small\" root=\"common\" />}\n                                                    onClick={() => handleAddCsv()}\n                                                />\n\n                                                <Item\n                                                    content=\"Eliminar\"\n                                                    icon={<Icon name=\"delete\" size=\"small\" root=\"common\" />}\n                                                    onClick={() => handleDelete()}\n                                                />\n                                            </DataTable.HeaderBar>\n\n                                            <DataTable.Column key={1} field=\"conn_id\" header=\"Conexión\" sortable={true} />\n                                            <DataTable.Column key={2} field=\"description\" header=\"Descripción\" sortable={true} />\n                                            <DataTable.Column key={3} field=\"db_type\" header=\"Base de Datos\" sortable={true} />\n                                            <DataTable.Column key={3} field=\"table_type\" header=\"Tipo\" sortable={true} />\n\n                                            <DataTable.Pagination />\n\n                                        </DataTable>\n\n                                        <ReactToastify.ToastContainer\n                                            hideProgressBar={false}\n                                            closeOnClick={false}\n                                            closeButton={false}\n                                            newestOnTop={true}\n                                            position=\"top-center\"\n                                            autoClose={5000}\n                                            toastClassName=\"toast-notification-wrap\"\n                                        />\n\n                                    </Fragment>\n\n\n                                : <Fragment>\n                                    <InputLabel label={title} />\n                                    <DataTable data={state.datos} >\n                                        <DataTable.HeaderBar>\n                                            <Item\n                                                content=\"Crear\"\n                                                icon={<Icon name=\"slidercontrols-plus\" size=\"small\" root=\"common\" />}\n                                                onClick={() => handleAdd()}\n                                            />\n                                            <Item\n                                                content=\"Eliminar\"\n                                                icon={<Icon name=\"delete\" size=\"small\" root=\"common\" />}\n                                            />\n                                        </DataTable.HeaderBar>\n                                        <DataTable.Column key={1} field=\"conn_id\" header=\"Conexión\" />\n                                        <DataTable.Column key={2} field=\"description\" header=\"Descripción\" />\n                                        <DataTable.Column key={3} field=\"db_type\" header=\"Base de Datos\" />\n                                        <DataTable.Column key={3} field=\"table_type\" header=\"Tipo\" />\n                                    </DataTable>\n\n                                </Fragment>\n            }\n\n        </Fragment>\n\n\n    )\n}\n\nexport default DatTab\n","import React from 'react'\nimport { Grid } from '@scuf/common'\n\nimport DatTabDS from '../../components/common/DatTab/DatTabDS'\n//import DatTabModels from '../../components/common/DatTab/DatTabModels'\n\n//import { isMobile } from \"react-device-detect\";\n//import { useDispatch } from 'react-redux'\n\nconst width = window.innerWidth;\n\n\n//let isMobile = (width <= 68);\n\n\nconst DataSources = () => {\n\n\n    return (\n        <>\n\n            <Grid >\n\n                <Grid.Row >\n                    <Grid.Column xsWidth='12' sWidth='12' mWidth='12' lWidth='12' xlWidth='12'>\n                        <div style={{ width: 0.8 * width, marginTop: '0px' }}>\n                            <DatTabDS\n                                url='datasources'\n                                body='?id=*'\n                                title='DataSources'\n                            />\n                        </div>\n                    </Grid.Column>\n                </Grid.Row>\n\n            </Grid>\n\n\n        </>\n    )\n}\n\nexport default DataSources\n","import React, { Fragment } from \"react\";\r\nimport { Radio, Badge, Card, Popup } from '@scuf/common';\r\n\r\nexport default class RadioGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n\r\n        this.textInput = null;\r\n        this.setTextInputRef = element => {\r\n            this.textInput = element;\r\n        };\r\n        this.focusTextInput = () => {\r\n            if (this.textInput) this.textInput.focus();\r\n        };\r\n\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n        this.textInput.focus();\r\n        //alert(JSON.stringify(dato))\r\n        /*window.scrollTo(1, 100);*/\r\n    }\r\n\r\n    handleChecked(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value ? item.label : nvalue\r\n        )\r\n        this.setState({ value: nvalue });\r\n\r\n\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <button className=\"oculto\" ref={this.setTextInputRef} />\r\n                <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n                {this.props.items.map((item) => (\r\n\r\n                    <React.Fragment>\r\n                        <Radio key={item.id}\r\n                            label={item.label}\r\n                            disabled={false}\r\n                            name=\"RadioGroup\"\r\n                            checked={this.handleChecked(this.state.value, item.label)}\r\n                            onChange={() => this.handleOnChange({ key: idGrupo, id: item.id, val: item.label })}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { TextArea, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n                        {item.label}\r\n                        <TextArea\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Input, Badge, Popup, Card } from '@scuf/common';\r\n\r\nexport default class InputNumber extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: 0,\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        if (!isNaN(dato.val)) {\r\n            this.setState({ value: dato.val });\r\n            this.props.onDato(dato);\r\n        }\r\n        else {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    {\r\n                                        item.label == \"Parámetro: Min Sample\" ?\r\n                                            <Fragment>\r\n                                                Número entero que indica cuantas iteraciones se realizarán sobre cada valor de min_cluster_size para elección del par de hiperparámetros [min_cluster_size, min_samples]\r\n                                                <br />\r\n                                                <a href=\"https://hdbscan.readthedocs.io/en/latest/parameter_selection.html#selecting-min-cluster-size\" target=\"_blank\">Mas Información</a>\r\n                                            </Fragment>\r\n\r\n                                            :\r\n                                            item.label == \"Período de agrupación de datos (minutos)\" ?\r\n                                                <Fragment>\r\n                                                    Periódo de muestreo del dataset usado (minutos)\r\n                                                </Fragment>\r\n\r\n                                                :\r\n                                                item.label == \"Puerto de disponibilización\" ?\r\n                                                    <Fragment>\r\n                                                        Puerto sobre el cual se levantará el modelo de xgboost\r\n                                                    </Fragment>\r\n\r\n                                                    : \"X\"\r\n\r\n                                    }\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n\r\n                        <Input\r\n                            placeholder={\"Valor Numérico\"}\r\n                            type={\"number\"}\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            min={0}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Input, Badge, Card, Popup } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            this.props.onDato(dato);\r\n        }\r\n    }\r\n\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    {\r\n                                        item.label == \"Nombre del Modelo\" ?\r\n                                            <Fragment>\r\n                                                Nombre con que se almacenará el modelo\r\n                                            </Fragment>\r\n                                            : \"X\"\r\n\r\n                                    }\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n\r\n                        <Input\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Input, Badge, Card, Popup } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            this.props.onDato(dato);\r\n        }\r\n    }\r\n\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n\r\n        )\r\n        this.setState({ value: nvalue });\r\n\r\n        // if (nvalue !== \"\")\r\n        //     this.handleOnChange({ key: this.props.idGrupo, id: 1, val: nvalue })\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n\r\n\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    Grilla de valores que se usarán en la búsqueda del hiperparámetro óptimo para el tamaño mínimo de clusters en %\r\n                                    <br />\r\n                                    <a href=\"https://hdbscan.readthedocs.io/en/latest/parameter_selection.html#selecting-min-cluster-size\" target=\"_blank\">Mas Información</a>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n\r\n                        <Input\r\n                            key={item.id}\r\n                            placeholder={\"Ej: 10,20,30\"}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Input, Badge, Card, Popup } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        const lastchr = dato.val.slice(-1);\r\n        var valor = \"\";\r\n        if (lastchr == '' || lastchr == '0' || lastchr == '1' || lastchr == '2' || lastchr == '3' || lastchr == '4' || lastchr == '5' || lastchr == '5' || lastchr == '6' || lastchr == '7' || lastchr == '8' || lastchr == '9' || lastchr == 'h' || lastchr == 'd' || lastchr == 'w' || lastchr == 'm' || lastchr == 'y') {\r\n            if (dato.val == 'h' || dato.val == 'd' || dato.val == 'w' || dato.val == 'm' || dato.val == 'y') {\r\n                this.setState({ value: \"\" });\r\n                this.props.onRemoveDato({ key: dato.key, id: dato.id, val: \"\" });\r\n            }\r\n            else if (lastchr == 'h' || lastchr == 'd' || lastchr == 'w' || lastchr == 'm' || lastchr == 'y') {\r\n                valor = dato.val.replaceAll('h', '').replaceAll('d', '').replaceAll('w', '').replaceAll('m', '').replaceAll('y', '') + lastchr;\r\n                this.setState({ value: valor });\r\n                if (dato.val === \"\") {\r\n                    this.props.onRemoveDato({ key: dato.key, id: dato.id, val: \"\" });\r\n                }\r\n                else {\r\n                    this.props.onDato({ key: dato.key, id: dato.id, val: valor });\r\n                }\r\n            }\r\n            else if (lastchr == '0' || lastchr == '1' || lastchr == '2' || lastchr == '3' || lastchr == '4' || lastchr == '5' || lastchr == '5' || lastchr == '6' || lastchr == '7' || lastchr == '8' || lastchr == '9') {\r\n                var unidad = 'd'\r\n                if (dato.val.includes('h')) { unidad = 'h' }\r\n                else if (dato.val.includes('d')) { unidad = 'd' }\r\n                else if (dato.val.includes('w')) { unidad = 'w' }\r\n                else if (dato.val.includes('m')) { unidad = 'm' }\r\n                else if (dato.val.includes('y')) { unidad = 'y' }\r\n                valor = dato.val.replaceAll('h', '').replaceAll('d', '').replaceAll('w', '').replaceAll('m', '').replaceAll('y', '') + unidad;\r\n                this.setState({ value: valor });\r\n                if (dato.val === \"\") {\r\n                    this.props.onRemoveDato({ key: dato.key, id: dato.id, val: \"\" });\r\n                }\r\n                else {\r\n                    this.props.onDato({ key: dato.key, id: dato.id, val: valor });\r\n                }\r\n            }\r\n            else {\r\n                this.setState({ value: dato.val });\r\n                if (dato.val === \"\") {\r\n                    this.props.onRemoveDato({ key: dato.key, id: dato.id, val: this.state.value });\r\n                }\r\n                else {\r\n                    this.props.onDato({ key: dato.key, id: dato.id, val: this.state.value });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    {\r\n                                        item.label == \"Largo de dataset\" ?\r\n                                            <Fragment>Tiempo de data que se usará para entrenar el modelo.<br />Ingresar un N° seguido del período (h,d,w,m,y)</Fragment>\r\n                                            :\r\n                                            item.label == \"Cantidad de datos a almacenar\" ?\r\n                                                <Fragment>Tiempo de data a analizar usando el modelo entrenado.<br />Ingresar un N° seguido del período (h,d,w,m,y)</Fragment>\r\n                                                : \"X\"\r\n\r\n                                    }\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n\r\n                        <Input\r\n                            placeholder={\"N° seguido del periodo (h,d,w,m,y). Ejemplo: 5d\"}\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, Card, Popup } from '@scuf/common';\r\nimport baseServices from '../../services/base.services';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: { tag: \"\", desc: \"\", ds: \"\" },\r\n            vTag: \"\",\r\n            vDesc: \"\",\r\n            vDS: \"\",\r\n            datasources: \"\"\r\n        };\r\n    }\r\n\r\n    handleOnChangeTag = (dato) => {\r\n        this.setState({ vTag: dato.val });\r\n        this.setState({ value: { tag: dato.val, desc: this.state.vDesc, ds: this.state.vDS } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (dato.val && !dato.val == \"\" && this.state.vDesc && !this.state.vDesc == \"\" && this.state.vDS && !this.state.vDS == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: dato.val, desc: this.state.vDesc, ds: this.state.vDS } });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeDesc = (dato) => {\r\n        //this.setState({ value: dato.val });\r\n        this.setState({ vDesc: dato.val });\r\n        this.setState({ value: { tag: this.state.vTag, desc: dato.val, ds: this.state.vDS } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vTag && !this.state.vTag == \"\" && dato.val && !dato.val == \"\" && this.state.vDS && !this.state.vDS == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: this.state.vTag, desc: dato.val, ds: this.state.vDS } });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeDS = (dato) => {\r\n        //this.setState({ value: dato.val });\r\n        this.setState({ vDS: dato.val });\r\n        this.setState({ value: { tag: this.state.vTag, desc: this.state.vDesc, ds: dato.val } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vTag && !this.state.vTag == \"\" && this.state.vDesc && !this.state.vDesc == \"\" && dato.val && !dato.val == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: this.state.vTag, desc: this.state.vDesc, ds: dato.val } });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        this.getData();\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n        this.setState({ vTag: nvalue.tag });\r\n        this.setState({ vDesc: nvalue.desc });\r\n        this.setState({ vDS: nvalue.ds });\r\n        //console.log(this.props.items)\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    getData = async () => {\r\n        try {\r\n            const url = 'datasources'\r\n            const body = '?id=0'\r\n            var response = await baseServices.getData(body, url);\r\n            this.setState({ datasources: response })\r\n        } catch (err) { }\r\n        //console.log(this.state.datasources.data);\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {/* {JSON.stringify(this.state.value)}<br /> */}\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        {/* <Badge color={(this.state.value === \"\" || this.state.value.tag === \"\" || this.state.value.desc === \"\" || this.state.value.ds === \"\" || !this.state.value.tag || !this.state.value.desc || !this.state.value.ds) ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge> */}\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    Tags opcionales para entrenar el modelo\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n                        <Input\r\n                            key={item.id + 10}\r\n                            placeholder={\"Ingrese el Nombre del Tag\"}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value.tag}\r\n                            onChange={(value) => this.handleOnChangeTag({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n                        <Select\r\n                            key={item.id + 20}\r\n                            placeholder={\"Seleccione la Descripcion del Tag\"}\r\n                            fluid={true}\r\n                            options={[{ value: 'model_feature', text: 'model_feature' }, { value: 'model_validation', text: 'model_validation' }]}\r\n                            value={this.state.value.desc}\r\n                            onChange={(value) => this.handleOnChangeDesc({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n                        <Select\r\n                            key={item.id + 30}\r\n                            placeholder={\"Seleccione el Data Source\"}\r\n                            fluid={true}\r\n                            //options={[{ value: 'mongo_results_dmh', text: 'mongo_results_dmh' }, { value: 'mongo_data_coord', text: 'mongo_data_coord' }, { value: 'mongo_data_pervsent', text: 'mongo_data_pervsent' }, { value: 'SGO3', text: 'SGO3' }]}\r\n                            options={this.state.datasources.data ? this.state.datasources.data : [{}]}\r\n                            value={this.state.value.ds}\r\n                            onChange={(value) => this.handleOnChangeDS({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Input, Select, Badge, Card, Popup } from '@scuf/common';\r\nimport baseServices from '../../services/base.services';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: { tag: \"\", desc: \"\", ds: \"\" },\r\n            vTag: \"\",\r\n            vDesc: \"\",\r\n            vDS: \"\",\r\n            datasources: \"\"\r\n        };\r\n    }\r\n\r\n    handleOnChangeTag = (dato) => {\r\n        this.setState({ vTag: dato.val });\r\n        this.setState({ value: { tag: dato.val, desc: 'model_feature', ds: this.state.vDS } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vDS && !this.state.vDS == \"\" && dato.val && !dato.val == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: dato.val, desc: 'model_feature', ds: this.state.vDS } });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleOnChangeDS = (dato) => {\r\n        //this.setState({ value: dato.val });\r\n        this.setState({ vDS: dato.val });\r\n        this.setState({ value: { tag: this.state.vTag, desc: 'model_feature', ds: dato.val } });\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n        else {\r\n            if (this.state.vTag && !this.state.vTag == \"\" && dato.val && !dato.val == \"\") {\r\n                this.props.onDato({ key: dato.key, id: dato.id, val: { tag: this.state.vTag, desc: 'model_feature', ds: dato.val } });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        this.getData();\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n        this.setState({ vTag: nvalue.tag });\r\n        this.setState({ vDesc: 'model_feature' });\r\n        this.setState({ vDS: nvalue.ds });\r\n        //console.log(this.props.items)\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    getData = async () => {\r\n        try {\r\n            const url = 'datasources'\r\n            const body = '?id=0'\r\n            var response = await baseServices.getData(body, url);\r\n            this.setState({ datasources: response })\r\n        } catch (err) { }\r\n        //console.log(this.state.datasources.data);\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {/* {JSON.stringify(this.state.value)}<br /> */}\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={(this.state.value === \"\" || this.state.value.tag === \"\" || this.state.value.desc === \"\" || this.state.value.ds === \"\" || !this.state.value.tag || !this.state.value.desc || !this.state.value.ds) ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    Tags mínimos (2) requeridos para entrenar el modelo\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n\r\n\r\n                        <Input\r\n                            key={item.id + 10}\r\n                            placeholder={\"Ingrese el Nombre del Tag\"}\r\n                            fluid={true}\r\n                            rows={1}\r\n                            value={this.state.value.tag}\r\n                            onChange={(value) => this.handleOnChangeTag({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n                        <Select\r\n                            key={item.id + 30}\r\n                            placeholder={\"Seleccione el Data Source\"}\r\n                            fluid={true}\r\n                            //options={[{ value: 'mongo_results_dmh', text: 'mongo_results_dmh' }, { value: 'mongo_data_coord', text: 'mongo_data_coord' }, { value: 'mongo_data_pervsent', text: 'mongo_data_pervsent' }, { value: 'SGO3', text: 'SGO3' }]}\r\n                            options={this.state.datasources.data ? this.state.datasources.data : [{}]}\r\n                            value={this.state.value.ds}\r\n                            onChange={(value) => this.handleOnChangeDS({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n\r\n\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Select, Badge, Card, Popup } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} >&nbsp;</Badge>\r\n\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    {\r\n                                        item.label == \"Tipo\" ?\r\n                                            <Fragment>Tipo de Modelo</Fragment>\r\n                                            : \"X\"\r\n\r\n                                    }\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n\r\n                        <Select\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            options={[{ value: 'clustering', text: 'clustering' }]}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Select, Badge, Popup, Card } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (this.state.value !== \"\") {\r\n            var dato = await { key: this.props.idGrupo, id: 1, val: this.state.value }\r\n            this.handleOnChange(dato)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true}>&nbsp;</Badge>\r\n\r\n                        <Popup className=\"popup-theme-wrap\" element={item.label} position=\"right center\" on=\"hover\">\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    Criterio para escoger el modelo xgboost a utilizar (último, menor ruido, menor cantidad de clusters, etc)\r\n                                    <br />\r\n                                    {/* <a href=\"https://hdbscan.readthedocs.io/en/latest/parameter_selection.html#selecting-min-cluster-size\" target=\"_blank\">Mas Información</a> */}\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Popup>\r\n\r\n                        <Select\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            options={[{ value: 'last', text: 'last' }]}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Chart } from '@scuf/charts';\r\nimport { Slider } from '@scuf/common';\r\nimport \"@scuf/common/honeywell-dark/theme.css\";\r\nimport '@scuf/charts/honeywell-dark/theme.css'\r\n\r\nexport default class Gauge extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        if (!isNaN(dato.val)) {\r\n            this.setState({ value: dato.val });\r\n            this.props.onDato(dato);\r\n        }\r\n        else {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue == '' ? 0 : nvalue });\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n            <div>\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        <Chart showTooltips={false}>\r\n                            <Chart.Pane />\r\n                            <Chart.Gauge data={[{ y: value }]} useDial={true} dial={[{ backgroundColor: \"red\" }]}>\r\n                                <Chart.CenterBlock>\r\n                                    <span style={{ fontSize: '2rem' }}>{value < 40 ? \"Recarga\" : value > 60 ? \"Sobrecarga\" : \"Normal\"}</span>\r\n                                </Chart.CenterBlock>\r\n                            </Chart.Gauge>\r\n                            <Chart.YAxis variant=\"gauge\">\r\n                                <Chart.PlotBand from={0} to={39} variant=\"gauge\" color=\"red\" />\r\n                                <Chart.PlotBand from={40} to={60} variant=\"gauge\" color=\"green\" />\r\n                                <Chart.PlotBand from={61} to={100} variant=\"gauge\" color=\"red\" />\r\n                            </Chart.YAxis>\r\n                        </Chart>\r\n                        <Slider label=\"&nbsp;&nbsp;0\"\r\n                            min={0}\r\n                            max={100}\r\n                            value={this.state.value}\r\n                            onChange={value => {\r\n                                this.setState({ value });\r\n                            }}\r\n\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            fluid\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { DatePicker } from '@scuf/common';\r\nimport { LocalizationConfig } from '@scuf/localization';\r\n\r\n\r\nexport default class DTPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.activeElement.blur();\r\n    }\r\n\r\n\r\n    render() {\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <div id=\"blur\">\r\n                <LocalizationConfig languageCode={'es-CL'}>\r\n                    {this.props.items.map((item) => (\r\n                        <DatePicker\r\n                            className=\"abajo\"\r\n                            key={item.id}\r\n                            type=\"date\"\r\n                            helperText={item.label}\r\n                            closeOnDocumentClick={true}\r\n                            fluid={true}\r\n                            reserveSpace={true}\r\n                            displayFormat={\"DD-MM-YYYY\"}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            readOnly={false}\r\n                            disabled={false}\r\n                            showYearSelector={true}\r\n                        />\r\n\r\n                    ))}\r\n                </LocalizationConfig>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Table, Modal, Card, Popup } from '@scuf/common';\r\nimport RadioGroup from \"./miRadioGroup\";\r\nimport TextoArea from \"./miTextArea\"\r\nimport InputNumber from \"./miInputNumber\"\r\nimport InputText from \"./miInputText\"\r\nimport InputTextMCS from \"./miInputTextMCS\"\r\nimport InputTextDataRange from \"./miInputTextDataRange\"\r\nimport InputTag from \"./miInputTag\"\r\nimport InputTagMF from \"./miInputTagMF\"\r\nimport Selector from \"./miSelector\"\r\nimport SelectorRSC from \"./miSelector_run_serve_criteria\"\r\nimport Gauge from \"./miGauge\"\r\nimport DTPicker from \"./miDatePicker\"\r\n//import SubirArchivo from \"./miFileUpload\"\r\n\r\n\r\n\r\nfunction Dibuja(props) {\r\n\r\n    const dibujar = props.items;\r\n    if (dibujar.type === 'checkboxes') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/* <Table.Cell>{dibujar.label}</Table.Cell> */}\r\n                <Table.Cell>\r\n                    <Popup className=\"popup-theme-wrap\" element={dibujar.label} position=\"right center\" on=\"hover\">\r\n                        <Card>\r\n                            <Card.Content>\r\n                                {\r\n                                    dibujar.label == \"Imputación de datos faltantes\" ?\r\n                                        <Fragment>Completar valores Nulos del dataset usando técnicas de machine learning (KNNImputer)</Fragment>\r\n                                        :\r\n                                        dibujar.label == \"Limpieza de valores negativos\" ?\r\n                                            <Fragment>Eliminar valores negativos</Fragment>\r\n                                            :\r\n                                            dibujar.label == \"Remoción de valores outliers\" ?\r\n                                                <Fragment>Eliminar outliers del modelo</Fragment>\r\n                                                : \"X\"\r\n\r\n                                }\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </Popup>\r\n                </Table.Cell>\r\n                <Table.Cell textAlign=\"right\"><RadioGroup key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'textareas') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <TextoArea key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'numberareas') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <InputNumber key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputtext') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <InputText key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputtextMCS') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <InputTextMCS key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputtextDataRange') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/* <Table.Cell>{dibujar.label}</Table.Cell> */}\r\n                <Table.Cell> <InputTextDataRange key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputTag') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/* <Table.Cell>{dibujar.label}</Table.Cell> */}\r\n                <Table.Cell> <InputTag key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'inputTagMF') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/* <Table.Cell>{dibujar.label}</Table.Cell> */}\r\n                <Table.Cell> <InputTagMF key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'select') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <Selector key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'selectRSC') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <SelectorRSC key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n                <Table.Cell></Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'gauges') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <Gauge key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'datepickers') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell>{dibujar.label}</Table.Cell>\r\n                <Table.Cell textAlign=\"right\"> <DTPicker key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    } else if (dibujar.type === 'fileuploads') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/*<Table.Cell>{dibujar.label}</Table.Cell>*/}\r\n                {/* <Table.Cell textAlign=\"left\"> <SubirArchivo key={props.idGrupo} token={props.token} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell> */}\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else return <React.Fragment />\r\n\r\n\r\n}\r\n\r\n\r\nexport default class General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeName: \"\",\r\n            tagItem: { id: 1000, label: 'Tag1', type: 'inputTag', items: [{ id: 1, label: 'Tag', value: '' }] },\r\n            newTags: []\r\n\r\n\r\n        };\r\n    }\r\n\r\n\r\n\r\n    handleDato = (dato) => {\r\n        this.props.onhandleGeneralDato(dato);\r\n    };\r\n\r\n    handleRemoveDato = (dato) => {\r\n        this.props.onhandleGeneralRemoveDato(dato);\r\n    };\r\n\r\n\r\n    componentWillMount() {\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const Pagina = this.props.id\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Table key={Pagina}>\r\n                    <Table.Header>\r\n                        <Table.HeaderCell content={this.props.titulo} textAlign=\"left\" />\r\n                        {/* <Modal className=\"popup-theme-wrap\" closeIcon={true} trigger={<Table.HeaderCell content={this.props.titulo} textAlign=\"left\" />}>\r\n                            <Modal.Content>\r\n                                This modal is controlled via its trigger JSX and built in close methods. The onClose method is used when a user clicks the close icon or outside the modal\r\n                            </Modal.Content>\r\n                        </Modal> */}\r\n\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {\r\n\r\n                            this.props.items.map((item) => (\r\n                                <React.Fragment>\r\n                                    <Dibuja key={item.id} token={this.props.token} idGrupo={Pagina + \"-\" + item.id} items={item} onDato={this.handleDato} onRemoveDato={this.handleRemoveDato} />\r\n                                </React.Fragment>\r\n                            ))\r\n                        }\r\n                        {\r\n\r\n                            this.state.newTags.map((item) => (\r\n                                <React.Fragment>\r\n                                    <Dibuja key={item.id} token={0} idGrupo={Pagina + \"-\" + item.id} items={item} onDato={this.handleDato} onRemoveDato={this.handleRemoveDato} />\r\n                                </React.Fragment>\r\n                            ))\r\n                        }\r\n\r\n                    </Table.Body>\r\n                    <Table.Footer>\r\n                        <Table.Row align=\"left\">\r\n                            <Table.HeaderCell >\r\n\r\n                            </Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Footer>\r\n                </Table>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Header, Button, Notification, Card, Loader, Modal, Badge, Icon, Tooltip } from \"@scuf/common\";\r\nimport Grupos from \"./Grupos\";\r\nimport baseServices from '../../services/base.services';\r\n\r\nconst ReactToastify = require('react-toastify');\r\n\r\nconst config = require(\"../../config.json\");\r\n\r\n\r\n\r\nconst ToastNotification = ({ closeToast, Texto, Detalle }) => (\r\n    <Notification\r\n        className=\"toast-notification\"\r\n        severity=\"critical\"\r\n        onCloseClick={closeToast}\r\n        hasIcon={true}\r\n        title={Texto}\r\n        //detailsText=\"Todos los datos son obligatorios\"\r\n        detailsText={Detalle.replaceAll(',', \",\\n\")}\r\n        onDetailsClick={() => { }} //{() => alert('Debie ingresar todos los datos para continuar')}\r\n    />\r\n)\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            hidden: \"hidden\",\r\n            activePage: 0,\r\n            datos: [], //require(\"./Components/datos.json\"),\r\n            items: [],\r\n            respuestas: [],\r\n            apiBody: \"\",\r\n            modal: false,\r\n            modalFin: false,\r\n            Preguntas_Todas: [],\r\n            Preguntas_Respondidas: [],\r\n            Preguntas_Faltantes: [],\r\n            Situacion_Final: \"\",\r\n            Color_Situacion_Final: \"\",\r\n            MensajeAPI: \"\"\r\n        };\r\n        this.click_Next = this.click_Next.bind(this);\r\n        this.click_Prev = this.click_Prev.bind(this);\r\n        this.click_Send = this.click_Send.bind(this);\r\n        this.click_ModalSi = this.click_ModalSi.bind(this);\r\n        this.click_ModalNo = this.click_ModalNo.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.location.reload();\r\n    }\r\n\r\n    componentWillMount() {\r\n        // try {\r\n\r\n        //     axios.post(`${APIFormulario}`,\r\n        //         {\r\n        //             \"idTipo\": this.props.idTipo\r\n        //         },\r\n        //         { headers: headers })\r\n        //         .then((res) => {\r\n        //             const items = JSON.parse(res.data[0].JsonString)\r\n        //             this.setState({\r\n        //                 datos: items,\r\n        //                 isLoading: false\r\n        //             });\r\n        //         });\r\n\r\n        // } catch (e) {\r\n        //     console.log(e);\r\n        // }\r\n\r\n        const items = config\r\n        this.setState({\r\n            datos: items,\r\n            isLoading: false\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    click_Next() {\r\n\r\n        var Preguntas_Todas = []\r\n        this.state.datos[this.state.activePage].datos.map((item) => Preguntas_Todas.push(item.label))\r\n\r\n        let Preguntas_Faltantes = Preguntas_Todas.filter(Pregunta => !this.state.Preguntas_Respondidas.includes(Pregunta))\r\n\r\n        this.setState({\r\n            Preguntas_Todas: Preguntas_Todas,\r\n            Preguntas_Faltantes: Preguntas_Faltantes\r\n\r\n        });\r\n\r\n        const page = Number(this.state.datos[this.state.activePage].id)\r\n        const pageSize = this.state.datos[this.state.activePage].datos.length\r\n        var ndatos = 0\r\n        this.state.items.map((item) => parseInt(item.key.split(\"-\")[0]) === page ? ndatos = ndatos + 1 : null)\r\n\r\n\r\n        if (ndatos < pageSize) {\r\n            var mensaje\r\n            (pageSize - ndatos) === 1 ? mensaje = \"Falta un dato\" : mensaje = (\"Faltan \" + (pageSize - ndatos) + \" datos\")\r\n            ReactToastify.toast(<ToastNotification Detalle={JSON.stringify(Preguntas_Faltantes).replace('[', '').replace(']', '')} Texto={mensaje} closeToast={true} />)\r\n        }\r\n        else {\r\n\r\n            // if (this.state.activePage >= this.state.datos.length - 2) {\r\n            //     this.setState({ hidden: \"\" });\r\n            // } else { this.setState({ hidden: \"hidden\" }); }\r\n\r\n            if (this.state.activePage < this.state.datos.length - 1) {\r\n                this.setState({ activePage: this.state.activePage + 1 });\r\n                window.scrollTo(1, 1);\r\n            }\r\n            //else {\r\n            //    this.setState({ activePage: 0, hidden: \"\" });\r\n            //}\r\n        }\r\n\r\n        //this.state.datos[this.state.activePage + 1].titulo === 'TAGS' && this.setState({ hidden: \"\" });\r\n    }\r\n\r\n    click_Prev() {\r\n        const page = Number(this.state.datos[this.state.activePage].id)\r\n        //const pageSize = this.state.datos[this.state.activePage].datos.length\r\n        var ndatos = 0\r\n        this.state.items.map((item) => parseInt(item.key.split(\"-\")[0]) === page ? ndatos = ndatos + 1 : null)\r\n\r\n        //if (ndatos < pageSize) {\r\n        //    var mensaje\r\n        //    (pageSize - ndatos) === 1 ? mensaje = \"Falta un dato\" : mensaje = (\"Faltan \" + (pageSize - ndatos) + \" datos\")\r\n        //    ReactToastify.toast(<ToastNotification Texto={mensaje} closeToast={true} />)\r\n        //}\r\n        //else {\r\n        //    if (this.state.activePage > 0) {\r\n        //        this.setState({ activePage: this.state.activePage - 1 });\r\n        //    } else {\r\n        //        this.setState({ activePage: this.state.datos.length - 1 });\r\n        //    }\r\n        //    window.scrollTo(1, 1);\r\n        //}\r\n\r\n        if (this.state.activePage > 0) {\r\n            this.setState({ activePage: this.state.activePage - 1 });\r\n            window.scrollTo(1, 1);\r\n        }\r\n\r\n        this.setState({ hidden: \"hidden\" });\r\n\r\n\r\n    }\r\n\r\n\r\n    click_Send() {\r\n        this.setState({ modal: true })\r\n    }\r\n\r\n\r\n    postData = async () => {\r\n        try {\r\n            const bodypost = this.state.respuestas;\r\n            const url = 'models';\r\n            var response = await baseServices.postData(bodypost, url);\r\n            window.location.reload();\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n    click_ModalSi() {\r\n        try {\r\n            this.setState({ isLoading: true, modal: false });\r\n            this.postData();\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({\r\n                isLoading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    click_ModalNo() {\r\n        this.setState({ modal: false });\r\n    }\r\n\r\n\r\n    click_ModalFin() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    handleGeneralRemoveDato = (item) => {\r\n        //nitems: De los items filtro el key modificado (se elimina) y NO se concatena el nuevo item\r\n        const nitems = this.state.items.filter((c) => c.key !== item.key)\r\n\r\n\r\n        //nitems2: Mismo nitems, pero sin la columna key (para el envío a la BD)\r\n        var nitems2 = [];\r\n        nitems.map((nitem) => nitems2 = nitems2.concat([{ idPregunta: nitem.key.split(\"-\")[1], Respuesta: nitem.val }]))\r\n\r\n        //KeyPageFile: Para obtener el id de la página (0) y el id de la fila (1)\r\n        const keyPageFile = item.key.split(\"-\")\r\n\r\n        //ndatos: De todos los datos originales que vienen de la BD, filtro solo la hoja asociada al item modificado\r\n        var ndatos = this.state.datos.filter((c) => c.id === parseInt(keyPageFile[0]))\r\n\r\n        //ndatos2: De la hoja (ndatos) saco solamente el arreglo de datos (las filas)\r\n        var ndatos2 = []\r\n        ndatos.map((ndato) =>\r\n            ndatos2 = ndatos2.concat(ndato.datos)\r\n        )\r\n\r\n        //ndatos3: De todas las filas (ndatos2), saco solo la correspondiente al item modificado\r\n        var ndatos3 = ndatos2.filter((c) => c.id === parseInt(keyPageFile[1]))\r\n\r\n\r\n        //Con el filtro quita esta pregunt del array de preguntas espondidas\r\n        let Preguntas_Respondidas = this.state.Preguntas_Respondidas.filter(item => item !== ndatos3[0].label)\r\n        this.setState({\r\n            Preguntas_Respondidas: Preguntas_Respondidas\r\n        });\r\n\r\n\r\n\r\n        //ndatos4: De la fila (ndatos3) saco sus elementos. Si es un checkbox, recorro el radiogroup y le asigno el checked=1 al elemento correspondiente\r\n        var ndatos4 = []\r\n        ndatos3.map((ndato) => {\r\n            if (ndato.type === 'checkboxes') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.label === item.val ? ndato.value = 1 : ndato.value = 0)\r\n                //ndatos3.checkboxes = ndatos4\r\n\r\n            } else if (ndato.type === 'textareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'numberareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtext') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtextDataRange') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTag') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTagMF') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'select') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'selectRSC') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'gauges') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'datepickers') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'fileuploads') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            }\r\n            return null\r\n        })\r\n\r\n\r\n        this.setState({\r\n            items: nitems,\r\n            respuestas: nitems2\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    handleGeneralDato = (item) => {\r\n\r\n        //nitems: De los items filtro el key modificado (se elimina) y se concatena el nuevo item\r\n        const nitems = (this.state.items.filter((c) => c.key !== item.key)).concat(item)\r\n\r\n        //nitems2: Mismo nitems, pero sin la columna key (para el envío a la BD)\r\n        var nitems2 = [];\r\n        nitems.map((nitem) => nitems2 = nitems2.concat([{ idPregunta: nitem.key.split(\"-\")[1], Respuesta: nitem.val }]))\r\n\r\n        //KeyPageFile: Para obtener el id de la página (0) y el id de la fila (1)\r\n        const keyPageFile = item.key.split(\"-\")\r\n\r\n        //ndatos: De todos los datos originales que vienen de la BD, filtro solo la hoja asociada al item modificado\r\n        var ndatos = this.state.datos.filter((c) => c.id === parseInt(keyPageFile[0]))\r\n\r\n        //ndatos2: De la hoja (ndatos) saco solamente el arreglo de datos (las filas)\r\n        var ndatos2 = []\r\n        ndatos.map((ndato) =>\r\n            ndatos2 = ndatos2.concat(ndato.datos)\r\n        )\r\n\r\n        //ndatos3: De todas las filas (ndatos2), saco solo la correspondiente al item modificado\r\n        var ndatos3 = ndatos2.filter((c) => c.id === parseInt(keyPageFile[1]))\r\n        var Preguntas_Respondidas = this.state.Preguntas_Respondidas\r\n\r\n\r\n        //ndatos3[0].id > 99 && console.log(item.val);\r\n        //lleno el array con las preguntas respondidas para luego mostrar las faltantes\r\n        if (Preguntas_Respondidas.indexOf(ndatos3[0].label) === -1) {\r\n            Preguntas_Respondidas.push(ndatos3[0].label)\r\n            this.setState({ Preguntas_Respondidas: Preguntas_Respondidas });\r\n        }\r\n\r\n\r\n\r\n\r\n        //ndatos4: De la fila (ndatos3) saco sus elementos. Si es un checkbox, recorro el radiogroup y le asigno el checked=1 al elemento correspondiente\r\n        var ndatos4 = []\r\n        ndatos3.map((ndato) => {\r\n            if (ndato.type === 'checkboxes') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.label === item.val ? ndato.value = 1 : ndato.value = 0)\r\n                //ndatos3.checkboxes = ndatos4\r\n\r\n            } else if (ndato.type === 'textareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'numberareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtext') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputtextDataRange') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTag') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'inputTagMF') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'select') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'selectRSC') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'gauges') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'datepickers') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'fileuploads') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            }\r\n            return null\r\n        })\r\n\r\n\r\n        //Ahora ndatos4 corresponde a la fila en el formato \"datos\", por lo que hay que reemplazarla en el array de datos\r\n        //ndatos2.datos = ndatos3\r\n\r\n        //const apiBody = {\r\n        //    \"hashCode\": this.props.token,\r\n        //    \"idFormulario\": 1,\r\n        //    \"idPlanta\": this.props.idPlanta,\r\n        //    \"idUsuario\": this.props.idUsuario,\r\n        //    \"idVehiculo\": this.props.idVehiculo,\r\n        //    \"resultados\": nitems2\r\n        //}\r\n\r\n\r\n        this.setState({\r\n            items: nitems,\r\n            respuestas: nitems2\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleNewTag = () => {\r\n        var hojas = this.state.datos;\r\n        hojas.slice(-1);\r\n        var newTagsArray = this.state.datos[3].datos;\r\n        var tagsSize = newTagsArray.length;\r\n        var tagItem = {\r\n            \"id\": 10000 + tagsSize,\r\n            \"label\": \"Tag\",\r\n            \"type\": \"inputTag\",\r\n            \"items\": [\r\n                {\r\n                    \"id\": 1,\r\n                    \"label\": \"Tag\",\r\n                    \"value\": \"\"\r\n                }\r\n            ]\r\n        }\r\n\r\n        newTagsArray.push(tagItem)\r\n\r\n        var hojaTags = {\r\n            \"id\": 4,\r\n            \"titulo\": \"TAGS\",\r\n            \"datos\": newTagsArray\r\n        }\r\n\r\n        hojas.push(hojaTags)\r\n        this.setState({ datos: hojas })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header menu={false} logo={false} title={'Espere...'}>\r\n                    </Header>\r\n                    <Card>\r\n                        <Card.Header />\r\n                        <Card.Content>\r\n                            <Loader minHeight={400}>\r\n                                <div className=\"placeholder\" />\r\n                            </Loader>\r\n                        </Card.Content>\r\n                    </Card>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        else\r\n            return (\r\n\r\n\r\n                <React.Fragment>\r\n\r\n\r\n                    {/* {JSON.stringify(this.state.respuestas)}<br />\r\n                    {JSON.stringify(this.state.Preguntas_Respondidas)}<br />\r\n                    {JSON.stringify(this.state.Preguntas_Faltantes)} */}\r\n\r\n\r\n                    {this.renderModal()}\r\n                    {this.renderModalFin()}\r\n                    <table style={{ width: '50%' }}>\r\n                        <tr>\r\n                            <td colspan=\"3\">\r\n                                <Header menu={false} logo={false} title={'Crear Modelo'}>\r\n                                    <Header.Item>\r\n                                        <Icon name=\"close\" size=\"small\" root=\"common\" onClick={() => { this.setState({ isLoading: true, modal: false }); this.click_ModalFin(); }} />\r\n                                    </Header.Item>\r\n                                </Header>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\">\r\n\r\n                                <Grupos\r\n                                    key={1}\r\n                                    token={this.props.token}\r\n                                    id={this.state.datos[this.state.activePage].id}\r\n                                    titulo={this.state.datos[this.state.activePage].titulo === 'TAGS' ?\r\n                                        <Button type=\"secondary\"\r\n                                            icon=\"badge-plus\"\r\n                                            size=\"small\"\r\n                                            content=\"TAGS\"\r\n                                            iconPosition=\"right\" onClick={this.handleNewTag}>\r\n                                        </Button>\r\n                                        :\r\n                                        this.state.datos[this.state.activePage].titulo\r\n                                    }\r\n                                    items={this.state.datos[this.state.activePage].datos}\r\n                                    onhandleGeneralDato={this.handleGeneralDato}\r\n                                    onhandleGeneralRemoveDato={this.handleGeneralRemoveDato}\r\n                                />\r\n\r\n                            </td>\r\n                        </tr>\r\n                        <tr >\r\n                            <td>\r\n                                <Button type=\"primary\"\r\n                                    icon=\"caret-left\"\r\n                                    size=\"small\"\r\n                                    content=\"\"\r\n                                    iconPosition=\"left\" onClick={this.click_Prev} disabled={this.state.isLoading}>\r\n                                </Button>\r\n                            </td>\r\n                            <td style={{ textAlign: 'center' }}>\r\n                                {\r\n\r\n                                    this.state.datos[this.state.activePage].titulo === 'TAGS' ?\r\n                                        <Button\r\n                                            //className={this.state.hidden}\r\n                                            type=\"primary\"\r\n                                            loading={this.state.isLoading}\r\n                                            size=\"small\"\r\n                                            content=\"Terminar\"\r\n                                            iconPosition=\"right\" onClick={this.click_Send} disabled={this.state.isLoading}>\r\n                                        </Button>\r\n                                        :\r\n                                        <React.Fragment />\r\n                                }\r\n                            </td>\r\n\r\n                            <td style={{ textAlign: 'right' }}>\r\n                                <Button type=\"primary\"\r\n                                    icon=\"caret-right\"\r\n                                    size=\"small\"\r\n                                    content=\"\"\r\n                                    iconPosition=\"right\" onClick={this.click_Next} disabled={this.state.isLoading}>\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\"><span>&nbsp;&nbsp;</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\"><span>&nbsp;&nbsp;</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"3\"><span>&nbsp;&nbsp;</span></td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <div>\r\n                        <ReactToastify.ToastContainer\r\n                            hideProgressBar={false}\r\n                            closeOnClick={false}\r\n                            closeButton={false}\r\n                            newestOnTop={true}\r\n                            //position=\"bottom-right\"\r\n                            position=\"top-center\"\r\n                            autoClose={2500}\r\n                            toastClassName=\"toast-notification-wrap\"\r\n                        />\r\n                    </div>\r\n\r\n\r\n\r\n                </React.Fragment>\r\n\r\n            );\r\n\r\n    }\r\n\r\n\r\n    renderModal() {\r\n        return (\r\n            <Modal style={{ height: '150px', width: '300px', position: 'absolute', top: '20%', left: '50%', marginLeft: '-150px' }} closeIcon={true} size=\"mini\" onClose={() => this.setState({ modal: false })} open={this.state.modal} closeOnDimmerClick={false}>\r\n                <Modal.Header>\r\n                    ¿Está Seguro?\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                    <Button type=\"secondary\" size=\"small\" content=\"No\" onClick={this.click_ModalNo} disabled={this.state.isLoading} />\r\n                    <Button type=\"primary\" size=\"small\" content=\"Si\" onClick={this.click_ModalSi} disabled={this.state.isLoading} />\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n\r\n    }\r\n\r\n    renderModalFin() {\r\n        return (\r\n            <Modal className=\"popup-theme-wrap\" size=\"mini\" onClose={() => this.setState({ modalFin: false })} open={this.state.modalFin} closeOnDimmerClick={false}>\r\n                <Modal.Header>\r\n                    Formulario Enviado\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    Situacion Final:<br />{<Badge color={this.state.Color_Situacion_Final.split('\\n')[0]}>{this.state.Situacion_Final.split('\\n')[0]} </Badge>}<br />\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                    <Button type=\"secondary\" size=\"small\" content=\"Cerrar\" onClick={this.click_ModalFin} />\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    notify() {\r\n        ReactToastify.toast(<ToastNotification closeToast={true} />)\r\n    }\r\n\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Modal, InputLabel, Notification, Input } from '@scuf/common'\r\nimport { Icon, Button, Card, Header, Progress, KPIStatistic } from '@scuf/common';\r\nimport { DataTable } from '@scuf/datatable';\r\nimport { useDispatch } from 'react-redux'\r\nimport DataTabDataAPI from './DatTabDataAPI'\r\nimport baseServices from '../../../services/base.services';\r\n//import '@scuf/datatable/honeywell-dark/theme.css'\r\nimport { Fragment } from 'react';\r\nimport Formulario from '../../../components/form/Formulario'\r\nconst ReactToastify = require('react-toastify');\r\n\r\n\r\n\r\nconst DatTabModel = ({ url, body, title }) => {\r\n\r\n\r\n    //const dispatch = useDispatch();\r\n    const [state, setState] = useState([])\r\n    const [modal, setModal] = useState(false);\r\n    const [modalEdit, setModalEdit] = useState(false);\r\n    const [selectedRecord, setSelectedRecord] = useState({})\r\n    const [updatedValue, setUpdatedValue] = useState()\r\n    const [add, setAdd] = useState(false);\r\n    const [id, setId] = useState(0);\r\n    const [distModels, setDistModels] = useState([]);\r\n    const [selectedRow, setSelectedRow] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isEntrenando, setIsEntrenando] = useState(false)\r\n    const [avance, setAvance] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const getData = async () => {\r\n            try {\r\n                if (body) {\r\n                    var response = await baseServices.getData(body, url);\r\n                    if (response.data && response.data.length > 0) {\r\n                        let datos = DataTabDataAPI(response);\r\n\r\n                    \r\n                        setState(datos);\r\n\r\n                        const result = [];\r\n                        const map = new Map();\r\n                        for (const item of datos.datos) {\r\n                            if (!map.has(item.model)) {\r\n                                map.set(item.model, true);    // set any value to Map\r\n                                result.push({\r\n                                    model: item.model\r\n                                });\r\n                            }\r\n                        }\r\n                        \r\n                        setDistModels(result);\r\n\r\n                    }\r\n                } else { }\r\n\r\n            } catch (err) { }\r\n\r\n        }\r\n        getData();\r\n        //return { ...state, getData }\r\n\r\n    }, [])\r\n\r\n\r\n    const delData = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            if (body) {\r\n                let bodydel = '?id=' + selectedRow[0].model;\r\n                var response = await baseServices.delData(bodydel, url);\r\n                window.location.reload();\r\n            } else { }\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n    let handleDelete = () => {\r\n        var res;\r\n        //console.log(selectedRow[0].id)\r\n        selectedRow.length < 1\r\n            ?\r\n            res = ReactToastify.toast(<ToastNotification Tipo=\"Delete\" Texto={\"Seleccione un Modelo\"} closeToast={true} Severity=\"critical\" />)\r\n            :\r\n            res = ReactToastify.toast(<ToastNotification Tipo=\"Delete\" Texto={selectedRow.length == 1 ? \"¿Eliminar \" + selectedRow[0].model + \"?\" : \"¿Eliminar estos \" + selectedRow[0].conn_id + \" DataSources?\"} closeToast={true} Severity=\"information\" />)\r\n\r\n        return res\r\n    }\r\n\r\n\r\n    let handleAdd = () => {\r\n        var res;\r\n        setAdd(true);\r\n        return res\r\n    }\r\n\r\n    let handleEdit = () => {\r\n        var res;\r\n        setAdd(true);\r\n        return res\r\n    }\r\n\r\n    let handleEntrenar = () => {\r\n        var res;\r\n        selectedRow.length < 1\r\n            ?\r\n            res = ReactToastify.toast(<ToastNotification Tipo=\"Script_Init\" Texto={\"Seleccione un Modelo\"} closeToast={true} Severity=\"critical\" />)\r\n            :\r\n            res = ReactToastify.toast(<ToastNotification Tipo=\"Script_Init\" Texto={\"¿Entrenar \" + selectedRow[0].model + \"?\"} closeToast={true} Severity=\"information\" Model={selectedRow[0].model} />)\r\n\r\n        return res\r\n    }\r\n\r\n\r\n\r\n\r\n    const postEntrena = async (model) => {\r\n        try {\r\n            setIsEntrenando(true);\r\n            setIsLoading(true);\r\n            const bodypost = [\r\n                {\r\n                    \"Columna\": \"init_ingesta\",\r\n                    \"Valor\": \"1\"\r\n                },\r\n                {\r\n                    \"Columna\": \"init_train\",\r\n                    \"Valor\": \"1\"\r\n                },\r\n                {\r\n                    \"Columna\": \"init_serving\",\r\n                    \"Valor\": \"1\"\r\n                },\r\n                {\r\n                    \"Columna\": \"progress\",\r\n                    \"Valor\": \"0\"\r\n                },\r\n                {\r\n                    \"Columna\": \"model\",\r\n                    \"Valor\" : model\r\n                },\r\n            ];\r\n            const url = 'scriptinit';\r\n            //const url = 'scriptinittest';\r\n            var response = await baseServices.postData(bodypost, url);\r\n            getScriptInit();\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n\r\n\r\n    const getScriptInit = async () => {\r\n\r\n        try {\r\n            var response = await baseServices.getData('?id=*', 'scriptinit');\r\n            if (response.data && response.data.length > 0) {\r\n                //alert(response.data[0].progress.length);\r\n                //if (response.data[0].init_ingesta == \"1\" || response.data[0].init_train == \"1\" || response.data[0].init_serving == \"1\")\r\n                if (response.data[0].progress.length < 3) {\r\n                    setAvance(response.data[0].progress)\r\n                    setTimeout(() => {\r\n                        getScriptInit()\r\n                    }, 1000);\r\n                } else {\r\n                    setIsEntrenando(false);\r\n                    setIsLoading(false);\r\n                    var res = ReactToastify.toast(<ToastNotification Tipo=\"Info\" Texto={\"Modelo Entrenado\"} closeToast={true} Severity=\"information\" />)\r\n                }\r\n            }\r\n\r\n\r\n        } catch (err) {\r\n            setTimeout(() => {\r\n                getScriptInit()\r\n            }, 1000);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getData = async () => {\r\n        try {\r\n            if (body) {\r\n                var response = await baseServices.getData(body, url);\r\n                if (response.data && response.data.length > 0) {\r\n                    let datos = DataTabDataAPI(response);\r\n\r\n                    setState(datos);\r\n\r\n                    const result = [];\r\n                    const map = new Map();\r\n                    for (const item of datos.datos) {\r\n                        if (!map.has(item.model)) {\r\n                            map.set(item.model, true);    // set any value to Map\r\n                            result.push({\r\n                                model: item.model\r\n                            });\r\n                        }\r\n                    }\r\n                    //console.log({ result })\r\n                    //setDistModels(result);\r\n\r\n                }\r\n            } else { }\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n\r\n    const postUpdateModelo = async () => {\r\n        try {\r\n            //setIsEntrenando(true);\r\n            //setIsLoading(true);\r\n            const bodypost = [\r\n                {\r\n                    \"columna\": \"id_conf\",\r\n                    \"valor\": selectedRecord.data.id_conf\r\n                },\r\n                {\r\n                    \"columna\": \"value\",\r\n                    \"valor\": updatedValue\r\n                }\r\n            ];\r\n            const url = 'models';\r\n            var response = await baseServices.postData(bodypost, url);\r\n            getData();\r\n            //setIsLoading(false);\r\n\r\n        } catch (err) { }\r\n\r\n    }\r\n\r\n\r\n\r\n    const ToastNotification = ({ Tipo, closeToast,Texto, Severity, Model }) => (\r\n        Tipo == \"Info\"\r\n            ?\r\n            <Notification\r\n                className=\"toast-notification\"\r\n                severity={Severity}\r\n                onCloseClick={closeToast}\r\n                hasIcon={false}\r\n                title={Texto}\r\n                detailsText={<Button key={1} size=\"small\" content=\"OK\" onClick={closeToast} />}\r\n                onDetailsClick={closeToast}\r\n            />\r\n            :\r\n            Tipo == \"Delete\"\r\n                ?\r\n                Severity == \"critical\"\r\n                    ?\r\n                    <Notification\r\n                        className=\"toast-notification\"\r\n                        severity={Severity}\r\n                        onCloseClick={closeToast}\r\n                        hasIcon={false}\r\n                        title={Texto}\r\n                        detailsText={<Button key={1} size=\"small\" content=\"OK\" onClick={closeToast} />}\r\n                        onDetailsClick={closeToast}\r\n                    />\r\n                    :\r\n                    <Notification\r\n                        className=\"toast-notification\"\r\n                        severity={Severity}\r\n                        onCloseClick={closeToast}\r\n                        hasIcon={false}\r\n                        title={Texto}\r\n                        detailsText={<Button key={1} size=\"small\" content=\"Si\" onClick={closeToast} />}\r\n                        //detailsText=\"Eliminar\"\r\n                        onDetailsClick={() => { delData() }}\r\n                    />\r\n                :\r\n                Tipo == \"Script_Init\" ?\r\n                    Severity == \"critical\"\r\n                        ?\r\n                        <Notification\r\n                            className=\"toast-notification\"\r\n                            severity={Severity}\r\n                            onCloseClick={closeToast}\r\n                            hasIcon={false}\r\n                            title={Texto}\r\n                            detailsText={<Button key={1} size=\"small\" content=\"OK\" onClick={closeToast} />}\r\n                            onDetailsClick={closeToast}\r\n                        />\r\n                        :\r\n                        <Notification\r\n                            className=\"toast-notification\"\r\n                            severity={Severity}\r\n                            onCloseClick={closeToast}\r\n                            hasIcon={false}\r\n                            title={Texto}\r\n                            detailsText={<Button key={1} size=\"small\" content=\"Si\" onClick={closeToast} />}\r\n                            //detailsText=\"Eliminar\"\r\n                            onDetailsClick={() => { postEntrena(Model) }}\r\n                        />\r\n                    :\r\n                    <Fragment />\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n    const Item = DataTable.HeaderBar.Item;\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Fragment>\r\n                        <Header menu={false} logo={false} title={isEntrenando ? 'Entrenando Modelo... (' + avance + ')' : 'Eliminando Modelo...'}>\r\n                        </Header>\r\n                        <Card>\r\n                            <Card.Header />\r\n                            {/* <Progress percent={50} size=\"xlarge\" /> */}\r\n                            <Card.Content>\r\n                                {/* <Loader minHeight={400}>\r\n                                    <div className=\"placeholder\" />\r\n                                    <Progress percent={avance} circular={true} size='xlarge' />\r\n                                </Loader> */}\r\n                                <Progress percent={avance} circular={true} size='xlarge' />\r\n\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </Fragment>\r\n                    :\r\n                    add ?\r\n                        <Formulario />\r\n                        :\r\n                        state.datos ?\r\n                            modal ?\r\n\r\n                                <Modal closeIcon={true} onClose={() => { setModal(false); setModalEdit(false) }} open={modal} closeOnDimmerClick={false} closeOnDocumentClick={false}>\r\n                                    <Modal.Header>\r\n                                        {/* {updatedValue} */}\r\n                                        {distModels[id].model}\r\n                                    </Modal.Header>\r\n                                    <Modal.Content>\r\n                                        <Fragment>\r\n                                            <DataTable data={state.datos.filter(x => x.model == distModels[id].model)} rows={15} search={true}\r\n                                                scrollable={true} scrollHeight=\"600%\" reorderableColumns={true} resizableColumns={true}\r\n                                                //onRowClick={(data) => alert(`Fila: ${data.index}, id_conf: ${data.data.id ? JSON.stringify(data.data.id) : data.data.id_conf}`)}\r\n                                                onRowClick={(data) => { setSelectedRecord(data); setUpdatedValue(\"\"); setModalEdit(true) }}\r\n                                            // onCellClick={(data) => alert(JSON.stringify(data))}\r\n                                            >\r\n                                                {\r\n                                                    state.fields && state.fields.map((y, i) => (\r\n                                                        i > 0 && (y.field == 'attribute' || y.field == 'value' || y.field == 'id_conf') ?\r\n                                                            <DataTable.Column key={i} field={y.field} header={y.field} sortable={true} editable={true} editFieldType=\"text\" visible={false} />\r\n                                                            : <Fragment />\r\n                                                    ))\r\n                                                }\r\n                                                <DataTable.Pagination />\r\n\r\n                                            </DataTable>\r\n\r\n                                        </Fragment>\r\n                                    </Modal.Content>\r\n                                    <Modal.Footer>\r\n                                    </Modal.Footer>\r\n\r\n                                    {\r\n                                        modalEdit ?\r\n\r\n                                            <Notification\r\n                                                title={selectedRecord.data.attribute}\r\n                                                // tags={['Refinery', 'Pump']}\r\n                                                severity=\"information\"\r\n                                                detailsText=\"Guardar\"\r\n                                                onDetailsClick={() => postUpdateModelo()}\r\n                                                onCloseClick={() => setModalEdit(false)}>\r\n                                                <Input placeholder=\"Ingrese nuevo valor\" onChange={(data) => { setUpdatedValue(data); }} value={updatedValue} />\r\n                                                {/* {<br />}{JSON.stringify(selectedRecord.data)} */}\r\n                                            </Notification>\r\n\r\n                                            : <Fragment />\r\n                                    }\r\n                                </Modal>\r\n\r\n                                :\r\n                                <Fragment style=\"margin-bottom: 1000px !important\">\r\n                                    <InputLabel label={title} />\r\n                                    <DataTable\r\n                                     data={distModels} rows={10} search={true} selection={selectedRow} onSelectionChange={e => setSelectedRow(e)} selectionMode=\"single\"\r\n                                        scrollable={true} scrollHeight=\"600%\" reorderableColumns={true} resizableColumns={true}\r\n                                        onCellClick={(data) => { setModal(true); setId(data.rowIndex) }}\r\n                                    // onCellClick={(data) => { handleEdit(); setId(data.rowIndex) }}\r\n                                    >\r\n                                        <DataTable.HeaderBar>\r\n                                            <Item\r\n                                                content=\"Crear\"\r\n                                                icon={<Icon name=\"slidercontrols-plus\" size=\"small\" root=\"common\" />}\r\n                                                onClick={() => handleAdd()}\r\n                                            />\r\n                                            <Item\r\n                                                content=\"Eliminar\"\r\n                                                icon={<Icon name=\"delete\" size=\"small\" root=\"common\" />}\r\n                                                onClick={() => handleDelete()}\r\n                                            />\r\n                                            <Item\r\n                                                content=\"Entrenar\"\r\n                                                icon={<Icon name=\"badge-check\" size=\"small\" root=\"common\" />}\r\n                                                onClick={() => handleEntrenar()}\r\n                                            />\r\n                                        </DataTable.HeaderBar>\r\n                                        <DataTable.Column key={1} field=\"model\" header=\"Modelo\" sortable={true} editable={true} editFieldType=\"text\" />\r\n\r\n                                        <DataTable.Pagination />\r\n\r\n                                    </DataTable>\r\n                                    <br />\r\n\r\n\r\n                                    {/* <Checkbox label=\"Entrenar\" checked={Entrena} toggle={true} onChange={(checked) => postEntrena()} /><br />\r\n                                    <Checkbox label=\"Entrenar\" toggle={true} /><br />\r\n                                    <Checkbox label=\"Calcular\" toggle={true} /> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    <ReactToastify.ToastContainer\r\n                                        hideProgressBar={false}\r\n                                        closeOnClick={false}\r\n                                        closeButton={false}\r\n                                        newestOnTop={true}\r\n                                        position=\"top-center\"\r\n                                        autoClose={5000}\r\n                                        toastClassName=\"toast-notification-wrap\"\r\n                                    />\r\n\r\n                                </Fragment>\r\n\r\n                            : <Fragment>\r\n                                <InputLabel label={title} />\r\n                                <DataTable data={state.datos} >\r\n                                    <DataTable.HeaderBar>\r\n                                        <Item\r\n                                            content=\"Crear\"\r\n                                            icon={<Icon name=\"slidercontrols-plus\" size=\"small\" root=\"common\" />}\r\n                                            onClick={() => handleAdd()}\r\n                                        />\r\n                                        <Item\r\n                                            content=\"Eliminar\"\r\n                                            icon={<Icon name=\"delete\" size=\"small\" root=\"common\" />}\r\n                                        />\r\n\r\n                                    </DataTable.HeaderBar>\r\n                                    <DataTable.Column key={1} field=\"model\" header=\"Modelo\" />\r\n                                </DataTable>\r\n\r\n                            </Fragment>\r\n            }\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DatTabModel\r\n","import React from 'react'\nimport { Grid } from '@scuf/common'\n\n//import DatTabDS from '../../components/common/DatTab/DatTabDS'\nimport DatTabModels from '../../components/common/DatTab/DatTabModels'\n\n\n//import { isMobile } from \"react-device-detect\";\n//import { useDispatch } from 'react-redux'\n\nconst width = window.innerWidth;\n\n\n//let isMobile = (width <= 68);\n\n\nconst Models = () => {\n\n\n    return (\n        <>\n            <Grid >\n                <Grid.Row >\n                    <Grid.Column xsWidth='12' sWidth='12' mWidth='12' lWidth='12' xlWidth='12'>\n                        <div style={{ width: 0.8 * width, marginTop: '0px' }}>\n                            <DatTabModels\n                                url='models'\n                                body='?id=*'\n                                title='Modelos'\n                            />\n                        </div>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n\n        </>\n    )\n}\n\nexport default Models\n","import React from 'react'\nimport { Grid } from '@scuf/common'\n\n\nimport SubirArchivo from '../../components/fileupload/miFileUpload'\n\n\n\nconst width = window.innerWidth;\n\n\n//let isMobile = (width <= 68);\n\n\nconst Models = () => {\n\n\n    return (\n        <>\n            <SubirArchivo key={1} token={1} idGrupo={1} items={1} onDato={1} />\n\n        </>\n    )\n}\n\nexport default Models\n","import React, { useState, useEffect } from \"react\";\r\nimport { Loader, Select, InputLabel, Grid } from \"@scuf/common\";\r\nimport Plot from 'react-plotly.js';\r\nimport baseServices from '../../services/base.services';\r\nimport { GeneratedIdentifierFlags } from \"typescript\";\r\n\r\nconst stateOptions = [{ value: 'AL', text: 'Alabama' }, { value: 'GA', text: 'Georgia' }, { value: 'HI', text: 'Hawaii' }];\r\n\r\n\r\n\r\n// var datosPrueba =\r\n//     [\r\n//         {\r\n//             type: 'candlestick',\r\n//             decreasing: { line: { color: '#7F7F7F' } },\r\n//             increasing: { line: { color: '#17BECF' } },\r\n//             line: { color: 'rgba(31,119,180,1)' },\r\n\r\n//             \"x\": [\r\n//                 [\"Energia Promedio Molino SAG\", \"Energia Promedio Molino SAG\", \"Energia Promedio Molino SAG\", \"Energia Promedio Molino SAG\", \"Energia Promedio Molino SAG\", \"Energia Promedio Molino SAG\", \"Fino\", \"Fino\", \"Fino\", \"Fino\", \"Fino\", \"Fino\", \"P80 Promedio\", \"P80 Promedio\", \"P80 Promedio\", \"P80 Promedio\", \"P80 Promedio\", \"P80 Promedio\", \"Pebbles Chancados\", \"Pebbles Chancados\", \"Pebbles Chancados\", \"Pebbles Chancados\", \"Pebbles Chancados\", \"Pebbles Chancados\", \"Potencia Promedio Molino Bolas\", \"Potencia Promedio Molino Bolas\", \"Potencia Promedio Molino Bolas\", \"Potencia Promedio Molino Bolas\", \"Potencia Promedio Molino Bolas\", \"Potencia Promedio Molino Bolas\", \"Torque Espesador de Relave 1\", \"Torque Espesador de Relave 1\", \"Torque Espesador de Relave 1\", \"Torque Espesador de Relave 1\", \"Torque Espesador de Relave 1\", \"Torque Espesador de Relave 1\", \"Torque Molino SAG\", \"Torque Molino SAG\", \"Torque Molino SAG\", \"Torque Molino SAG\", \"Torque Molino SAG\", \"Torque Molino SAG\"],\r\n//                 [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\"]\r\n//             ],\r\n//             \"low\": [-1.77613037420865, -3.6231885769037633, -0.7285531721353709, -1.5234164717820984, 0, 0, -2.340943652924366, -10.200971665299672, -0.9045024469857821, -1.3893538693702494, 0, 0, -1.7445574394707735, -1.6406914963493442, -3.9779584327653428, -1.279883438504826, 0, 0, -4.267776741878903, -0.5972775311152563, -0.5976872774685824, -0.5977300063271686, -7.264210482072222e-17, -7.264210482072222e-17, 0.056549426612428566, -3.4715753600082686, -1.728475290502916, 0.2321284755596002, 0, 0, -2.165249784312847, -2.1856538515582096, -1.3061346578652364, -2.1854884165799855, -3.994123910587309e-16, -3.994123910587309e-16, -1.3208883606522737, -4.514074208634906, -0.9231500440708533, -1.324444666150678, -9.624518754149564e-16, -9.624518754149564e-16],\r\n//             \"open\": [-0.31181421164423895, -3.6231885769037633, 0.2764799526280897, -0.396783669412846, 0, 0, -0.7266312462027925, -4.51822589408461, 0.10058880372464256, -0.09489264634987639, 0, 0, -0.47957087543990656, -1.6406914963493442, -0.6951916398268877, -0.2853620591189372, 0, 0, -0.5953537800205497, -0.5963197776965782, -0.5963197776965782, -0.5963197776965782, -7.264210482072222e-17, -7.264210482072222e-17, 0.42806791593558813, -3.4715753600082686, -1.4926897373942671, 0.5032800987973167, 0, 0, -0.5762605421778828, -1.9714872557574534, 0.08313599443659772, -0.5757240846836877, -3.994123910587309e-16, -3.994123910587309e-16, -0.11329889132066619, -4.514074208634906, -0.30252110953891553, -0.19715879748231338, -9.624518754149564e-16, -9.624518754149564e-16],\r\n//             \"close\": [0.6643965633987019, -3.6231885769037633, 0.9465020358037299, 0.354304865499989, 0, 0, 0.34957702494492293, -0.7297287132745678, 0.7706496375315923, 0.7680815023303722, 0, 0, 0.3637535005806714, -1.6406914963493442, 1.4933195554654157, 0.3776521938049888, 0, 0, 1.8529281945516858, -0.5956812754174594, -0.5954081111819087, -0.5953796252761846, -7.264210482072222e-17, -7.264210482072222e-17, 0.6757469088176945, -3.4715753600082686, -1.335499368655168, 0.6840478476224611, 0, 0, 0.48306561924542646, -1.828709525223616, 1.0093164293044872, 0.49745213658051063, -3.994123910587309e-16, -3.994123910587309e-16, 0.6917607549004055, -4.514074208634906, 0.1112315134823763, 0.554365114963263, -9.624518754149564e-16, -9.624518754149564e-16],\r\n//             \"high\": [2.128712725963113, -3.6231885769037633, 1.9515351605671905, 1.4809376678692414, 0, 0, 1.9638894316664963, 4.953017057940495, 1.775740888242017, 2.0625427253507453, 0, 0, 1.6287400646115382, -1.6406914963493442, 4.7760863484038705, 1.372173573190878, 0, 0, 5.525351156410039, -0.5947235219987812, -0.5940406114099046, -0.5939693966455942, -7.264210482072222e-17, -7.264210482072222e-17, 1.047265398140854, -3.4715753600082686, -1.0997138155465191, 0.9551994708601776, 0, 0, 2.0720548613803906, -1.6145429294228602, 2.3985870816063213, 2.107216468476808, -3.994123910587309e-16, -3.994123910587309e-16, 1.8993502242320128, -4.514074208634906, 0.731860448014314, 1.6816509836316276, -9.624518754149564e-16, -9.624518754149564e-16]\r\n\r\n//         }\r\n//     ]\r\n\r\n\r\nvar layout = {\r\n    plot_bgcolor: '#202020',\r\n    paper_bgcolor: '#202020',\r\n    width: 400,\r\n    height: 400,\r\n    title: {\r\n        text: '',\r\n        font: {\r\n            //family: 'Courier New, monospace',\r\n            size: 20,\r\n            color: '#e0e0e0'\r\n        },\r\n        xref: 'paper',\r\n        x: 0.5,\r\n        y: 0.99\r\n    },\r\n    dragmode: 'zoom',\r\n    // margin: {\r\n    //     r: 10,\r\n    //     t: 25,\r\n    //     b: 40,\r\n    //     l: 60\r\n    // },\r\n    showlegend: false,\r\n    linewidth: 10,\r\n    xaxis: {\r\n        autorange: true,\r\n        showdividers: true,\r\n        dividercolor: '#e0e0e0',\r\n        dividerwidth: 1,\r\n        tickson: \"boundaries\",\r\n        ticklen: 15,\r\n        tickcolor: \"#505050\",\r\n        tickfont: {\r\n            size: 12,\r\n            color: '#e0e0e0'\r\n        },\r\n        type: 'multicategory',\r\n        rangeslider: {\r\n            visible: false\r\n        }\r\n    },\r\n    yaxis: {\r\n        autorange: true,\r\n        tickfont: {\r\n            size: 14,\r\n            color: '#e0e0e0'\r\n        },\r\n        type: 'linear'\r\n    }\r\n};\r\n\r\n\r\nconst url = 'modos';\r\nconst body = '?id=bplot';\r\nconst bodyModels = '?id=models'\r\n\r\nconst BPlot = () => {\r\n\r\n    const [state, setState] = useState({ hidden: \"hidden\", showplot: false })\r\n    const [models, setModels] = useState({ models: [] });\r\n\r\n\r\n    useEffect(() => {\r\n        const getModels = async () => {\r\n            try {\r\n                var response = await baseServices.getData(bodyModels, url);\r\n                if (response.data && response.data.length > 0) {\r\n                    setModels({ models: response.data, texto: \"-\" })\r\n                }\r\n\r\n            } catch (err) {\r\n                setTimeout(() => {\r\n                    getModels()\r\n                }, 15000);\r\n\r\n            }\r\n\r\n        }\r\n        getModels();\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    function getDatos(modelo) {\r\n        const getData = async () => {\r\n            setState({ dimensions: '', hidden: \"\", width: window.innerWidth })\r\n            const bodyplot = body + \";\" + modelo\r\n\r\n            try {\r\n                if (bodyplot) {\r\n                    var response = await baseServices.getData(bodyplot, url);\r\n                    if (response.data && response.data.length > 0) {\r\n                        setState({ API: response.data, hidden: \"hidden\", showplot: true })\r\n                        console.log(response.data)\r\n\r\n                    }\r\n                } else {\r\n                }\r\n\r\n            } catch (err) {\r\n                setTimeout(() => {\r\n                    getData()\r\n                }, 15000);\r\n\r\n            }\r\n\r\n        }\r\n        return getData();\r\n    }\r\n\r\n\r\n    /*\r\n    var datos = state.API &&\r\n        [\r\n            {\r\n                type: 'candlestick',\r\n                decreasing: { line: { color: '#7F7F7F' } },\r\n                increasing: { line: { color: '#17BECF' } },\r\n                line: { color: 'rgba(31,119,180,1)' },\r\n                x: [state.API[0].x1, state.API[0].x2],\r\n                low: state.API[0].low,\r\n                open: state.API[0].open,\r\n                close: state.API[0].close,\r\n                high: state.API[0].high\r\n            }\r\n        ];\r\n*/\r\n\r\n    var datos = state.API &&\r\n        [\r\n            {\r\n                type: 'candlestick',\r\n                decreasing: { line: { color: '#7F7F7F' } },\r\n                increasing: { line: { color: '#17BECF' } },\r\n                line: { color: 'rgba(31,119,180,1)' },\r\n                x: [state.API[0].x1, state.API[0].x2],\r\n                low: state.API[0].low,\r\n                open: state.API[0].open,\r\n                close: state.API[0].close,\r\n                high: state.API[0].high\r\n            }\r\n        ];\r\n\r\n\r\n\r\n    var datos_features = state.API && new Set(state.API[0].x1);\r\n\r\n    var total_clusters = state.API && Array.from(new Set(state.API[0].x2));\r\n\r\n    //console.log(datos);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={state.hidden}>\r\n                <Loader text=\"Abriendo...\" minHeight={400}>\r\n                </Loader>\r\n            </div>\r\n            {/* <InputLabel label={JSON.stringify(state.dimensions[0].array_to_json)} /> */}\r\n            <Select placeholder=\"Seleccione un Modelo\" options={models.models} onChange={(value) => getDatos(value)} />\r\n\r\n            <Grid.Row style={{paddingTop: '50px'}}>\r\n\r\n                {state.showplot && Array.from(datos_features).map((x, i) =>\r\n\r\n                    <>\r\n                        <p hidden>{i *= (Math.max(...total_clusters) + 1)}</p>\r\n                        \r\n                        <Grid.Column width={5}>\r\n\r\n\r\n                            <Plot\r\n                                //data={datosPrueba}\r\n                                data={[\r\n                                    {\r\n                                        type: 'candlestick',\r\n                                        decreasing: { line: { color: '#7F7F7F' } },\r\n                                        increasing: { line: { color: '#17BECF' } },\r\n                                        line: { color: 'rgba(214,214,214)' },\r\n                                        x: [Array(Math.max(...total_clusters) + 1).fill('Clusters'), total_clusters],\r\n                                        low: state.API[0].low.slice(i, i+(Math.max(...total_clusters) + 1)),\r\n                                        open: state.API[0].open.slice(i, i+(Math.max(...total_clusters) + 1)),\r\n                                        close: state.API[0].close.slice(i, i+(Math.max(...total_clusters) + 1)),\r\n                                        high: state.API[0].high.slice(i, i+(Math.max(...total_clusters) + 1)),\r\n\r\n                                    }\r\n                                ]}\r\n                                layout={{\r\n                                    plot_bgcolor: '#202020',\r\n                                    paper_bgcolor: '#202020',\r\n                                    width: 500,\r\n                                    height: 400,\r\n                                    title: {\r\n                                        text: x,\r\n                                        font: {\r\n                                            //family: 'Courier New, monospace',\r\n                                            size: 20,\r\n                                            color: '#e0e0e0'\r\n                                        },\r\n                                        xref: 'paper',\r\n                                        x: 0.5,\r\n                                        y: 0.99\r\n                                    },\r\n                                    dragmode: 'zoom',\r\n                                    // margin: {\r\n                                    //     r: 10,\r\n                                    //     t: 25,\r\n                                    //     b: 40,\r\n                                    //     l: 60\r\n                                    // },\r\n                                    showlegend: false,\r\n                                    linewidth: 10,\r\n                                    xaxis: {\r\n                                        autorange: true,\r\n                                        gridcolor: '#464646',\r\n                                        showdividers: true,\r\n                                        dividercolor: '#e0e0e0',\r\n                                        dividerwidth: 1,\r\n                                        tickson: \"boundaries\",\r\n                                        ticklen: 15,\r\n                                        tickcolor: \"#505050\",\r\n                                        tickfont: {\r\n                                            size: 12,\r\n                                            color: '#e0e0e0'\r\n                                        },\r\n                                        type: 'multicategory',\r\n                                        rangeslider: {\r\n                                            visible: false\r\n                                        }\r\n                                    },\r\n                                    yaxis: {\r\n                                        autorange: true,\r\n                                        gridcolor: '#464646',\r\n                                        tickfont: {\r\n                                            size: 14,\r\n                                            color: '#e0e0e0'\r\n                                        },\r\n                                        type: 'linear'\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Grid.Column>\r\n\r\n                    </>\r\n                )\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n            </Grid.Row>\r\n\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default BPlot;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Loader, Select, InputLabel } from \"@scuf/common\";\r\nimport Plot from 'react-plotly.js';\r\nimport baseServices from '../../services/base.services';\r\nimport { getJSDocDeprecatedTag } from \"typescript\";\r\n\r\nconst stateOptions = [{ value: 'AL', text: 'Alabama' }, { value: 'GA', text: 'Georgia' }, { value: 'HI', text: 'Hawaii' }];\r\n\r\nconst url = 'modos';\r\nconst body = '?id=pplot';\r\nconst bodyModels = '?id=models'\r\n\r\n\r\nconst PPlot = () => {\r\n\r\n    const [state, setState] = useState({ dimensions: '', hidden: \"hidden\", showplot: false })\r\n    const [models, setModels] = useState({ models: [] });\r\n    const [seleccionado, setSeleccionado] = useState({ texto: \"-\" })\r\n\r\n    useEffect(() => {\r\n        const getModels = async () => {\r\n            try {\r\n                var response = await baseServices.getData(bodyModels, url);\r\n                if (response.data && response.data.length > 0) {\r\n                    setModels({ models: response.data, texto: \"-\" })\r\n                }\r\n\r\n            } catch (err) {\r\n                setTimeout(() => {\r\n                    getModels()\r\n                }, 15000);\r\n\r\n            }\r\n\r\n        }\r\n        getModels();\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    function getDatos(modelo) {\r\n        const getData = async () => {\r\n            setState({ dimensions: '', hidden: \"\", width: window.innerWidth })\r\n            const bodypplot = body + \";\" + modelo\r\n\r\n            try {\r\n                if (bodypplot) {\r\n                    var response = await baseServices.getData(bodypplot, url);\r\n                    if (response.data && response.data.length > 0) {\r\n                        setState({ dimensions: response.data, hidden: \"hidden\", width: window.innerWidth, showplot: true })\r\n                        setSeleccionado({ texto: bodypplot })\r\n                    }\r\n                } else {\r\n                }\r\n\r\n            } catch (err) {\r\n                setTimeout(() => {\r\n                    getData()\r\n                }, 15000);\r\n\r\n            }\r\n\r\n        }\r\n        return getData();\r\n    }\r\n\r\n\r\n\r\n    var datos = {\r\n        type: 'parcoords',\r\n        labelfont: { color: '#e0e0e0', size: 14 },\r\n        rangefont: { color: '#202020', size: 12 },\r\n        tickfont: { color: '#e0e0e0', size: 12 },\r\n        dimensions: state.dimensions && state.dimensions[0].array_to_json\r\n        // [\r\n        //     {\r\n        //         label: 'Tag 1',\r\n        //         values: [10, 40, 30]\r\n        //     }, {\r\n        //         label: 'Tag 2',\r\n        //         values: [3, 1.5, 4]\r\n        //     }, {\r\n        //         label: 'Tag 3',\r\n        //         values: [2, 4, 4]\r\n        //     }, {\r\n        //         label: 'Tag 4',\r\n        //         values: [4, 2, 3]\r\n        //     }\r\n        // ]\r\n    };\r\n\r\n    var layout = {\r\n\r\n        width: state.width * 0.85,\r\n        height: 700,\r\n        title: {\r\n            text: 'Parallel Plot',\r\n            font: {\r\n                //family: 'Courier New, monospace',\r\n                size: 20,\r\n                color: '#e0e0e0'\r\n            },\r\n            xref: 'paper',\r\n            x: 0.5,\r\n            y: 0.99\r\n        },\r\n        plot_bgcolor: '#202020',\r\n        paper_bgcolor: '#202020',\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={state.hidden}>\r\n                <Loader text=\"Abriendo...\" minHeight={400}>\r\n                </Loader>\r\n            </div>\r\n            {/* <InputLabel label={JSON.stringify(seleccionado.texto)} /> */}\r\n\r\n            <Select placeholder=\"Seleccione un Modelo\" options={models.models} onChange={(value) => getDatos(value)} />\r\n            {state.showplot &&\r\n                <Plot\r\n                    data={[datos]}\r\n                    layout={layout}\r\n                />\r\n            }\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default PPlot;\r\n","\nconst LineData = () => {\n\n    var DatosJson = [\n        {\n            \"x\": \"1630085940000\",\n            \"data\": {\n                \"Tonelaje SAG\": 1847.1484375,\n                \"fino\": 46.539911603927614,\n                \"pebbles sin chancar\": 379.1733062744141,\n                \"pebbles chancados\": 0.011264228308573331\n            }\n        },\n        {\n            \"x\": \"1630097940000\",\n            \"data\": {\n                \"Tonelaje SAG\": 1996.423671875,\n                \"fino\": 60.92067874908447,\n                \"pebbles sin chancar\": 37.0124820465222,\n                \"pebbles chancados\": 268.9803950620699\n            }\n        },\n        {\n            \"x\": \"1630109940000\",\n            \"data\": {\n                \"Tonelaje SAG\": 2179.5062255859375,\n                \"fino\": 59.088633937835695,\n                \"pebbles sin chancar\": 44.4762366797775,\n                \"pebbles chancados\": 229.75661102294922\n            }\n        },\n        {\n            \"x\": \"1630121940000\",\n            \"data\": {\n                \"Tonelaje SAG\": 2054.4419555664062,\n                \"fino\": 59.75080106735229,\n                \"pebbles sin chancar\": 87.59740342922508,\n                \"pebbles chancados\": 267.8889735460281\n            }\n        },\n        {\n            \"x\": \"1630133940000\",\n            \"data\": {\n                \"Tonelaje SAG\": 2031.5079010009765,\n                \"fino\": 63.30800699234009,\n                \"pebbles sin chancar\": 4.874214052259922,\n                \"pebbles chancados\": 344.230507349968\n            }\n        }\n    ]\n\n\n    const datosLine = []\n    const uniqueSeries = []\n\n    //Obtendo los array con las series. Solo 1 registro por serie y por (uniqueSeries)\n    const PrimerItem = DatosJson[0].data\n    Object.keys(PrimerItem).map((key, i) => (\n        uniqueSeries.push(key)\n    ))\n    console.log(uniqueSeries)\n\n    // recorro el array con las distintas series y luego recorro los datos del API para crear el array datosSeries\n    uniqueSeries.map((f, j) => {\n        const datosSerie = []\n        for (let index = 0; index < DatosJson.length; index++) {\n            const element = DatosJson[index];\n            //console.log(element);\n            datosSerie.push([parseFloat(element.x), element.data[f]]);\n            //console.log(f, element.data[f])\n        }\n\n        console.log(datosSerie)\n\n        datosLine.push(\n            {\n                datos: datosSerie,\n                name: uniqueSeries[j]\n            }\n        )\n    }\n    )\n\n    return datosLine\n\n\n\n\n    /*\n        var exportVar = []\n    \n    \n    \n        var date = new Date();\n        var now_utc = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(),\n            date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n    \n    \n        for (let y = 0; y < randomSeries.length; y++) {\n            exportVar.push(\n                {\n                    name: randomSeries[y],\n                    datos: new Array(5).fill({}).map((e, i) => ([now_utc - (1000 * 60 * 60 * (randomSeries.length - i)), Math.random() + 5]))\n                }\n            )\n        }\n    \n        return exportVar\n    */\n\n}\n\n\n\nexport default LineData\n\n\n\n\n","\nconst LineDataAPI = (response) => {\n\n    const DatosJson = response.data\n    const datosLine = []\n    const uniqueSeries = []\n\n    //Obtendo los array con las series. Solo 1 registro por serie y por (uniqueSeries)\n    const PrimerItem = DatosJson[0].data\n    Object.keys(PrimerItem).map((key, i) => (\n        uniqueSeries.push(key)\n    ))\n    //console.log(uniqueSeries)\n\n    // recorro el array con las distintas series y luego recorro los datos del API para crear el array datosSeries\n    uniqueSeries.map((f, j) => {\n        const datosSerie = []\n        for (let index = 0; index < DatosJson.length; index++) {\n            const element = DatosJson[index];\n            //console.log(element);\n            datosSerie.push([parseFloat(element.x), element.data[f]]);\n            //console.log(f, element.data[f])\n        }\n\n        //console.log(datosSerie)\n\n        datosLine.push(\n            {\n                datos: datosSerie,\n                name: uniqueSeries[j]\n            }\n        )\n    }\n    )\n\n    return datosLine\n}\n\nexport default LineDataAPI\n\n\n\n\n","import React, { useState, useEffect } from 'react'\r\nimport { TimeSeries } from '@scuf/charts'\r\nimport { Modal, Badge, InputLabel, Loader, Grid } from '@scuf/common'\r\n//import { useDispatch } from 'react-redux'\r\nimport LineData2 from './LineData2'\r\nimport LineDataAPI2 from './LineDataAPI2'\r\nimport baseServices from '../../../services/base.services';\r\nimport './custom.css' \r\n\r\n//require('../../../../node_modules/highcharts/modules/exporting')\r\n\r\n//import Highcharts from 'highcharts';\r\n//import HighchartsReact from 'highcharts-react-official';\r\n\r\n//import { startLineChart } from '../../../actions/entryDataChart'\r\n// import TitlePage from '../../../components/TitlePage/TitlePage';\r\n\r\n\r\nconst Line = ({ url, body, yAxisTitle, titleCard, randomSeries }) => {\r\n\r\n    var date = new Date();\r\n    var last24_utc = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(),\r\n        date.getUTCHours() - 24, date.getUTCMinutes(), date.getUTCSeconds());\r\n\r\n    //const dispatch = useDispatch();\r\n    const [state, setState] = useState([])\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const colors = ['rgb(140, 137, 136, 0.3)','rgb(77, 111, 171, 0.3)', 'rgb(218, 130, 79, 0.3)', 'rgb(85, 166, 101, 0.3)', 'rgb(195, 76, 80, 0.3)','rgb(255, 234, 93, 0.3)']\r\n \r\n    useEffect(() => {\r\n\r\n\r\n        const getData = async () => {\r\n\r\n            try {\r\n                if (body) {\r\n                    var response = await baseServices.getData(body, url);\r\n                    if (response.data && response.data.length > 0) {\r\n                        //dispatch(startLineChart(response.data[0]))                    \r\n\r\n                        setState({ line: LineDataAPI2(response), response: response.data, hidden: \"hidden\" })\r\n\r\n\r\n                        setTimeout(() => {\r\n                            getData()\r\n                        }, 150000);\r\n\r\n                    }\r\n                } else {\r\n                    setState({ line: LineData2(randomSeries) })\r\n                    //dispatch(startLineChart('dummy data'))\r\n                    setTimeout(() => {\r\n                        getData()\r\n                    }, 150000);\r\n                }\r\n\r\n            } catch (err) {\r\n                setTimeout(() => {\r\n                    getData()\r\n                }, 15000);\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        getData()\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n\r\n                <React.Fragment>\r\n                    {\r\n                        modal ?\r\n                            <Modal size=\"fullscreen\" closeIcon={true} onClose={() => setModal(false)} open={modal} closeOnDimmerClick={false} closeOnDocumentClick={false} >\r\n                                <Modal.Header>\r\n                                    {titleCard}\r\n                                </Modal.Header>\r\n                                <Modal.Content>\r\n                                    <TimeSeries\r\n                                        height=\"480\"\r\n                                        showRangeSelector={true}\r\n                                        showScrollbar={false}\r\n                                        showNavigator={true}\r\n                                        zoom=\"xy\"\r\n                                    >\r\n                                        {\r\n                                            state.line && state.line.map((y, i) => (\r\n                                                <TimeSeries.Line spline={true} key={i} name={y.name} data={y.datos} />\r\n                                            ))\r\n                                        }\r\n\r\n                                        {/* <TimeSeries.Title onClick={() => setState({ open: true, line: state.line })} className='m-0' text={titleCard} align='left' /> */}\r\n                                        <TimeSeries.Legend enabled={true} position='right middle' itemSpacing='small' layout='Vertical' itemStyle={{ \"color\": \"#E0E0E0\", \"cursor\": \"pointer\", \"fontSize\": \"10px\", \"fontWeight\": \"bold\", \"textOverflow\": \"ellipsis\" }} />\r\n\r\n                                        <TimeSeries.XAxis>\r\n                                            {\r\n                                                state.response && state.response.map((y, i) => (\r\n                                                    y.cluster >= 0 && <TimeSeries.PlotBand key={i} from={y.x} to={y.hasta} color=\"#939393\" />\r\n                                                ))\r\n                                            }\r\n                                        </TimeSeries.XAxis>\r\n                                        <TimeSeries.YAxis tickAmount={6} showGridLines={false} top=\"0%\" height=\"100%\" offset={-10} title={{ text: yAxisTitle }} labels={{ format: '' }} />\r\n\r\n\r\n                                    </TimeSeries>\r\n                                    {\r\n                                        state.response ?\r\n                                            <React.Fragment><br />Clusterer:<br />\r\n                                                {JSON.stringify(state.response).includes('\"cluster\":0') && <Badge color=\"grey\">0</Badge>}\r\n                                                {JSON.stringify(state.response).includes('\"cluster\":1') && <Badge color=\"grey\">1</Badge>}\r\n                                                {JSON.stringify(state.response).includes('\"cluster\":2') && <Badge color=\"grey\">2</Badge>}\r\n                                                {JSON.stringify(state.response).includes('\"cluster\":3') && <Badge color=\"grey\">3</Badge>}\r\n                                                {JSON.stringify(state.response).includes('\"cluster\":4') && <Badge color=\"grey\">4</Badge>}\r\n                                                {JSON.stringify(state.response).includes('\"cluster\":5') && <Badge color=\"grey\">5</Badge>}\r\n                                            </React.Fragment>\r\n                                            : <React.Fragment />\r\n                                    }\r\n                                </Modal.Content>\r\n                                <Modal.Footer>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                            :\r\n                            <div style={{ marginTop: \"-1px\" }} >\r\n                                <div className={state.hidden}>\r\n                                    <Loader text=\"Abriendo...\" minHeight={400}>\r\n                                    </Loader>\r\n                                </div>\r\n                                <InputLabel label={titleCard} onClick={() => setModal(true)} />\r\n                                <TimeSeries\r\n                                    showRangeSelector={false}\r\n                                    showScrollbar={false}\r\n                                    showNavigator={false}\r\n                                    height={460}\r\n                                >\r\n                                    {\r\n                                        state.line && state.line.map((y, i) => (\r\n                                            <TimeSeries.Line spline={true} key={i} name={y.name} data={y.datos} />\r\n                                        ))\r\n                                    }\r\n\r\n                                    {/* <TimeSeries.Title className='m-0' text={titleCard} align='left' /> */}\r\n                                    <TimeSeries.Legend enabled={true} position='right middle' itemSpacing='small' layout='Vertical' itemStyle={{ \"color\": \"#E0E0E0\", \"cursor\": \"pointer\", \"fontSize\": \"10px\", \"fontWeight\": \"bold\", \"textOverflow\": \"ellipsis\" }} />\r\n                                    <TimeSeries.XAxis>\r\n                                        {\r\n                                            state.response && state.response.map((y, i) => (\r\n                                                y.cluster >= 0 && <TimeSeries.PlotBand key={i} from={y.x} to={y.hasta} color={ colors[y.cluster] } />\r\n                                            ))\r\n                                        }\r\n                                    </TimeSeries.XAxis>\r\n                                    <TimeSeries.YAxis tickAmount={6} showGridLines={false} top=\"0%\" height=\"100%\" offset={-10} title={{ text: yAxisTitle }} labels={{ format: '' }} />\r\n\r\n                                </TimeSeries>\r\n                                {\r\n\r\n                                    //const colors = ['#8c8988','#4d6fab', '#dc824f', '#55a665', '#c34c50', '#816fae', '#93765d', '#65b1c7']\r\n \r\n                                    state.response ?\r\n                                    <Grid.Row>\r\n                                        <Grid.Row>\r\n                                        <br />Cluster:<br />\r\n                                        </Grid.Row>\r\n                                        <Grid.Column  width={6}>\r\n                                            {JSON.stringify(state.response).includes('\"cluster\":0') && <div class='box clust0'>0</div>}\r\n                                        \r\n                                            {JSON.stringify(state.response).includes('\"cluster\":1') && <div class='box clust1'>1</div>}\r\n                                          \r\n                                            {JSON.stringify(state.response).includes('\"cluster\":2') && <div class='box clust2'>2</div>}\r\n                                      \r\n                                            {JSON.stringify(state.response).includes('\"cluster\":3') && <div class='box clust3'>3</div>}\r\n                                            \r\n                                            {JSON.stringify(state.response).includes('\"cluster\":4') && <div class='box clust4'>4</div>}\r\n                                            {JSON.stringify(state.response).includes('\"cluster\":5') && <div class='box clust5'>5</div>}\r\n                                            </Grid.Column>\r\n                                        </Grid.Row>\r\n                                        : <React.Fragment />\r\n                                }\r\n\r\n\r\n                                {/* <div style={{ marginTop: \"10px\", width: \"90%\" }} >\r\n\r\n                                    <HighchartsReact\r\n                                        highcharts={Highcharts}\r\n                                        //onstructorType={'stockChart'}\r\n                                        options={{\r\n                                            title: {\r\n                                                text: 'My stock chart'\r\n                                            },\r\n                                            series: [{\r\n                                                data: [1, 2, 3]\r\n                                            }]\r\n                                        }}\r\n                                    />\r\n                                </div> */}\r\n\r\n\r\n                            </div>\r\n                    }\r\n\r\n                </React.Fragment>\r\n            }\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Line\r\n","import React, { useState, useEffect } from \"react\";\nimport baseServices from '../../services/base.services';\nimport { Grid, Select } from '@scuf/common'\nimport Line2 from '../../components/charts/Line/Line2'\nimport { Fragment } from \"react\";\n//import DatTab from '../../components/common/DatTab/DatTab'\n//import KPIStat from '../../components/common/KPIStat/KPIStat'\n//import TitlePage from '../../components/TitlePage/TitlePage'\n\n\nconst url = 'modos';\nconst body0 = '?id=moperacion';\nconst bodyModels = '?id=models'\n\nconst Procesos = () => {\n\n    const [models, setModels] = useState({ models: [] });\n    const [body, setBody] = useState();\n\n    useEffect(() => {\n        const getModels = async () => {\n            try {\n                var response = await baseServices.getData(bodyModels, url);\n                if (response.data && response.data.length > 0) {\n                    setModels({ models: response.data, texto: \"-\" })\n                }\n\n            } catch (err) {\n                setTimeout(() => {\n                    getModels()\n                }, 15000);\n            }\n\n        }\n        getModels();\n\n    }, []);\n\n\n    function getDatos(modelo) {\n        const bodymop = body0 + \";\" + modelo\n        setBody({ body: bodymop })\n        return bodymop;\n    }\n\n    return (\n        <React.Fragment>\n            <Select placeholder=\"Seleccione un Modelo\" options={models.models} onChange={(value) => getDatos(value)} />\n            {\n                body ?\n                    <Grid className='m-0 p-0' >\n                        <Grid.Row>\n\n                        </Grid.Row>\n\n                        <Grid.Row >\n                            <Grid.Column xsWidth='12' sWidth='12' mWidth='12' lWidth='12' xlWidth='12'>\n                                <div style={{ padding: '0px' }}>\n                                    <Line2\n                                        url={url}\n                                        body={body.body}\n                                        yAxisTitle=''\n                                        titleCard='Modos de Operacion'\n                                    />\n\n                                    {/* <DatTab\n                                url='modos'\n                                body='?id=*'\n                                title='Modelos'\n                            /> */}\n\n                                </div>\n\n                            </Grid.Column>\n\n                        </Grid.Row>\n\n                    </Grid>\n                    :\n                    <></>\n            }\n\n\n        </React.Fragment>\n    )\n}\n\nexport default Procesos\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\n\nimport '@scuf/common/honeywell-compact-combined/theme.css'\nimport '@scuf/charts/honeywell-compact-combined/theme.css'\n//import \"@scuf/datatable/honeywell-compact-combined/theme.css\";\n\nimport Layout from './pages/Layout/Layout'\nimport Login from './pages/Login/Login'\n//import Analitica from './pages/Analitica/Analitica';\nimport DataSources from './pages/DataSources/DataSources';\nimport Models from './pages/Models/Models'\nimport Subir from './pages/SubirCSV/csv'\nimport BoxPlot from './pages/Plots/BoxPlot'\nimport ParallelPlot from './pages/Plots/ParallelPlot'\nimport Process from './pages/Process/Process'\n\nconst RouteConfig = () => {\n\n  const PrivateRoute = ({ children, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          true ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Layout route='DataSources' component={<DataSources></DataSources>} />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <PrivateRoute path=\"/Models\">\n            <Layout route='Models' component={<Models></Models>} />\n          </PrivateRoute>\n          <PrivateRoute path=\"/DataSources\">\n            <Layout route='DataSources' component={<DataSources></DataSources>} />\n          </PrivateRoute>\n          <PrivateRoute path=\"/Modos de Operacion\">\n            <Layout route='Modos de Operacion' component={<Process></Process>} />\n          </PrivateRoute>\n          <PrivateRoute path=\"/csv\">\n            <Layout route='Subir csv' component={<Subir></Subir>} />\n          </PrivateRoute>\n          <PrivateRoute path=\"/BPlot\">\n            <Layout route='Box Plot' component={<BoxPlot></BoxPlot>} />\n          </PrivateRoute>\n          <PrivateRoute path=\"/PPlot\">\n            <Layout route='Parallel Plot' component={<ParallelPlot></ParallelPlot>} />\n          </PrivateRoute>\n        </Switch>\n      </Router>\n    </Provider>\n\n  )\n}\n\nexport default RouteConfig\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RouteConfig from './RouteConfig';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n    <RouteConfig />,\n  document.getElementById('root')\n);\n\n\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 490;"],"sourceRoot":""}